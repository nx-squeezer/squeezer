var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AsyncClassMultiProvider.html",[0,0.024,1,1.295]],["body/interfaces/AsyncClassMultiProvider.html",[0,0.034,1,2.006,2,0.71,3,0.71,4,0.71,5,0.534,6,0.71,7,2.102,8,0.809,9,0.618,10,0.919,11,2.006,12,0.346,13,1.217,14,0.814,15,1.771,16,1.475,17,0.456,18,0.948,19,2.904,20,0.804,21,0.049,22,1.267,23,1.177,24,1.177,25,1.334,26,1.227,27,1.334,28,1.74,29,1.04,30,1.517,31,1.517,32,1.736,33,2.011,34,0.804,35,1.782,36,1.227,37,1.04,38,1.04,39,1.736,40,0.809,41,2.379,42,1.177,43,0.034,44,0.034]],["title/interfaces/AsyncClassProvider.html",[0,0.024,35,1.295]],["body/interfaces/AsyncClassProvider.html",[0,0.034,1,1.785,2,0.711,3,0.711,4,0.711,5,0.536,6,0.711,7,2.103,8,0.811,9,0.62,10,0.92,11,2.009,12,0.346,13,1.083,14,0.815,15,1.773,16,1.476,17,0.457,18,0.949,19,2.906,20,0.805,21,0.049,22,1.268,23,1.18,24,1.18,25,1.337,26,1.229,27,1.337,28,1.742,29,1.043,30,1.52,31,1.52,32,1.74,33,2.016,34,0.805,35,2.009,36,1.229,37,1.043,38,1.043,39,1.74,40,0.811,41,2.385,42,1.18,43,0.034,44,0.034]],["title/interfaces/AsyncFactoryMultiProvider.html",[0,0.024,45,1.295]],["body/interfaces/AsyncFactoryMultiProvider.html",[0,0.033,2,0.689,3,0.689,4,0.689,5,0.518,6,0.689,8,0.785,9,0.6,10,0.932,11,1.976,12,0.347,13,1.199,14,0.82,15,1.744,16,1.457,17,0.443,18,0.929,20,0.791,21,0.049,22,1.258,23,1.142,24,1.142,25,1.294,26,1.203,27,1.294,28,1.723,29,1.009,34,0.847,36,1.203,37,1.009,38,1.009,40,0.785,42,1.142,43,0.033,44,0.033,45,1.976,46,2.397,47,2.875,48,1.744,49,1.142,50,1.142,51,1.951,52,1.472,53,1.746,54,1.685,55,2.309]],["title/interfaces/AsyncFactoryProvider.html",[0,0.024,53,1.295]],["body/interfaces/AsyncFactoryProvider.html",[0,0.033,2,0.69,3,0.69,4,0.69,5,0.52,6,0.69,8,0.787,9,0.601,10,0.932,11,1.978,12,0.347,13,1.061,14,0.82,15,1.746,16,1.458,17,0.444,18,0.93,20,0.792,21,0.049,22,1.259,23,1.145,24,1.145,25,1.297,26,1.204,27,1.297,28,1.724,29,1.012,34,0.848,36,1.204,37,1.012,38,1.012,40,0.787,42,1.145,43,0.033,44,0.033,45,1.749,46,2.398,47,2.877,48,1.746,49,1.145,50,1.145,51,1.956,52,1.475,53,1.978,54,1.688,55,2.314]],["title/interfaces/AsyncMultiProvider.html",[0,0.024,26,0.892]],["body/interfaces/AsyncMultiProvider.html",[0,0.034,2,0.949,3,0.949,4,0.949,5,0.714,6,0.949,8,1.082,9,0.827,10,0.714,12,0.253,13,1.501,14,0.785,17,0.61,18,1.14,21,0.047,26,1.476,34,0.714,43,0.04,44,0.04,56,3.23,57,4.719,58,3.23,59,2.322]],["title/interfaces/AsyncProviderConfig.html",[0,0.024,16,0.892]],["body/interfaces/AsyncProviderConfig.html",[0,0.028,2,0.792,3,0.792,4,0.792,5,0.596,6,0.792,9,0.69,10,0.767,12,0.318,14,0.724,16,1.318,17,0.509,18,1.019,21,0.049,22,0.792,34,0.596,43,0.036,44,0.036,49,1.69,60,2.655,61,3.415,62,2.886,63,3.369,64,2.908,65,3.485,66,3.485,67,1.972,68,4.217,69,4.217,70,4.217,71,2.886,72,3.415,73,2.177,74,2.886,75,2.886,76,2.54,77,1.914,78,3.369,79,3.415,80,1.937]],["title/interfaces/AsyncValueMultiProvider.html",[0,0.024,81,1.295]],["body/interfaces/AsyncValueMultiProvider.html",[0,0.034,2,0.723,3,0.723,4,0.723,5,0.545,6,0.723,8,0.825,9,0.63,10,0.899,11,2.025,12,0.347,13,1.229,14,0.818,15,1.788,16,1.486,17,0.465,18,0.96,20,0.811,21,0.049,22,1.253,23,1.2,24,1.2,25,1.36,26,1.243,27,1.36,28,1.751,29,1.06,34,0.811,36,1.243,37,1.06,38,1.06,40,0.825,42,1.2,43,0.034,44,0.034,81,2.025,82,2.111,83,2.553,84,1.804,85,1.77,86,2.425]],["title/interfaces/AsyncValueProvider.html",[0,0.024,84,1.295]],["body/interfaces/AsyncValueProvider.html",[0,0.034,2,0.725,3,0.725,4,0.725,5,0.546,6,0.725,8,0.827,9,0.632,10,0.9,11,2.028,12,0.348,13,1.096,14,0.818,15,1.79,16,1.487,17,0.466,18,0.962,20,0.812,21,0.049,22,1.254,23,1.203,24,1.203,25,1.363,26,1.245,27,1.363,28,1.753,29,1.063,34,0.812,36,1.245,37,1.063,38,1.063,40,0.827,42,1.203,43,0.034,44,0.034,81,1.807,82,2.112,83,2.555,84,2.028,85,1.774,86,2.431]],["title/interfaces/InjectionContext.html",[0,0.024,48,1.143]],["body/interfaces/InjectionContext.html",[0,0.031,2,0.872,3,0.872,4,0.872,5,0.657,9,0.76,12,0.289,17,0.56,18,1.083,20,0.971,21,0.049,22,1.083,34,0.657,43,0.038,44,0.038,48,1.796,49,1.796,50,1.796,67,1.447,80,2.133,87,2.471,88,2.924,89,2.867,90,2.425,91,2.924,92,2.924,93,3.61,94,3.61]],["title/directives/ResolveAsyncProvidersDirective.html",[95,1.295,96,1.685]],["body/directives/ResolveAsyncProvidersDirective.html",[3,0.334,4,0.334,5,0.252,7,1.736,9,0.291,10,0.763,12,0.332,14,0.348,17,0.215,21,0.05,22,0.785,29,1.001,34,0.408,37,0.794,40,0.617,42,1.532,43,0.019,44,0.019,50,1.736,52,0.714,59,2.691,62,0.947,64,1.921,67,1.68,73,0.714,76,0.714,77,2.143,78,0.947,80,0.817,82,1.431,83,1.678,89,1.459,90,1.018,91,1.815,92,1.12,95,1.828,96,2.561,97,0.947,98,1.935,99,0.947,100,1.157,101,1.815,102,3.76,103,1.325,104,1.944,105,1.815,106,1.815,107,1.815,108,1.815,109,1.815,110,1.815,111,2.632,112,2.225,113,1.815,114,1.534,115,1.534,116,1.815,117,3.76,118,1.921,119,3.096,120,2.632,121,2.632,122,3.396,123,3.509,124,3.396,125,3.396,126,2.632,127,3.096,128,2.632,129,2.632,130,3.509,131,1.815,132,1.815,133,1.534,134,1.325,135,1.534,136,1.534,137,1.815,138,1.935,139,2.225,140,1.815,141,2.632,142,2.289,143,1.815,144,2.242,145,2.826,146,2.826,147,1.383,148,2.242,149,2.242,150,2.242,151,2.826,152,2.242,153,1.815,154,2.242,155,2.632,156,1.383,157,1.815,158,1.534,159,1.815,160,1.383,161,1.383,162,1.67,163,2.289,164,1.12,165,2.242,166,0.817,167,2.632,168,1.383,169,2.242,170,2.242,171,2.892,172,1.383,173,1.383,174,1.383,175,1.383,176,2.242,177,2.242,178,3.261,179,1.383,180,1.383,181,1.383,182,1.383,183,1.383,184,1.383,185,1.383,186,1.383,187,1.383,188,1.383,189,1.383,190,1.383,191,1.383,192,1.383,193,1.383,194,1.383,195,1.383,196,1.383,197,1.383,198,1.383,199,2.242,200,1.383,201,2.826,202,2.242,203,0.947,204,2.242,205,1.383]],["title/interfaces/TypeWithoutConstructorParams.html",[0,0.024,30,1.472]],["body/interfaces/TypeWithoutConstructorParams.html",[0,0.034,2,0.97,3,0.97,4,0.97,5,0.731,7,1.61,9,0.846,10,0.731,12,0.259,15,1.917,20,0.87,21,0.046,30,2.469,31,2.469,32,2.826,33,2.75,34,0.731,43,0.041,44,0.041,52,2.074,100,2.074,104,1.61,206,3.253,207,3.253,208,2.75]],["title/changelog.html",[209,1.947,210,1.947,211,1.947]],["body/changelog.html",[5,0.526,12,0.25,21,0.042,43,0.033,44,0.033,67,1.555,211,2.341,212,2.89,213,1.979,214,2.89,215,2.341,216,4.888,217,5.033,218,2.89,219,2.89,220,4.888,221,2.89,222,2.89,223,2.89,224,4.685,225,4.685,226,4.685,227,3.958,228,2.89,229,2.89,230,2.89,231,2.89,232,5.396,233,2.89,234,4.685,235,3.882,236,3.882,237,2.769,238,4.383,239,3.549,240,3.882,241,2.89,242,4.685,243,3.882,244,3.882,245,2.89,246,2.89,247,2.89,248,2.89,249,2.89,250,2.89,251,2.89,252,2.89,253,3.882,254,4.383,255,2.657,256,2.89,257,2.89,258,2.89,259,2.89,260,2.89,261,2.89,262,2.89,263,4.888,264,3.882,265,2.89,266,2.89,267,2.89,268,2.89,269,4.383,270,3.882,271,2.89,272,2.89,273,2.341,274,2.89,275,2.89,276,2.89,277,2.89,278,2.89,279,2.341,280,2.89,281,2.89,282,2.89,283,2.89,284,2.89,285,2.89,286,2.341,287,2.89]],["title/coverage.html",[288,2.633]],["body/coverage.html",[0,0.045,1,1.238,5,0.496,6,1.29,7,1.704,8,1.471,10,0.496,12,0.176,13,1.028,14,0.423,16,0.852,20,0.962,21,0.048,26,0.852,30,1.407,31,1.407,32,1.611,35,1.238,39,1.611,43,0.032,44,0.032,45,1.238,46,1.931,48,1.092,53,1.238,54,1.611,60,2.208,81,1.238,82,1.704,84,1.238,85,1.611,87,1.866,88,2.208,90,1.238,95,1.238,96,1.611,98,1.866,99,1.866,118,2.513,206,2.208,207,2.208,208,1.866,288,1.866,289,2.208,290,2.726,291,2.726,292,4.543,293,4.253,294,2.208,295,2.208,296,5.385,297,3.444,298,3.444,299,2.513,300,2.208,301,2.726,302,5.064,303,3.444,304,3.444,305,2.726,306,2.726]],["title/dependencies.html",[255,1.646,307,2.02]],["body/dependencies.html",[21,0.046,43,0.043,44,0.043,80,2.546,307,2.945,308,4.309,309,4.309,310,4.309,311,4.309]],["title/miscellaneous/functions.html",[312,1.092,313,2.02]],["body/miscellaneous/functions.html",[1,1.007,6,0.677,7,1.292,8,1.149,10,0.841,12,0.324,13,1.047,14,0.73,17,0.212,19,1.906,20,0.759,21,0.049,22,0.33,24,0.547,28,1.712,34,0.645,35,0.62,36,1.008,37,1.142,38,1.142,39,1.31,40,0.771,43,0.019,44,0.019,45,1.007,46,1.61,47,1.31,48,0.889,49,1.122,50,0.889,52,1.665,53,0.62,54,1.31,56,0.934,58,2.601,59,1.31,62,3.034,63,1.518,64,2.549,65,1.518,66,0.934,67,0.547,71,0.934,73,0.705,74,0.934,75,0.934,76,1.145,77,1.61,81,1.007,82,1.672,83,1.962,84,0.62,85,1.31,89,1.665,90,1.464,97,0.934,100,1.962,103,0.807,104,1.96,112,3.034,114,1.518,115,0.934,118,2.733,133,1.518,134,1.655,135,1.917,136,0.934,139,2.601,155,1.105,157,1.105,162,0.807,164,3.59,166,2.68,203,2.207,213,1.518,237,1.31,294,1.105,295,1.796,297,1.105,298,2.611,299,2.466,303,1.105,304,2.611,307,0.807,312,0.62,313,1.906,314,2.268,315,1.365,316,2.801,317,2.268,318,1.365,319,1.365,320,1.365,321,1.365,322,1.365,323,1.105,324,1.796,325,1.105,326,1.796,327,1.105,328,1.105,329,0.807,330,1.105,331,1.105,332,1.796,333,1.796,334,1.105,335,1.796,336,1.105,337,1.796,338,2.611,339,1.105,340,5.065,341,1.365,342,2.801,343,1.105,344,1.105,345,1.796,346,3.225,347,1.796,348,3.077,349,2.218,350,2.872,351,1.105,352,1.365,353,1.105,354,1.105,355,1.105,356,1.105,357,1.105,358,1.365,359,1.105,360,1.796,361,1.796,362,1.365,363,1.105,364,2.801,365,1.365,366,1.105,367,1.105,368,1.105,369,1.105,370,1.365,371,1.105,372,1.105,373,1.105,374,1.105,375,1.105,376,1.105,377,1.518,378,1.105,379,1.518,380,1.105,381,1.365,382,1.105,383,1.105,384,1.518,385,1.105,386,1.105,387,1.105,388,1.365,389,1.105,390,1.105,391,1.105,392,1.105,393,1.105,394,1.105,395,1.105,396,1.105,397,1.105,398,1.105,399,1.105,400,1.365,401,1.105,402,1.365,403,1.365,404,1.796,405,1.105,406,1.796,407,1.105,408,2.801,409,1.365,410,1.796,411,2.801,412,1.365,413,2.218,414,1.365,415,2.218,416,1.365,417,1.365,418,1.365,419,1.917,420,0.934,421,0.934,422,0.934,423,0.934,424,0.934,425,0.934,426,1.365,427,1.365,428,1.105,429,1.365,430,2.801,431,1.105,432,1.105,433,1.365,434,1.105,435,1.365,436,1.105,437,1.105,438,2.218]],["title/index.html",[17,0.373,209,1.947,210,1.947]],["body/index.html",[7,1.461,12,0.33,13,0.817,14,0.677,19,1.752,20,0.718,21,0.049,22,0.538,31,0.511,34,0.663,36,0.531,38,0.934,40,0.613,43,0.015,44,0.015,46,0.77,47,1.315,48,0.68,49,0.892,50,0.892,56,0.678,58,1.805,59,2.25,61,1.374,63,1.162,64,2.623,65,2.366,66,1.162,67,1.526,71,0.678,72,0.802,73,0.876,74,1.162,75,1.524,76,0.876,77,1.98,79,0.802,82,1.296,83,1.882,89,1.531,90,1.941,95,1.569,96,1.315,97,0.678,100,1.966,101,0.802,102,2.799,103,1.003,104,2,105,1.374,106,1.374,107,2.618,108,1.374,109,1.374,110,0.802,111,1.374,112,0.678,113,0.802,114,2.03,115,1.162,116,0.802,117,3.703,118,2.47,119,1.802,120,1.374,121,1.802,122,2.401,123,2.401,124,2.135,125,2.135,126,1.802,127,1.374,128,1.802,129,1.374,130,2.401,131,0.802,132,0.802,133,1.162,134,0.585,135,1.524,136,1.524,137,2.135,138,2.213,139,2.366,140,0.802,141,1.374,142,0.802,143,0.802,153,1.374,158,1.524,159,0.802,162,0.585,166,0.585,178,1.374,203,2.213,208,0.678,213,2.927,227,2.135,237,1.558,239,1.374,273,0.802,279,0.802,286,1.374,288,0.678,289,1.802,292,0.802,299,1.315,307,0.585,313,1.315,323,2.135,324,1.374,325,1.374,326,1.374,327,0.802,328,0.802,329,0.585,330,0.802,331,1.374,332,2.135,333,1.374,334,1.802,335,1.374,336,0.802,337,1.374,338,2.953,339,2.953,343,1.374,344,0.802,345,1.374,347,1.374,348,2.618,350,2.401,351,0.802,353,0.802,354,0.802,355,0.802,356,0.802,357,0.802,359,0.802,360,1.374,361,1.374,363,0.802,366,0.802,367,0.802,368,0.802,369,0.802,371,0.802,372,0.802,373,0.802,374,1.374,375,0.802,376,0.802,377,1.524,378,0.802,379,1.805,380,0.802,382,0.802,383,1.374,384,1.805,385,0.802,386,2.618,387,0.802,389,0.802,390,0.802,391,1.802,392,0.802,393,0.802,394,0.802,395,0.802,396,0.802,397,0.802,398,0.802,399,0.802,401,2.135,404,1.374,405,0.802,406,1.374,407,0.802,419,2.496,420,0.678,421,1.162,422,0.678,423,0.678,424,0.678,425,1.524,428,0.802,431,1.374,432,1.374,434,1.374,436,1.374,437,0.802,439,1.697,440,1.697,441,1.697,442,1.697,443,2.637,444,2.965,445,1.697,446,1.374,447,0.991,448,0.991,449,0.991,450,2.226,451,2.637,452,0.991,453,2.637,454,0.991,455,0.991,456,0.991,457,0.991,458,1.697,459,0.991,460,0.991,461,1.697,462,0.991,463,0.991,464,2.226,465,2.965,466,0.991,467,2.226,468,0.991,469,0.991,470,0.991,471,1.697,472,0.991,473,0.991,474,1.697,475,1.697,476,0.991,477,1.697,478,0.991,479,0.991,480,2.637,481,0.991,482,0.991,483,0.991,484,0.991,485,0.991,486,0.991,487,0.991,488,0.991,489,1.697,490,0.991,491,0.991,492,0.991,493,0.991,494,0.991,495,0.991,496,0.991,497,0.991,498,0.991,499,0.991,500,0.991,501,1.697,502,0.991,503,0.991,504,0.991,505,0.991,506,0.991,507,0.991,508,1.374,509,0.991,510,0.991,511,0.991,512,1.697,513,0.991,514,2.226,515,1.697,516,0.991,517,1.697,518,2.637,519,0.991,520,0.991,521,0.991,522,0.991,523,0.991,524,0.991,525,0.991,526,0.991,527,0.991,528,0.991,529,0.991,530,0.991,531,0.991,532,0.991,533,0.991,534,1.697,535,0.991,536,1.697,537,0.991,538,0.991,539,0.991,540,0.991,541,0.991,542,0.991,543,0.991,544,0.991,545,0.991,546,1.697,547,0.991,548,0.991,549,0.991,550,0.991,551,0.991,552,0.991,553,0.991,554,0.991,555,0.991,556,2.637,557,1.697,558,0.991,559,0.991,560,2.226,561,0.991,562,0.991,563,0.991,564,0.991,565,0.991,566,0.991,567,0.991,568,0.991,569,0.991,570,0.991,571,0.991,572,0.991,573,0.991,574,1.697,575,0.991]],["title/modules.html",[329,2.273]],["body/modules.html",[21,0.043,43,0.043,44,0.043,329,2.619]],["title/overview.html",[576,3.115]],["body/overview.html",[2,1.055,21,0.043,43,0.043,44,0.043,95,1.984,576,3.538,577,4.37,578,4.37]],["title/properties.html",[18,0.826,255,1.646]],["body/properties.html",[9,0.819,12,0.325,18,0.94,21,0.048,43,0.04,44,0.04,49,1.88,67,1.56,104,1.56,158,2.664,215,3.152,237,2.773,446,3.8,508,3.152,579,3.892,580,3.892,581,3.892,582,3.892,583,4.693,584,3.892,585,3.892,586,3.892,587,3.892,588,3.892,589,3.892,590,3.892,591,3.892,592,3.892,593,3.892]],["title/miscellaneous/typealiases.html",[312,1.092,594,3.418]],["body/miscellaneous/typealiases.html",[1,1.508,6,1.133,8,1.362,10,0.93,12,0.337,14,0.728,17,0.516,20,0.604,21,0.046,23,1.704,28,1.506,29,1.661,35,1.508,43,0.036,44,0.036,45,1.508,46,2.13,50,1.331,51,2.911,53,1.508,76,2.553,77,1.508,81,1.508,84,1.508,87,2.274,95,1.508,98,2.274,99,2.911,104,1.704,134,2.513,138,2.274,162,1.963,163,2.69,167,3.444,171,3.444,312,1.508,314,3.799,317,2.69,410,3.444,595,3.322,596,3.322,597,4.253,598,4.253,599,4.253,600,4.691,601,4.946,602,4.253,603,3.322,604,3.322,605,3.322]],["title/miscellaneous/variables.html",[312,1.092,606,2.768]],["body/miscellaneous/variables.html",[12,0.321,14,0.588,17,0.588,20,0.688,21,0.046,36,1.443,40,1.271,43,0.04,44,0.04,73,1.954,77,2.095,78,3.159,82,1.849,89,1.954,90,2.26,100,2.382,103,2.237,104,1.849,166,2.237,299,2.237,300,3.066,312,1.719,313,2.237,377,2.591,379,2.591,384,2.591,419,3.159,420,2.591,421,2.591,422,2.591,423,2.591,424,2.591,425,2.591,606,3.066,607,3.786,608,3.786]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["009816c",{"_index":247,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":217,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":234,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":263,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":253,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":220,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":218,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":577,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":284,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":276,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":268,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":267,"title":{},"body":{"changelog.html":{}}}],["1.0.4",{"_index":266,"title":{},"body":{"changelog.html":{}}}],["1.0.5",{"_index":265,"title":{},"body":{"changelog.html":{}}}],["1.0.6",{"_index":262,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":578,"title":{},"body":{"overview.html":{}}}],["100",{"_index":292,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["1013",{"_index":246,"title":{},"body":{"changelog.html":{}}}],["1099",{"_index":229,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":233,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":269,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":254,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":264,"title":{},"body":{"changelog.html":{}}}],["17.0.0",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["2.0.0",{"_index":252,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":250,"title":{},"body":{"changelog.html":{}}}],["2.0.2",{"_index":248,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["2023",{"_index":232,"title":{},"body":{"changelog.html":{}}}],["2024",{"_index":216,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":251,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":249,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":231,"title":{},"body":{"changelog.html":{}}}],["3.0.1",{"_index":223,"title":{},"body":{"changelog.html":{}}}],["3.0.2",{"_index":222,"title":{},"body":{"changelog.html":{}}}],["3.0.3",{"_index":221,"title":{},"body":{"changelog.html":{}}}],["3.0.4",{"_index":219,"title":{},"body":{"changelog.html":{}}}],["3.0.5",{"_index":215,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["3/3",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["39;&#39",{"_index":433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["39;@nx",{"_index":400,"title":{},"body":{"miscellaneous/functions.html":{}}}],["39;eager&#39",{"_index":381,"title":{},"body":{"miscellaneous/functions.html":{}}}],["39;value&#39",{"_index":358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["5234f18",{"_index":275,"title":{},"body":{"changelog.html":{}}}],["527",{"_index":282,"title":{},"body":{"changelog.html":{}}}],["58e28fa",{"_index":241,"title":{},"body":{"changelog.html":{}}}],["679",{"_index":260,"title":{},"body":{"changelog.html":{}}}],["681",{"_index":257,"title":{},"body":{"changelog.html":{}}}],["682",{"_index":258,"title":{},"body":{"changelog.html":{}}}],["733a9f8",{"_index":261,"title":{},"body":{"changelog.html":{}}}],["85f83e1",{"_index":230,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":165,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["_all_",{"_index":176,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["_asyncinjectorinitializer",{"_index":180,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["above",{"_index":496,"title":{},"body":{"index.html":{}}}],["actually",{"_index":522,"title":{},"body":{"index.html":{}}}],["add",{"_index":272,"title":{},"body":{"changelog.html":{}}}],["additionally",{"_index":132,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["afterwards",{"_index":389,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["against",{"_index":393,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["ahead",{"_index":565,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":595,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":237,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["angular's",{"_index":425,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/core",{"_index":80,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"dependencies.html":{}}}],["another",{"_index":474,"title":{},"body":{"index.html":{}}}],["any).useasyncclass",{"_index":41,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{}}}],["any).useasyncfactory",{"_index":55,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{}}}],["any).useasyncvalue",{"_index":86,"title":{},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{}}}],["api",{"_index":444,"title":{},"body":{"index.html":{}}}],["app",{"_index":466,"title":{},"body":{"index.html":{}}}],["app_initializer",{"_index":467,"title":{},"body":{"index.html":{}}}],["application",{"_index":527,"title":{},"body":{"index.html":{}}}],["approach",{"_index":544,"title":{},"body":{"index.html":{}}}],["approutes",{"_index":533,"title":{},"body":{"index.html":{}}}],["array",{"_index":24,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"miscellaneous/functions.html":{}}}],["arrayitemtype",{"_index":23,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"miscellaneous/typealiases.html":{}}}],["arrow_up",{"_index":240,"title":{},"body":{"changelog.html":{}}}],["async",{"_index":12,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["async.function.ts",{"_index":304,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["async_injector_initializer",{"_index":173,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["asyncclassmultiprovider",{"_index":1,"title":{"interfaces/AsyncClassMultiProvider.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncclassprovider",{"_index":35,"title":{"interfaces/AsyncClassProvider.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncfactorymultiprovider",{"_index":45,"title":{"interfaces/AsyncFactoryMultiProvider.html":{}},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncfactoryprovider",{"_index":53,"title":{"interfaces/AsyncFactoryProvider.html":{}},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncfactorywithinjectioncontext",{"_index":51,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"miscellaneous/typealiases.html":{}}}],["asynchronous",{"_index":451,"title":{},"body":{"index.html":{}}}],["asynchronously",{"_index":459,"title":{},"body":{"index.html":{}}}],["asyncinjector",{"_index":91,"title":{},"body":{"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{}}}],["asyncinjector['resolve",{"_index":94,"title":{},"body":{"interfaces/InjectionContext.html":{}}}],["asyncmultiprovider",{"_index":26,"title":{"interfaces/AsyncMultiProvider.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{}}}],["asyncproviderconfig",{"_index":16,"title":{"interfaces/AsyncProviderConfig.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{}}}],["asyncproviders",{"_index":436,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["asyncprovidertypes",{"_index":410,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncstaticprovider",{"_index":28,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncstaticproviders",{"_index":413,"title":{},"body":{"miscellaneous/functions.html":{}}}],["asyncvaluemultiprovider",{"_index":81,"title":{"interfaces/AsyncValueMultiProvider.html":{}},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncvalueprovider",{"_index":84,"title":{"interfaces/AsyncValueProvider.html":{}},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["author",{"_index":592,"title":{},"body":{"properties.html":{}}}],["available",{"_index":137,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["await",{"_index":361,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["base",{"_index":416,"title":{},"body":{"miscellaneous/functions.html":{}}}],["before",{"_index":384,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["behavior",{"_index":367,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["being",{"_index":428,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["between",{"_index":395,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["blocking",{"_index":471,"title":{},"body":{"index.html":{}}}],["blocks",{"_index":545,"title":{},"body":{"index.html":{}}}],["bootstrapapplication(appcomponent",{"_index":338,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["break",{"_index":454,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":235,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":224,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":585,"title":{},"body":{"properties.html":{}}}],["bundle",{"_index":477,"title":{},"body":{"index.html":{}}}],["called",{"_index":396,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["can&#39;t",{"_index":388,"title":{},"body":{"miscellaneous/functions.html":{}}}],["can't",{"_index":563,"title":{},"body":{"index.html":{}}}],["case",{"_index":536,"title":{},"body":{"index.html":{}}}],["caused",{"_index":478,"title":{},"body":{"index.html":{}}}],["cdr",{"_index":184,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["certain",{"_index":103,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["changedetection",{"_index":124,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["changedetectionstrategy.onpush",{"_index":125,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["changedetectorref",{"_index":168,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["changelog",{"_index":211,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":236,"title":{},"body":{"changelog.html":{}}}],["check",{"_index":38,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["child",{"_index":128,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["childcomponent",{"_index":122,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["class",{"_index":7,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["class_provider",{"_index":345,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["code",{"_index":386,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["collection",{"_index":412,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common",{"_index":475,"title":{},"body":{"index.html":{}}}],["compared",{"_index":424,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["completed",{"_index":542,"title":{},"body":{"index.html":{}}}],["completion",{"_index":380,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["component",{"_index":117,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["components",{"_index":330,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["config",{"_index":27,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{}}}],["config.ts",{"_index":60,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"coverage.html":{}}}],["config_token",{"_index":550,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":61,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["cons",{"_index":470,"title":{},"body":{"index.html":{}}}],["const",{"_index":203,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{}}}],["consume",{"_index":460,"title":{},"body":{"index.html":{}}}],["consumption",{"_index":521,"title":{},"body":{"index.html":{}}}],["context",{"_index":50,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["context.ts",{"_index":88,"title":{},"body":{"interfaces/InjectionContext.html":{},"coverage.html":{}}}],["contrary",{"_index":372,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["controlled",{"_index":368,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["coverage",{"_index":288,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cyclic",{"_index":394,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["data",{"_index":458,"title":{},"body":{"index.html":{}}}],["declaration",{"_index":374,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["declare",{"_index":323,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["declared",{"_index":332,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["declaring",{"_index":337,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["default",{"_index":73,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":11,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{}}}],["defined",{"_index":155,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{}}}],["defines",{"_index":57,"title":{},"body":{"interfaces/AsyncMultiProvider.html":{}}}],["delay",{"_index":106,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["delays",{"_index":472,"title":{},"body":{"index.html":{}}}],["demand",{"_index":549,"title":{},"body":{"index.html":{}}}],["demo",{"_index":532,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":307,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["dependency",{"_index":446,"title":{},"body":{"index.html":{},"properties.html":{}}}],["deps",{"_index":242,"title":{},"body":{"changelog.html":{}}}],["described",{"_index":495,"title":{},"body":{"index.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"properties.html":{}}}],["designed",{"_index":448,"title":{},"body":{"index.html":{}}}],["destroyed",{"_index":187,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["di",{"_index":158,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{},"properties.html":{}}}],["diagram",{"_index":525,"title":{},"body":{"index.html":{}}}],["different",{"_index":344,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["directive",{"_index":95,"title":{"directives/ResolveAsyncProvidersDirective.html":{}},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["directives",{"_index":97,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["documentation",{"_index":289,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["done",{"_index":528,"title":{},"body":{"index.html":{}}}],["e2fd0a8",{"_index":259,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":326,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["eager",{"_index":66,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["ensure",{"_index":420,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["entry",{"_index":280,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":71,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["even",{"_index":375,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["example",{"_index":139,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["examples",{"_index":441,"title":{},"body":{"index.html":{}}}],["executing",{"_index":385,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["existing",{"_index":455,"title":{},"body":{"index.html":{}}}],["explanatory",{"_index":399,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["export",{"_index":34,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["exposes",{"_index":162,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":15,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/TypeWithoutConstructorParams.html":{}}}],["f23e180",{"_index":283,"title":{},"body":{"changelog.html":{}}}],["factory",{"_index":46,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["factory.ts",{"_index":359,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["factory_provider",{"_index":351,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["false",{"_index":188,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["features",{"_index":239,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"changelog.html":{},"coverage.html":{}}}],["finally",{"_index":366,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["fine",{"_index":493,"title":{},"body":{"index.html":{}}}],["first",{"_index":354,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["firstservice",{"_index":356,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["firststring",{"_index":404,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["firstvaluefrom(inject(httpclient).get('/config",{"_index":551,"title":{},"body":{"index.html":{}}}],["fix",{"_index":278,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":225,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":56,"title":{},"body":{"interfaces/AsyncMultiProvider.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["flexibility",{"_index":504,"title":{},"body":{"index.html":{}}}],["full",{"_index":552,"title":{},"body":{"index.html":{}}}],["function",{"_index":20,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":313,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["generated",{"_index":212,"title":{},"body":{"changelog.html":{}}}],["getting",{"_index":209,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["git+https://github.com/nx",{"_index":590,"title":{},"body":{"properties.html":{}}}],["give",{"_index":503,"title":{},"body":{"index.html":{}}}],["go",{"_index":564,"title":{},"body":{"index.html":{}}}],["grained",{"_index":494,"title":{},"body":{"index.html":{}}}],["great",{"_index":485,"title":{},"body":{"index.html":{}}}],["gt",{"_index":340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["guard",{"_index":37,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{}}}],["happens",{"_index":363,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["having",{"_index":450,"title":{},"body":{"index.html":{}}}],["help",{"_index":502,"title":{},"body":{"index.html":{}}}],["hierarchy",{"_index":116,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["homepage",{"_index":582,"title":{},"body":{"properties.html":{}}}],["https://github.com/nx",{"_index":583,"title":{},"body":{"properties.html":{}}}],["identical",{"_index":520,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["implementation",{"_index":417,"title":{},"body":{"miscellaneous/functions.html":{}}}],["implementers",{"_index":505,"title":{},"body":{"index.html":{}}}],["implements",{"_index":144,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["implicit",{"_index":204,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["import(&#39;./factory&#39;).then((x",{"_index":352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["import(&#39;./first",{"_index":346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["import(&#39;./my",{"_index":341,"title":{},"body":{"miscellaneous/functions.html":{}}}],["import(&#39;./route.component&#39",{"_index":435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["import(&#39;./second",{"_index":365,"title":{},"body":{"miscellaneous/functions.html":{}}}],["import(&#39;./value&#39;).then((x",{"_index":349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["import('./factory').then((x",{"_index":558,"title":{},"body":{"index.html":{}}}],["import('./first",{"_index":556,"title":{},"body":{"index.html":{}}}],["import('./my",{"_index":517,"title":{},"body":{"index.html":{}}}],["import('./route.component",{"_index":534,"title":{},"body":{"index.html":{}}}],["import('./second",{"_index":561,"title":{},"body":{"index.html":{}}}],["import('./value').then((x",{"_index":557,"title":{},"body":{"index.html":{}}}],["imports",{"_index":121,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["increasing",{"_index":483,"title":{},"body":{"index.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{}}}],["initial",{"_index":286,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["initializer.token",{"_index":175,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["initializes",{"_index":72,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["inject",{"_index":89,"title":{},"body":{"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inject(async_injector_initializer",{"_index":181,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inject(asyncinjector",{"_index":179,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inject(asyncinjector).resolve(injectiontoken",{"_index":608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(changedetectorref",{"_index":185,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inject(httpclient).get('/config",{"_index":548,"title":{},"body":{"index.html":{}}}],["inject(my_service",{"_index":515,"title":{},"body":{"index.html":{}}}],["inject(second_injection_token",{"_index":407,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["inject(string_injector_token",{"_index":131,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["inject(templateref",{"_index":183,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inject(viewcontainerref",{"_index":182,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["injected",{"_index":538,"title":{},"body":{"index.html":{}}}],["injectedtext",{"_index":129,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["injection",{"_index":49,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/InjectionContext.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["injectioncontext",{"_index":48,"title":{"interfaces/InjectionContext.html":{}},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/InjectionContext.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["injectiontoken",{"_index":78,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('my",{"_index":555,"title":{},"body":{"index.html":{}}}],["injectiontokens",{"_index":430,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectiontokentype",{"_index":599,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["injectiontokentypecollection",{"_index":602,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["injectiontokentypemap",{"_index":171,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/typealiases.html":{}}}],["injector",{"_index":67,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["injector&#39",{"_index":402,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injector/async",{"_index":92,"title":{},"body":{"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{}}}],["injectors",{"_index":115,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["input",{"_index":142,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["input('ngxresolveasyncproviders",{"_index":186,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inputs",{"_index":152,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inputtext",{"_index":141,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["inside",{"_index":537,"title":{},"body":{"index.html":{}}}],["install",{"_index":574,"title":{},"body":{"index.html":{}}}],["installation",{"_index":445,"title":{},"body":{"index.html":{}}}],["instantiating",{"_index":500,"title":{},"body":{"index.html":{}}}],["instead",{"_index":136,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["integration",{"_index":569,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"interfaces/TypeWithoutConstructorParams.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"overview.html":{}}}],["interfaces/injection",{"_index":172,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["isasyncclassprovider",{"_index":39,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isasyncclassprovider(asyncstaticprovider",{"_index":318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isasyncfactoryprovider",{"_index":54,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isasyncfactoryprovider(asyncstaticprovider",{"_index":319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isasyncvalueprovider",{"_index":85,"title":{},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isasyncvalueprovider(asyncstaticprovider",{"_index":320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ismultiprovider",{"_index":295,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ismultiprovider(asyncstaticprovider",{"_index":321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["item",{"_index":25,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{}}}],["item.ts",{"_index":597,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["itself",{"_index":382,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["jscutlery/semver",{"_index":214,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keyed",{"_index":604,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keywords",{"_index":581,"title":{},"body":{"properties.html":{}}}],["known",{"_index":469,"title":{},"body":{"index.html":{}}}],["later",{"_index":499,"title":{},"body":{"index.html":{}}}],["lazy",{"_index":65,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["library",{"_index":508,"title":{},"body":{"index.html":{},"properties.html":{}}}],["license",{"_index":587,"title":{},"body":{"properties.html":{}}}],["list",{"_index":157,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{}}}],["live",{"_index":531,"title":{},"body":{"index.html":{}}}],["load",{"_index":114,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["loadcomponent",{"_index":434,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["loaded",{"_index":465,"title":{},"body":{"index.html":{}}}],["loading",{"_index":107,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["loads",{"_index":421,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":516,"title":{},"body":{"index.html":{}}}],["main",{"_index":279,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["main.ts",{"_index":512,"title":{},"body":{"index.html":{}}}],["major",{"_index":245,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":452,"title":{},"body":{"index.html":{}}}],["many",{"_index":488,"title":{},"body":{"index.html":{}}}],["many.ts",{"_index":298,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["map",{"_index":134,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["matching",{"_index":44,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["means",{"_index":369,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["memo",{"_index":271,"title":{},"body":{"changelog.html":{}}}],["metadata",{"_index":147,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["methods",{"_index":150,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["miscellaneous",{"_index":312,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":588,"title":{},"body":{"properties.html":{}}}],["mode",{"_index":63,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["modules",{"_index":329,"title":{"modules.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{},"modules.html":{}}}],["monorepo",{"_index":244,"title":{},"body":{"changelog.html":{}}}],["more",{"_index":325,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["motivation",{"_index":439,"title":{},"body":{"index.html":{}}}],["much",{"_index":108,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["multi",{"_index":13,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["multiple",{"_index":58,"title":{},"body":{"interfaces/AsyncMultiProvider.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["my_service",{"_index":339,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["myservice",{"_index":514,"title":{},"body":{"index.html":{}}}],["name",{"_index":164,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":331,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["needed",{"_index":379,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["needing",{"_index":479,"title":{},"body":{"index.html":{}}}],["needs",{"_index":464,"title":{},"body":{"index.html":{}}}],["new",{"_index":208,"title":{},"body":{"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":148,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["ngondestroy",{"_index":198,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["ngoninit",{"_index":190,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["ngtemplatecontextguard",{"_index":151,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["ngtemplatecontextguard(_",{"_index":160,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["ngx",{"_index":270,"title":{},"body":{"changelog.html":{}}}],["ngxresolveasyncproviders",{"_index":153,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["npm",{"_index":575,"title":{},"body":{"index.html":{}}}],["null",{"_index":42,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{}}}],["nx",{"_index":227,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["offers",{"_index":509,"title":{},"body":{"index.html":{}}}],["once",{"_index":541,"title":{},"body":{"index.html":{}}}],["ondestroy",{"_index":146,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["one",{"_index":324,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["oninit",{"_index":145,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["online",{"_index":529,"title":{},"body":{"index.html":{}}}],["option",{"_index":462,"title":{},"body":{"index.html":{}}}],["optional",{"_index":62,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{}}}],["others",{"_index":490,"title":{},"body":{"index.html":{}}}],["overload",{"_index":411,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":576,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":255,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["pairs",{"_index":427,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":112,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["params",{"_index":33,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/TypeWithoutConstructorParams.html":{}}}],["params.ts",{"_index":207,"title":{},"body":{"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{}}}],["parent",{"_index":539,"title":{},"body":{"index.html":{}}}],["parentcomponent",{"_index":126,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["particular",{"_index":506,"title":{},"body":{"index.html":{}}}],["passed",{"_index":113,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["path",{"_index":432,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["payload",{"_index":476,"title":{},"body":{"index.html":{}}}],["peer",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["piece",{"_index":523,"title":{},"body":{"index.html":{}}}],["places",{"_index":422,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["playground",{"_index":273,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["point",{"_index":281,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":109,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["preserved",{"_index":387,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["private",{"_index":178,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["problem",{"_index":391,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["production",{"_index":566,"title":{},"body":{"index.html":{}}}],["promise",{"_index":36,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["promise&lt;string&gt",{"_index":403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["promise.resolve(&#39;value&#39",{"_index":362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["promise.resolve('value",{"_index":559,"title":{},"body":{"index.html":{}}}],["properties",{"_index":18,"title":{"properties.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"properties.html":{}}}],["protect",{"_index":392,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["protected",{"_index":568,"title":{},"body":{"index.html":{}}}],["provide",{"_index":64,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["provideasync",{"_index":118,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["provideasync(...asyncstaticproviders",{"_index":414,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideasync(asyncstaticprovider",{"_index":322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideasync(asyncstaticproviders",{"_index":409,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provided",{"_index":79,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["providedin",{"_index":487,"title":{},"body":{"index.html":{}}}],["providehttpclient",{"_index":546,"title":{},"body":{"index.html":{}}}],["provider",{"_index":14,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["provider.ts",{"_index":8,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["providerfactory",{"_index":360,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["providers",{"_index":104,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["providers.directive.ts",{"_index":99,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["providers.directive.ts:102",{"_index":156,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["providers.directive.ts:109",{"_index":161,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["providersvaluemap",{"_index":201,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["provides",{"_index":580,"title":{},"body":{"properties.html":{}}}],["readme",{"_index":274,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":130,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["ready",{"_index":567,"title":{},"body":{"index.html":{}}}],["recommended",{"_index":463,"title":{},"body":{"index.html":{}}}],["regular",{"_index":383,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["release",{"_index":287,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":101,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["rendered",{"_index":543,"title":{},"body":{"index.html":{}}}],["renderer",{"_index":456,"title":{},"body":{"index.html":{}}}],["rendering",{"_index":453,"title":{},"body":{"index.html":{}}}],["renders",{"_index":540,"title":{},"body":{"index.html":{}}}],["rendertemplate(providersvaluemap",{"_index":200,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["repository",{"_index":589,"title":{},"body":{"properties.html":{}}}],["requested",{"_index":371,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["requires",{"_index":327,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["rescope",{"_index":256,"title":{},"body":{"changelog.html":{}}}],["resolve",{"_index":90,"title":{},"body":{"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["resolve(first_injection_token",{"_index":405,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["resolveasyncproviderscontext",{"_index":167,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/typealiases.html":{}}}],["resolveasyncprovidersdirective",{"_index":96,"title":{"directives/ResolveAsyncProvidersDirective.html":{}},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"index.html":{}}}],["resolved",{"_index":77,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resolvemany",{"_index":299,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["resolvemany(...injectiontokens",{"_index":438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolvemany(class_provider",{"_index":437,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["resolvemany(injectiontokens",{"_index":418,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolvemany(my_service",{"_index":535,"title":{},"body":{"index.html":{}}}],["resolvemany(this.providers",{"_index":195,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["resolver",{"_index":443,"title":{},"body":{"index.html":{}}}],["resolvers",{"_index":377,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["resolves",{"_index":423,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["resolving",{"_index":69,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{}}}],["responsibility",{"_index":526,"title":{},"body":{"index.html":{}}}],["results",{"_index":43,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":40,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":166,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":480,"title":{},"body":{"index.html":{}}}],["route",{"_index":419,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["route's",{"_index":442,"title":{},"body":{"index.html":{}}}],["routes",{"_index":431,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["safely",{"_index":110,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["same",{"_index":333,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["samuelfernandez",{"_index":593,"title":{},"body":{"properties.html":{}}}],["scenarios",{"_index":489,"title":{},"body":{"index.html":{}}}],["secondstring",{"_index":406,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["see",{"_index":553,"title":{},"body":{"index.html":{}}}],["selector",{"_index":127,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["self",{"_index":398,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["semantic",{"_index":572,"title":{},"body":{"index.html":{}}}],["server",{"_index":498,"title":{},"body":{"index.html":{}}}],["service",{"_index":501,"title":{},"body":{"index.html":{}}}],["service&#39;).then((x",{"_index":342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service').then((x",{"_index":518,"title":{},"body":{"index.html":{}}}],["service.ts",{"_index":355,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["services",{"_index":486,"title":{},"body":{"index.html":{}}}],["several",{"_index":468,"title":{},"body":{"index.html":{}}}],["shape",{"_index":429,"title":{},"body":{"miscellaneous/functions.html":{}}}],["show",{"_index":440,"title":{},"body":{"index.html":{}}}],["similar",{"_index":511,"title":{},"body":{"index.html":{}}}],["single",{"_index":335,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["size",{"_index":484,"title":{},"body":{"index.html":{}}}],["solve",{"_index":390,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["solves",{"_index":507,"title":{},"body":{"index.html":{}}}],["soon",{"_index":70,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{}}}],["splitting",{"_index":492,"title":{},"body":{"index.html":{}}}],["squeezer/ngx",{"_index":401,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["squeezer/squeezer.git",{"_index":591,"title":{},"body":{"properties.html":{}}}],["squeezer/squeezer/issues",{"_index":586,"title":{},"body":{"properties.html":{}}}],["squeezer/squeezer/tree/main/packages/ngx",{"_index":584,"title":{},"body":{"properties.html":{}}}],["src/.../array",{"_index":596,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../async",{"_index":314,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../injection",{"_index":600,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../is",{"_index":315,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../provide",{"_index":316,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../resolve",{"_index":317,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../resolve.ts",{"_index":607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/directives/resolve",{"_index":98,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/functions/is",{"_index":294,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/functions/resolve",{"_index":297,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/functions/resolve.ts",{"_index":300,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/interfaces/array",{"_index":603,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/interfaces/async",{"_index":6,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/interfaces/injection",{"_index":87,"title":{},"body":{"interfaces/InjectionContext.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/interfaces/type",{"_index":206,"title":{},"body":{"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{}}}],["src/lib/providers/provide",{"_index":303,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stackblitz",{"_index":530,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":123,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["start",{"_index":68,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{}}}],["started",{"_index":210,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["statements",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":29,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/typealiases.html":{}}}],["staticprovider",{"_index":408,"title":{},"body":{"miscellaneous/functions.html":{}}}],["still",{"_index":378,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["string",{"_index":143,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["string_injector_token",{"_index":119,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["stringasyncfactory",{"_index":120,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["stringinjectiontoken",{"_index":140,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["structural",{"_index":138,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["such",{"_index":491,"title":{},"body":{"index.html":{}}}],["supports",{"_index":133,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["synchronous",{"_index":449,"title":{},"body":{"index.html":{}}}],["system",{"_index":447,"title":{},"body":{"index.html":{}}}],["t",{"_index":52,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":306,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["tada",{"_index":285,"title":{},"body":{"changelog.html":{}}}],["template",{"_index":102,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["template[ngxresolveasyncproviders",{"_index":149,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["templateref",{"_index":169,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["tests",{"_index":570,"title":{},"body":{"index.html":{}}}],["that's",{"_index":519,"title":{},"body":{"index.html":{}}}],["then((providersvaluemap",{"_index":196,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.asyncinjector",{"_index":194,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.asyncinjector.resolveall().then",{"_index":192,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.cdr.markforcheck",{"_index":205,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.destroyed",{"_index":199,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.providers",{"_index":191,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.rendertemplate",{"_index":193,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.rendertemplate(providersvaluemap",{"_index":197,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.viewcontainerref.createembeddedview(this.templateref",{"_index":202,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["those",{"_index":111,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["though",{"_index":376,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["through",{"_index":461,"title":{},"body":{"index.html":{}}}],["times",{"_index":336,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["today",{"_index":457,"title":{},"body":{"index.html":{}}}],["token",{"_index":76,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["tokens",{"_index":135,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["tokens/async",{"_index":174,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["tproviders",{"_index":154,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["tree",{"_index":159,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["trigger",{"_index":373,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["triggers",{"_index":524,"title":{},"body":{"index.html":{}}}],["true",{"_index":59,"title":{},"body":{"interfaces/AsyncMultiProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["ts",{"_index":177,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["tslib",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":397,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["type",{"_index":10,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts",{"_index":601,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":594,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":554,"title":{},"body":{"index.html":{}}}],["typeof",{"_index":93,"title":{},"body":{"interfaces/InjectionContext.html":{}}}],["types.ts",{"_index":598,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typewithoutconstructorparams",{"_index":30,"title":{"interfaces/TypeWithoutConstructorParams.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{}}}],["undefined",{"_index":415,"title":{},"body":{"miscellaneous/functions.html":{}}}],["union",{"_index":605,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unknown",{"_index":189,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["until",{"_index":75,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["update",{"_index":243,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":226,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":334,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["useasyncclass",{"_index":19,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["useasyncfactory",{"_index":47,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["useasyncvalue",{"_index":83,"title":{},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["useclass",{"_index":513,"title":{},"body":{"index.html":{}}}],["used",{"_index":100,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":547,"title":{},"body":{"index.html":{}}}],["useful",{"_index":105,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["uses",{"_index":571,"title":{},"body":{"index.html":{}}}],["using",{"_index":213,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["usually",{"_index":482,"title":{},"body":{"index.html":{}}}],["v17",{"_index":238,"title":{},"body":{"changelog.html":{}}}],["v17.2.0",{"_index":228,"title":{},"body":{"changelog.html":{}}}],["validators",{"_index":163,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/typealiases.html":{}}}],["value",{"_index":82,"title":{},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value&#39;).then((x",{"_index":364,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value').then((x",{"_index":560,"title":{},"body":{"index.html":{}}}],["value.ts",{"_index":357,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["value_provider",{"_index":348,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["variable",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":606,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":481,"title":{},"body":{"index.html":{}}}],["version",{"_index":579,"title":{},"body":{"properties.html":{}}}],["versioning",{"_index":573,"title":{},"body":{"index.html":{}}}],["very",{"_index":510,"title":{},"body":{"index.html":{}}}],["viewcontainerref",{"_index":170,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["wait",{"_index":74,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["way",{"_index":497,"title":{},"body":{"index.html":{}}}],["well",{"_index":328,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["whole",{"_index":473,"title":{},"body":{"index.html":{}}}],["widen",{"_index":277,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":31,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{},"index.html":{}}}],["won&#39;t",{"_index":370,"title":{},"body":{"miscellaneous/functions.html":{}}}],["won't",{"_index":562,"title":{},"body":{"index.html":{}}}],["x.firstservice",{"_index":347,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["x.myservice",{"_index":343,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["x.providerfactory",{"_index":353,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["x.value",{"_index":350,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AsyncClassMultiProvider.html":{"url":"interfaces/AsyncClassMultiProvider.html","title":"interface - AsyncClassMultiProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncClassMultiProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-class-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async class multi provider.\n\n            \n\n            \n                Extends\n            \n            \n                        AsyncProviderConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncClass\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncClass:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async class import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\nimport { TypeWithoutConstructorParams } from './type-without-constructor-params';\n\n/**\n * Type to define an async class provider.\n */\nexport interface AsyncClassProvider extends AsyncProviderConfig {\n  /**\n   * Async class import.\n   */\n  useAsyncClass: () => Promise>;\n}\n\n/**\n * Type to define an async class multi provider.\n */\nexport interface AsyncClassMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async class import.\n   */\n  useAsyncClass: () => Promise>>;\n}\n\n/**\n * Type guard to check if a provider is an async class provider.\n */\nexport function isAsyncClassProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncClassProvider | AsyncClassMultiProvider {\n  return (asyncStaticProvider as any).useAsyncClass != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncClassProvider.html":{"url":"interfaces/AsyncClassProvider.html","title":"interface - AsyncClassProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncClassProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-class-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async class provider.\n\n            \n\n            \n                Extends\n            \n            \n                        AsyncProviderConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncClass\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncClass:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async class import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\nimport { TypeWithoutConstructorParams } from './type-without-constructor-params';\n\n/**\n * Type to define an async class provider.\n */\nexport interface AsyncClassProvider extends AsyncProviderConfig {\n  /**\n   * Async class import.\n   */\n  useAsyncClass: () => Promise>;\n}\n\n/**\n * Type to define an async class multi provider.\n */\nexport interface AsyncClassMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async class import.\n   */\n  useAsyncClass: () => Promise>>;\n}\n\n/**\n * Type guard to check if a provider is an async class provider.\n */\nexport function isAsyncClassProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncClassProvider | AsyncClassMultiProvider {\n  return (asyncStaticProvider as any).useAsyncClass != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncFactoryMultiProvider.html":{"url":"interfaces/AsyncFactoryMultiProvider.html","title":"interface - AsyncFactoryMultiProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncFactoryMultiProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-factory-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async factory multi provider.\n\n            \n\n            \n                Extends\n            \n            \n                        AsyncProviderConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncFactory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async factory import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\nimport { InjectionContext } from './injection-context';\n\n/**\n * Type of an async factory provider.\n */\nexport type AsyncFactoryWithInjectionContext = (injectionContext: InjectionContext) => T;\n\n/**\n * Type to define an async factory provider.\n */\nexport interface AsyncFactoryProvider extends AsyncProviderConfig {\n  /**\n   * Async factory import.\n   */\n  useAsyncFactory: () => Promise>;\n}\n\n/**\n * Type to define an async factory multi provider.\n */\nexport interface AsyncFactoryMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async factory import.\n   */\n  useAsyncFactory: () => Promise>>;\n}\n\n/**\n * Type guard to check if a provider is an async factory provider.\n */\nexport function isAsyncFactoryProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncFactoryProvider | AsyncFactoryMultiProvider {\n  return (asyncStaticProvider as any).useAsyncFactory != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncFactoryProvider.html":{"url":"interfaces/AsyncFactoryProvider.html","title":"interface - AsyncFactoryProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncFactoryProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-factory-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async factory provider.\n\n            \n\n            \n                Extends\n            \n            \n                        AsyncProviderConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncFactory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async factory import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\nimport { InjectionContext } from './injection-context';\n\n/**\n * Type of an async factory provider.\n */\nexport type AsyncFactoryWithInjectionContext = (injectionContext: InjectionContext) => T;\n\n/**\n * Type to define an async factory provider.\n */\nexport interface AsyncFactoryProvider extends AsyncProviderConfig {\n  /**\n   * Async factory import.\n   */\n  useAsyncFactory: () => Promise>;\n}\n\n/**\n * Type to define an async factory multi provider.\n */\nexport interface AsyncFactoryMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async factory import.\n   */\n  useAsyncFactory: () => Promise>>;\n}\n\n/**\n * Type guard to check if a provider is an async factory provider.\n */\nexport function isAsyncFactoryProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncFactoryProvider | AsyncFactoryMultiProvider {\n  return (asyncStaticProvider as any).useAsyncFactory != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncMultiProvider.html":{"url":"interfaces/AsyncMultiProvider.html","title":"interface - AsyncMultiProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncMultiProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-multi-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type of an async multi provider.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            multi\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        multi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multi:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Flag that defines the provider as multiple.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AsyncMultiProvider {\n  /**\n   * Flag that defines the provider as multiple.\n   */\n  multi: true;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncProviderConfig.html":{"url":"interfaces/AsyncProviderConfig.html","title":"interface - AsyncProviderConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncProviderConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-provider-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration of an async provider.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            provide\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"lazy\" | \"eager\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"lazy\" | \"eager\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If eager, the async injector will start resolving as soon as the environment injector initializes.\nIf lazy (default), it will wait until the injection token is resolved.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provide\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provide:     InjectionToken\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InjectionToken\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Token to be provided.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Configuration of an async provider.\n */\nexport interface AsyncProviderConfig {\n  /**\n   * Token to be provided.\n   */\n  provide: InjectionToken;\n\n  /**\n   * If `eager`, the async injector will start resolving as soon as the environment injector initializes.\n   * If `lazy` (default), it will wait until the injection token is resolved.\n   */\n  mode?: 'lazy' | 'eager';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncValueMultiProvider.html":{"url":"interfaces/AsyncValueMultiProvider.html","title":"interface - AsyncValueMultiProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncValueMultiProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-value-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async value multi provider.\n\n            \n\n            \n                Extends\n            \n            \n                        AsyncProviderConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncValue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncValue:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async value import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\n\n/**\n * Type to define an async value provider.\n */\nexport interface AsyncValueProvider extends AsyncProviderConfig {\n  /**\n   * Async value import.\n   */\n  useAsyncValue: () => Promise;\n}\n\n/**\n * Type to define an async value multi provider.\n */\nexport interface AsyncValueMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async value import.\n   */\n  useAsyncValue: () => Promise>;\n}\n\n/**\n * Type guard to check if a provider is an async value provider.\n */\nexport function isAsyncValueProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncValueProvider | AsyncValueMultiProvider {\n  return (asyncStaticProvider as any).useAsyncValue != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncValueProvider.html":{"url":"interfaces/AsyncValueProvider.html","title":"interface - AsyncValueProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncValueProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-value-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async value provider.\n\n            \n\n            \n                Extends\n            \n            \n                        AsyncProviderConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncValue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncValue:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async value import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\n\n/**\n * Type to define an async value provider.\n */\nexport interface AsyncValueProvider extends AsyncProviderConfig {\n  /**\n   * Async value import.\n   */\n  useAsyncValue: () => Promise;\n}\n\n/**\n * Type to define an async value multi provider.\n */\nexport interface AsyncValueMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async value import.\n   */\n  useAsyncValue: () => Promise>;\n}\n\n/**\n * Type guard to check if a provider is an async value provider.\n */\nexport function isAsyncValueProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncValueProvider | AsyncValueMultiProvider {\n  return (asyncStaticProvider as any).useAsyncValue != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectionContext.html":{"url":"interfaces/InjectionContext.html","title":"interface - InjectionContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InjectionContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/injection-context.ts\n        \n\n\n            \n                Description\n            \n            \n                Injection context for async inject function.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            inject\n                                        \n                                \n                                \n                                        \n                                            resolve\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inject:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Inject function.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolve\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resolve:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Resolve function.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject } from '@angular/core';\n\nimport { AsyncInjector } from '../injector/async-injector';\n\n/**\n * Injection context for async inject function.\n */\nexport interface InjectionContext {\n  /**\n   * Inject function.\n   */\n  inject: typeof inject;\n\n  /**\n   * Resolve function.\n   */\n  resolve: AsyncInjector['resolve'];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResolveAsyncProvidersDirective.html":{"url":"directives/ResolveAsyncProvidersDirective.html","title":"directive - ResolveAsyncProvidersDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ResolveAsyncProvidersDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/resolve-async-providers.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive can be used to render a template after certain async providers have resolved. It can be useful to delay loading them as much as possible.\nThe template can safely inject those resolved async providers.\nWhen no parameters are passed, it will load all async injectors in the injector hierarchy:\n@Component({\n  template: ``,\n  providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n  imports: [ResolveAsyncProvidersDirective, ChildComponent],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ParentComponent {}\n\n@Component({\n  selector: 'child-component',\n  template: `Async injector value: {{ injectedText }}`,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ChildComponent {\n  readonly injectedText = inject(STRING_INJECTOR_TOKEN);\n}Additionally, it also supports a map of async provider tokens. Only those will be resolved instead of all. The resolved async providers\nare available as the context for the structural directive. Example:\n@Component({\n  template: `\n    \n    \n\n    \n    \n  `,\n  providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n  imports: [ResolveAsyncProvidersDirective, ChildComponent],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ParentComponent {\n  readonly stringInjectionToken = STRING_INJECTOR_TOKEN;\n}\n\n@Component({\n  selector: 'child-component',\n  template: `Async injector value: {{ inputText }}`,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ChildComponent {\n  @Input() inputText!: string;\n}\n            \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        ng-template[ngxResolveAsyncProviders]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ngTemplateContextGuard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxResolveAsyncProviders\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngxResolveAsyncProviders\n                    \n                \n                \n                    \n                        Type :     TProviders | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/resolve-async-providers.directive.ts:102\n                            \n                        \n                \n                    \n                        List of providers to be resolved. If not defined, it will resolve all async providers in the DI tree.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        ngTemplateContextGuard\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngTemplateContextGuard(_: ResolveAsyncProvidersDirective, context)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/resolve-async-providers.directive.ts:109\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Type guard that exposes resolved async validators.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _\n                                    \n                                                ResolveAsyncProvidersDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResolveAsyncProvidersContext\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectorRef,\n  Directive,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n  InjectionToken,\n} from '@angular/core';\n\nimport { AsyncInjector } from '../injector/async-injector';\nimport { InjectionTokenTypeMap } from '../interfaces/injection-token-type';\nimport { ASYNC_INJECTOR_INITIALIZER } from '../tokens/async-injector-initializer.token';\n\n/**\n * This directive can be used to render a template after certain async providers have resolved. It can be useful to delay loading them as much as possible.\n * The template can safely inject those resolved async providers.\n *\n * @example\n *\n * When no parameters are passed, it will load _all_ async injectors in the injector hierarchy:\n *\n * ```ts\n * @Component({\n *   template: ``,\n *   providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n *   imports: [ResolveAsyncProvidersDirective, ChildComponent],\n *   standalone: true,\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n * })\n * class ParentComponent {}\n *\n * @Component({\n *   selector: 'child-component',\n *   template: `Async injector value: {{ injectedText }}`,\n *   standalone: true,\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n * })\n * class ChildComponent {\n *   readonly injectedText = inject(STRING_INJECTOR_TOKEN);\n * }\n * ```\n *\n * @example\n *\n * Additionally, it also supports a map of async provider tokens. Only those will be resolved instead of _all_. The resolved async providers\n * are available as the context for the structural directive. Example:\n *\n * ```ts\n * @Component({\n *   template: `\n *     \n *     \n *\n *     \n *     \n *   `,\n *   providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n *   imports: [ResolveAsyncProvidersDirective, ChildComponent],\n *   standalone: true,\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n * })\n * class ParentComponent {\n *   readonly stringInjectionToken = STRING_INJECTOR_TOKEN;\n * }\n *\n * @Component({\n *   selector: 'child-component',\n *   template: `Async injector value: {{ inputText }}`,\n *   standalone: true,\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n * })\n * class ChildComponent {\n *   @Input() inputText!: string;\n * }\n * ```\n */\n@Directive({\n  selector: 'ng-template[ngxResolveAsyncProviders]',\n  standalone: true,\n})\nexport class ResolveAsyncProvidersDirective }>\n  implements OnInit, OnDestroy\n{\n  private readonly asyncInjector = inject(AsyncInjector);\n  private readonly _asyncInjectorInitializer = inject(ASYNC_INJECTOR_INITIALIZER);\n  private readonly viewContainerRef = inject(ViewContainerRef);\n  private readonly templateRef = inject(TemplateRef);\n  private readonly cdr = inject(ChangeDetectorRef);\n\n  /**\n   * List of providers to be resolved. If not defined, it will resolve all async providers in the DI tree.\n   */\n  @Input('ngxResolveAsyncProviders') providers: TProviders | null = null;\n\n  private destroyed = false;\n\n  /**\n   * Type guard that exposes resolved async validators.\n   */\n  static ngTemplateContextGuard }>(\n    _: ResolveAsyncProvidersDirective,\n    context: unknown\n  ): context is ResolveAsyncProvidersContext {\n    return true;\n  }\n\n  ngOnInit() {\n    if (this.providers === null) {\n      this.asyncInjector.resolveAll().then(() => this.renderTemplate());\n    } else {\n      this.asyncInjector\n        .resolveMany(this.providers)\n        .then((providersValueMap: InjectionTokenTypeMap) => this.renderTemplate(providersValueMap));\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyed = true;\n  }\n\n  private renderTemplate(providersValueMap?: InjectionTokenTypeMap) {\n    if (this.destroyed) {\n      return;\n    }\n\n    if (providersValueMap == null) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      const context: ResolveAsyncProvidersContext = {\n        $implicit: providersValueMap,\n        ...providersValueMap,\n      };\n      this.viewContainerRef.createEmbeddedView(this.templateRef, context);\n    }\n\n    this.cdr.markForCheck();\n  }\n}\n\n/**\n * Type of the structural directive context that exposes resolved async validators.\n */\nexport type ResolveAsyncProvidersContext }> = {\n  $implicit: InjectionTokenTypeMap;\n} & InjectionTokenTypeMap;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TypeWithoutConstructorParams.html":{"url":"interfaces/TypeWithoutConstructorParams.html","title":"interface - TypeWithoutConstructorParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TypeWithoutConstructorParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/type-without-constructor-params.ts\n        \n\n\n            \n                Description\n            \n            \n                Type of a constructor without params used for class async providers.\n\n            \n\n            \n                Extends\n            \n            \n                        Function\n            \n\n\n\n\n    \n\n\n    \n        export interface TypeWithoutConstructorParams extends Function {\n  new (): T;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nThis file was generated using @jscutlery/semver.\n3.0.5 (2024-02-08)\n3.0.4 (2024-02-07)\n3.0.3 (2024-02-07)\n3.0.2 (2024-02-07)\n3.0.1 (2024-02-02)\nBug Fixes\n\nupgrade nx to v17.2.0 (#1099) (85f83e1)\n\n3.0.0 (2023-12-03)\n⚠ BREAKING CHANGES\n\nUpgrade to Angular v17\n\nFeatures\n\n:arrow_up: upgrade to Angular v17 (58e28fa)\n\nBug Fixes\n\ndeps: ⬆️ update nx monorepo to v17 (major) (#1013) (009816c)\n\n2.0.2 (2023-07-27)\n2.0.1 (2023-07-25)\n2.0.0 (2023-05-16)\n⚠ BREAKING CHANGES\n\ndeps: Upgrade to Angular and Nx 16\n\nFeatures\n\n:package: rescope to @nx (#681) (#682) (e2fd0a8)\ndeps: :arrow_up: update monorepo to Angular and Nx 16 (#679) (733a9f8)\n\n1.0.6 (2023-04-17)\n1.0.5 (2023-04-17)\n1.0.4 (2023-04-05)\n1.0.3 (2023-04-04)\n1.0.2 (2023-03-15)\nBug Fixes\n\nngx-async-injector: :memo: add playground to README (5234f18)\n\n1.0.1 (2023-03-15)\nBug Fixes\n\nngx-async-injector: :package: widen deps and fix main entry point (#527) (f23e180)\n\n1.0.0 (2023-03-15)\nFeatures\n\n:tada: initial release\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/directives/resolve-async-providers.directive.ts\n            \n            directive\n            ResolveAsyncProvidersDirective\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/functions/is-multi-provider.ts\n            \n            function\n            isMultiProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/functions/resolve-many.ts\n            \n            function\n            resolveMany\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/functions/resolve-many.ts\n            \n            function\n            resolveMany\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/functions/resolve-many.ts\n            \n            function\n            resolveMany\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/functions/resolve.ts\n            \n            variable\n            resolve\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-class-provider.ts\n            \n            interface\n            AsyncClassMultiProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-class-provider.ts\n            \n            interface\n            AsyncClassProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-class-provider.ts\n            \n            function\n            isAsyncClassProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-factory-provider.ts\n            \n            interface\n            AsyncFactoryMultiProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-factory-provider.ts\n            \n            interface\n            AsyncFactoryProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-factory-provider.ts\n            \n            function\n            isAsyncFactoryProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-multi-provider.ts\n            \n            interface\n            AsyncMultiProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-provider-config.ts\n            \n            interface\n            AsyncProviderConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-value-provider.ts\n            \n            interface\n            AsyncValueMultiProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-value-provider.ts\n            \n            interface\n            AsyncValueProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-value-provider.ts\n            \n            function\n            isAsyncValueProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/interfaces/injection-context.ts\n            \n            interface\n            InjectionContext\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/interfaces/type-without-constructor-params.ts\n            \n            interface\n            TypeWithoutConstructorParams\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/providers/provide-async.function.ts\n            \n            function\n            provideAsync\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/providers/provide-async.function.ts\n            \n            function\n            provideAsync\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/providers/provide-async.function.ts\n            \n            function\n            provideAsync\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.5.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/core : ^17.0.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isAsyncClassProvider   (src/.../async-class-provider.ts)\n                        \n                        \n                            isAsyncFactoryProvider   (src/.../async-factory-provider.ts)\n                        \n                        \n                            isAsyncValueProvider   (src/.../async-value-provider.ts)\n                        \n                        \n                            isMultiProvider   (src/.../is-multi-provider.ts)\n                        \n                        \n                            provideAsync   (src/.../provide-async.function.ts)\n                        \n                        \n                            provideAsync   (src/.../provide-async.function.ts)\n                        \n                        \n                            provideAsync   (src/.../provide-async.function.ts)\n                        \n                        \n                            resolveMany   (src/.../resolve-many.ts)\n                        \n                        \n                            resolveMany   (src/.../resolve-many.ts)\n                        \n                        \n                            resolveMany   (src/.../resolve-many.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/interfaces/async-class-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAsyncClassProvider\n                        \n                    \n                \n            \n            \n                \nisAsyncClassProvider(asyncStaticProvider: AsyncStaticProvider)\n                \n            \n\n\n\n\n            \n                \n                    Type guard to check if a provider is an async class provider.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    asyncStaticProvider\n                                    \n                                                AsyncStaticProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AsyncClassProvider | AsyncClassMultiProvider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/interfaces/async-factory-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAsyncFactoryProvider\n                        \n                    \n                \n            \n            \n                \nisAsyncFactoryProvider(asyncStaticProvider: AsyncStaticProvider)\n                \n            \n\n\n\n\n            \n                \n                    Type guard to check if a provider is an async factory provider.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    asyncStaticProvider\n                                    \n                                                AsyncStaticProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AsyncFactoryProvider | AsyncFactoryMultiProvider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/interfaces/async-value-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAsyncValueProvider\n                        \n                    \n                \n            \n            \n                \nisAsyncValueProvider(asyncStaticProvider: AsyncStaticProvider)\n                \n            \n\n\n\n\n            \n                \n                    Type guard to check if a provider is an async value provider.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    asyncStaticProvider\n                                    \n                                                AsyncStaticProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AsyncValueProvider | AsyncValueMultiProvider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/functions/is-multi-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMultiProvider\n                        \n                    \n                \n            \n            \n                \nisMultiProvider(asyncStaticProvider: AsyncStaticProvider)\n                \n            \n\n\n\n\n            \n                \n                    Type guard to check if the provider is defined as multiple.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    asyncStaticProvider\n                                    \n                                                AsyncStaticProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AsyncValueMultiProvider | AsyncClassMultiProvider | AsyncFactoryMultiProvider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/providers/provide-async.function.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideAsync\n                        \n                    \n                \n            \n            \n                \nprovideAsync(asyncStaticProvider: AsyncStaticProvider)\n                \n            \n\n\n\n\n            \n                \n                    It is used to declare one or more async providers. For each provider, it requires the token, and then an async function that can be useAsyncValue, useAsyncClass or useAsyncFactory. It supports multi providers as well. It can be used in environment injectors, modules, components and directives. If multiple providers need to be declared in the same injector, use a single provideAsync function with multiple providers instead of using it multiple times.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    asyncStaticProvider\n                                    \n                                                AsyncStaticProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            Example of declaring a single async provider:\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync({\n      provide: MY_SERVICE,\n      useAsyncClass: () =&gt; import(&#39;./my-service&#39;).then((x) =&gt; x.MyService),\n    }),\n  ],\n});\n\n                        \n                        \n                            Example of declaring multiple providers, each one with different async functions:\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync(\n      {\n        provide: CLASS_PROVIDER,\n        useAsyncClass: () =&gt; import(&#39;./first-service&#39;).then((x) =&gt; x.FirstService),\n      },\n      {\n        provide: VALUE_PROVIDER,\n        useAsyncValue: () =&gt; import(&#39;./value&#39;).then((x) =&gt; x.value),\n      },\n      {\n        provide: FACTORY_PROVIDER,\n        useAsyncFactory: () =&gt; import(&#39;./factory&#39;).then((x) =&gt; x.providerFactory),\n      }\n    ),\n  ],\n});\n\n// first-service.ts\nexport class FirstService {}\n\n// value.ts\nexport const value = &#39;value&#39;;\n\n// factory.ts\nexport async function providerFactory() {\n  return await Promise.resolve(&#39;value&#39;);\n}\n\n                        \n                        \n                            Multi providers can also be declared as it happens with Angular:\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync(\n      {\n        provide: VALUE_PROVIDER,\n        useAsyncValue: () =&gt; import(&#39;./first-value&#39;).then((x) =&gt; x.value),\n        multi: true\n      },\n      {\n        provide: VALUE_PROVIDER,\n        useAsyncValue: () =&gt; import(&#39;./second-value&#39;).then((x) =&gt; x.value),\n        multi: true\n      },\n    ),\n  ],\n});\n\n                        \n                        \n                            Finally, the lazy load behavior can be controlled by the mode flag. By default it is lazy, which means it won&#39;t be resolved until requested. eager on the contrary will trigger the load on declaration, even though resolvers are still needed to wait for completion. Example:\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync(\n      {\n        provide: VALUE_PROVIDER,\n        useAsyncValue: () =&gt; import(&#39;./first-value&#39;).then((x) =&gt; x.value),\n        mode: &#39;eager&#39;\n      },\n    ),\n  ],\n});\n\n                        \n                        \n                            When using a factory provider, the function itself can be async. Regular inject function from Angular can be used before executing any async code since the injection context is preserved, however it can&#39;t be used afterwards. To solve that problem, and also to protect against cyclic dependencies between async providers, the factory provider function is called with a context that exposes two functions that are self explanatory, inject and resolve. Example:\nimport { InjectionContext } from &#39;@nx-squeezer/ngx-async-injector&#39;;\n\nexport async function providerFactory({ inject, resolve }: InjectionContext): Promise&lt;string&gt; {\n  const firstString = await resolve(FIRST_INJECTION_TOKEN);\n  const secondString = inject(SECOND_INJECTION_TOKEN);\n  return `${firstString} ${secondString}`;\n}\n\n                        \n                    \n                    \n                        Returns :     StaticProvider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideAsync\n                        \n                    \n                \n            \n            \n                \nprovideAsync(asyncStaticProviders: AsyncProviderTypes)\n                \n            \n\n\n\n\n            \n                \n                    Overload for a collection of async providers.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    asyncStaticProviders\n                                    \n                                                AsyncProviderTypes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     StaticProvider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideAsync\n                        \n                    \n                \n            \n            \n                \nprovideAsync(...asyncStaticProviders: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Base implementation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    asyncStaticProviders\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     StaticProvider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/functions/resolve-many.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        resolveMany\n                        \n                    \n                \n            \n            \n                \nresolveMany(injectionTokens: T)\n                \n            \n\n\n\n\n            \n                \n                    resolve and resolveMany functions can be used in route resolvers to ensure that certain async providers are resolved before a route loads.\nThey could be used in other places as needed, since they return a promise that resolves when the async provider is resolved and returns its value.\nIt can be compared to Angular's inject function, but for async providers.\nresolveMany supports either a list of async provider tokens, or a map of key-value pairs with the value being the token.\nThe resolved value will have the same shape, either an array or a map of the resolved async providers.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    injectionTokens\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            export const routes: Route[] = [\n  {\n    path: &#39;&#39;,\n    loadComponent: () =&gt; import(&#39;./route.component&#39;),\n    providers: [\n      provideAsync(\n        {\n          provide: CLASS_PROVIDER,\n          useAsyncClass: () =&gt; import(&#39;./first-service&#39;).then((x) =&gt; x.FirstService),\n        },\n        {\n          provide: VALUE_PROVIDER,\n          useAsyncValue: () =&gt; import(&#39;./value&#39;).then((x) =&gt; x.value),\n        }\n      ),\n    ],\n    resolve: {\n      asyncProviders: () =&gt; resolveMany(CLASS_PROVIDER, VALUE_PROVIDER),\n    },\n  }\n];\n\n                        \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveMany\n                        \n                    \n                \n            \n            \n                \nresolveMany(...injectionTokens: T)\n                \n            \n\n\n\n\n            \n                \n                    Overload for multiple injection tokens.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    injectionTokens\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveMany\n                        \n                    \n                \n            \n            \n                \nresolveMany(...injectionTokens: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Overload for map of injection tokens.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    injectionTokens\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@nx-squeezer/ngx-async-injector \n      \n\nMotivation\nShow me the code\nExamples\nResolve using route's resolver\nResolve using a structural directive\nResolve configuration from API\n\n\nAPI documentation\nprovideAsync function\nresolve and resolveMany\n*ngxResolveAsyncProviders structural directive\n\n\nInstallation\n\nMotivation\nAngular's dependency injection (DI) system is designed to be synchronous, since having asynchronous providers would make component rendering asynchronous and break existing renderer.\nAs of today it is not possible to lazy load data asynchronously and consume it through a provider. The only option recommended by Angular when it needs to be loaded before the app initializes is using APP_INITIALIZER. However, it has several known cons because it is blocking and delays rendering the whole component tree and loading routes.\nAnother common problem is the initial payload of the main bundle caused by needing to declare providers in root. When a provider is needed by various features it usually needs to be declared in the root injector, increasing the initial bundle size. It would be great that services could be declared in the root component, but lazy loaded when needed. It is true that using providedIn: root could be used in many scenarios, but there are others where using async import() of a dependency would be more useful, such as code splitting and fine grained lazy loading.\nFor the scenarios described above, having a way to declare asynchronous providers, either by loading data from the server and later instantiating a service, or to lazy load them using import(), could help and give flexibility to implementers. This particular problem is what @nx-squeezer/ngx-async-injector solves.\nShow me the code\nThe API that this library offers is very much similar to Angular's DI. Check this code as an example:\n// main.ts\nbootstrapApplication(AppComponent, {\n  providers: [\n    {\n      provide: MY_SERVICE,\n      useClass: MyService,\n    },\n  ],\n});\n\n// component\nclass Component {\n  private readonly myService = inject(MY_SERVICE);\n}Could be made asynchronous and lazy loaded using provideAsync():\n// main.ts\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync({\n      provide: MY_SERVICE,\n      useAsyncClass: () => import('./my-service').then((x) => x.MyService),\n    }),\n  ],\n});\n\n// component\nclass Component {\n  private readonly myService = inject(MY_SERVICE);\n}That's it! Declaration is almost identical, and consumption is the same. But wait, when is the async provided actually loaded and resolved?\nIt needs another piece that triggers it: async provider resolvers. Check this diagram:\n\nAsync providers need to be resolved before being used, and that is a responsibility of the application. It can be done while loading a route using a route resolver, or with a structural directive that will delay rendering until they are loaded.\nCheck this online Stackblitz playground with a live demo.\nExamples\nResolve using route's resolver\nexport const appRoutes: Route[] = [\n  {\n    path: '',\n    loadComponent: () => import('./route.component'),\n    resolve: {\n      asyncProviders: () => resolveMany(MY_SERVICE),\n    },\n  },\n];In this case, the async provider will be resolved while the route loads, and the inside the component MY_SERVICE can be injected.\nResolve using a structural directive\n@Component({\n  imports: [ResolveAsyncProvidersDirective, ChildComponent],\n  template: `  `,\n  standalone: true,\n})\nexport default class ParentComponent {\n  readonly MY_SERVICE = MY_SERVICE;\n}In this case, the async provider will be resolved when the parent component renders, and once completed the child component will be rendered having MY_SERVICE available.\nResolve configuration from API\n// Instead of using the common approach of APP_INITIALIZER, which blocks loading and rendering until resolved:\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideHttpClient(),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: () => inject(HttpClient).get('/config'),\n      multi: true,\n    },\n  ],\n});\n\n// You could declare it with an async provider, which will be resolved on demand without blocking,\n// and yet available through DI:\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideHttpClient(),\n    {\n      provide: CONFIG_TOKEN,\n      useAsyncFactory: () => firstValueFrom(inject(HttpClient).get('/config')),\n    },\n  ],\n});API documentation\nCheck the full documentation to see all available features.\nprovideAsync function\nIt is used to declare one or more async providers. For each provider, it requires the token, and then an async function that can be useAsyncValue, useAsyncClass or useAsyncFactory. It supports multi providers as well. It can be used in environment injectors, modules, components and directives. If multiple providers need to be declared in the same injector, use a single provideAsync function with multiple providers instead of using it multiple times.\nAsync provider tokens are regular Angular injection tokens typed with the resolved value of the async provider.\nExample of declaring a single async provider:\nexport const MY_SERVICE = new InjectionToken('my-service-token');\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync({\n      provide: MY_SERVICE,\n      useAsyncClass: () => import('./my-service').then((x) => x.MyService),\n    }),\n  ],\n});Example of declaring multiple providers, each one with different async functions:\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync(\n      {\n        provide: CLASS_PROVIDER,\n        useAsyncClass: () => import('./first-service').then((x) => x.FirstService),\n      },\n      {\n        provide: VALUE_PROVIDER,\n        useAsyncValue: () => import('./value').then((x) => x.value),\n      },\n      {\n        provide: FACTORY_PROVIDER,\n        useAsyncFactory: () => import('./factory').then((x) => x.providerFactory),\n      }\n    ),\n  ],\n});\n\n// first-service.ts\nexport class FirstService {}\n\n// value.ts\nexport const value = 'value';\n\n// factory.ts\nexport async function providerFactory() {\n  return await Promise.resolve('value');\n}Multi providers can also be declared as it happens with Angular:\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync(\n      {\n        provide: VALUE_PROVIDER,\n        useAsyncValue: () => import('./first-value').then((x) => x.value),\n        multi: true,\n      },\n      {\n        provide: VALUE_PROVIDER,\n        useAsyncValue: () => import('./second-value').then((x) => x.value),\n        multi: true,\n      }\n    ),\n  ],\n});Finally, the lazy load behavior can be controlled by the mode flag. By default it is lazy, which means it won't be resolved until requested. eager on the contrary will trigger the load on declaration, even though resolvers are still needed to wait for completion. Example:\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync({\n      provide: VALUE_PROVIDER,\n      useAsyncValue: () => import('./first-value').then((x) => x.value),\n      mode: 'eager',\n    }),\n  ],\n});When using a factory provider, the function itself can be async. Regular inject function from Angular can be used before executing any async code since the injection context is preserved, however it can't be used afterwards. To solve that problem, and also to protect against cyclic dependencies between async providers, the factory provider function is called with a context that exposes two functions that are self explanatory, inject and resolve. Example:\nimport { InjectionContext } from '@nx-squeezer/ngx-async-injector';\n\nexport async function providerFactory({ inject, resolve }: InjectionContext): Promise {\n  const firstString = await resolve(FIRST_INJECTION_TOKEN);\n  const secondString = inject(SECOND_INJECTION_TOKEN);\n  return `${firstString} ${secondString}`;\n}resolve and resolveMany\nresolve and resolveMany functions can be used in route resolvers to ensure that certain async providers are resolved before a route loads. They could be used in other places as needed, since they return a promise that resolves when the async provider is resolved and returns its value. It can be compared to Angular's inject function, but for async providers.\nExample of how to use it in a route resolver:\nexport const routes: Route[] = [\n  {\n    path: '',\n    loadComponent: () => import('./route.component'),\n    providers: [\n      provideAsync(\n        {\n          provide: CLASS_PROVIDER,\n          useAsyncClass: () => import('./first-service').then((x) => x.FirstService),\n        },\n        {\n          provide: VALUE_PROVIDER,\n          useAsyncValue: () => import('./value').then((x) => x.value),\n        }\n      ),\n    ],\n    resolve: {\n      asyncProviders: () => resolveMany(CLASS_PROVIDER, VALUE_PROVIDER),\n    },\n  },\n];*ngxResolveAsyncProviders structural directive\nThis directive can be used to render a template after certain async providers have resolved. It can be useful to delay loading them as much as possible. The template can safely inject those resolved async providers.\nWhen no parameters are passed, it will load all async injectors in the injector hierarchy:\n@Component({\n  template: ``,\n  providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n  imports: [ResolveAsyncProvidersDirective, ChildComponent],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ParentComponent {}\n\n@Component({\n  selector: 'child-component',\n  template: `Async injector value: {{ injectedText }}`,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ChildComponent {\n  readonly injectedText = inject(STRING_INJECTOR_TOKEN);\n}Additionally, it also supports a map of async provider tokens. Only those will be resolved instead of all. The resolved async providers are available as the context for the structural directive. Example:\n@Component({\n  template: `\n    \n    \n\n    \n    \n  `,\n  providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n  imports: [ResolveAsyncProvidersDirective, ChildComponent],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ParentComponent {\n  readonly stringInjectionToken = STRING_INJECTOR_TOKEN;\n}\n\n@Component({\n  selector: 'child-component',\n  template: `Async injector value: {{ inputText }}`,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ChildComponent {\n  @Input() inputText!: string;\n}Installation\nDo you like this library? Go ahead and use it! It is production ready, with 100% code coverage, protected by integration tests, and uses semantic versioning. To install it:\nnpm install @nx-squeezer/ngx-async-injector\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.0.5\n        \n            Description : Angular library that provides async dependency injection\n        \n            Keywords : angular, async, DI, dependency injection, providers\n        \n            Homepage : https://github.com/nx-squeezer/squeezer/tree/main/packages/ngx-async-injector\n        \n            Bugs : https://github.com/nx-squeezer/squeezer/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/nx-squeezer/squeezer.git\n        \n            Author : samuelfernandez\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ArrayItemType   (src/.../array-item.ts)\n                        \n                        \n                            AsyncFactoryWithInjectionContext   (src/.../async-factory-provider.ts)\n                        \n                        \n                            AsyncProviderTypes   (src/.../async-provider-types.ts)\n                        \n                        \n                            AsyncStaticProvider   (src/.../async-static-provider.ts)\n                        \n                        \n                            InjectionTokenType   (src/.../injection-token-type.ts)\n                        \n                        \n                            InjectionTokenTypeCollection   (src/.../injection-token-type.ts)\n                        \n                        \n                            InjectionTokenTypeMap   (src/.../injection-token-type.ts)\n                        \n                        \n                            ResolveAsyncProvidersContext   (src/.../resolve-async-providers.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/interfaces/array-item.ts\n    \n    \n        \n            \n                \n                    \n                    ArrayItemType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/lib/interfaces/async-factory-provider.ts\n    \n    \n        \n            \n                \n                    \n                    AsyncFactoryWithInjectionContext\n                \n            \n            \n                \n                    Type of an async factory provider.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/lib/interfaces/async-provider-types.ts\n    \n    \n        \n            \n                \n                    \n                    AsyncProviderTypes\n                \n            \n            \n                \n                    Type map for async providers in a keyed map.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/lib/interfaces/async-static-provider.ts\n    \n    \n        \n            \n                \n                    \n                    AsyncStaticProvider\n                \n            \n            \n                \n                    Union type of static async providers.\n\n                \n            \n            \n                \n                        AsyncValueProvider | AsyncFactoryProvider | AsyncClassProvider | AsyncValueMultiProvider | AsyncFactoryMultiProvider | AsyncClassMultiProvider\n\n                \n            \n        \n    \n    src/lib/interfaces/injection-token-type.ts\n    \n    \n        \n            \n                \n                    \n                    InjectionTokenType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InjectionTokenTypeCollection\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InjectionTokenTypeMap\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/lib/directives/resolve-async-providers.directive.ts\n    \n    \n        \n            \n                \n                    \n                    ResolveAsyncProvidersContext\n                \n            \n            \n                \n                    Type of the structural directive context that exposes resolved async validators.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            resolve   (src/.../resolve.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/functions/resolve.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (injectionToken: InjectionToken): Promise => {\n  return inject(AsyncInjector).resolve(injectionToken);\n}\n                    \n                \n\n            \n                \n                    resolve and resolveMany functions can be used in route resolvers to ensure that certain async providers are resolved before a route loads.\nThey could be used in other places as needed, since they return a promise that resolves when the async provider is resolved and returns its value.\nIt can be compared to Angular's inject function, but for async providers.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
