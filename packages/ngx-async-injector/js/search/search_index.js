var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AsyncClassMultiProvider.html",[0,0.024,1,1.295]],["body/interfaces/AsyncClassMultiProvider.html",[0,0.033,1,1.978,2,0.69,3,0.69,4,0.69,5,0.519,6,0.69,7,2.088,8,0.786,9,0.601,10,0.912,11,1.978,12,0.344,13,1.2,14,0.809,15,1.745,16,1.458,17,1.362,18,0.443,19,0.93,20,2.876,21,0.792,22,0.049,23,1.435,24,1.144,25,1.144,26,1.296,27,1.296,28,1.724,29,1.011,30,1.474,31,1.474,32,1.687,33,1.954,34,0.917,35,1.748,36,1.204,37,1.011,38,1.011,39,1.687,40,0.786,41,2.312,42,1.144,43,0.033,44,0.033]],["title/interfaces/AsyncClassProvider.html",[0,0.024,35,1.295]],["body/interfaces/AsyncClassProvider.html",[0,0.033,1,1.754,2,0.693,3,0.693,4,0.693,5,0.522,6,0.693,7,2.091,8,0.79,9,0.604,10,0.913,11,1.982,12,0.345,13,1.064,14,0.81,15,1.75,16,1.461,17,1.208,18,0.445,19,0.933,20,2.881,21,0.794,22,0.049,23,1.437,24,1.15,25,1.15,26,1.303,27,1.303,28,1.726,29,1.016,30,1.481,31,1.481,32,1.696,33,1.964,34,0.919,35,1.982,36,1.208,37,1.016,38,1.016,39,1.696,40,0.79,41,2.324,42,1.15,43,0.033,44,0.033]],["title/interfaces/AsyncFactoryMultiProvider.html",[0,0.024,45,1.295]],["body/interfaces/AsyncFactoryMultiProvider.html",[0,0.032,2,0.668,3,0.668,4,0.668,5,0.503,6,0.668,8,0.762,9,0.582,10,0.924,11,1.946,12,0.346,13,1.18,14,0.814,15,1.717,16,1.439,17,1.34,18,0.429,19,0.91,21,0.779,22,0.049,23,1.425,24,1.109,25,1.109,26,1.256,27,1.256,28,1.705,29,0.98,34,0.969,36,1.178,37,0.98,38,0.98,40,0.762,42,1.109,43,0.032,44,0.032,45,1.946,46,2.382,47,2.845,48,1.946,49,1.109,50,1.256,51,1.894,52,1.428,53,1.711,54,1.635,55,2.24]],["title/interfaces/AsyncFactoryProvider.html",[0,0.024,53,1.295]],["body/interfaces/AsyncFactoryProvider.html",[0,0.032,2,0.672,3,0.672,4,0.672,5,0.506,6,0.672,8,0.766,9,0.585,10,0.926,11,1.951,12,0.346,13,1.041,14,0.815,15,1.722,16,1.442,17,1.182,18,0.432,19,0.913,21,0.781,22,0.049,23,1.427,24,1.114,25,1.114,26,1.262,27,1.262,28,1.708,29,0.984,34,0.971,36,1.182,37,0.984,38,0.984,40,0.766,42,1.114,43,0.032,44,0.032,45,1.717,46,2.384,47,2.85,48,1.951,49,1.114,50,1.262,51,1.903,52,1.435,53,1.951,54,1.643,55,2.251]],["title/interfaces/AsyncMultiProvider.html",[0,0.024,17,0.892]],["body/interfaces/AsyncMultiProvider.html",[0,0.033,2,0.939,3,0.939,4,0.939,5,0.707,6,0.939,8,1.071,9,0.819,10,0.707,12,0.251,13,1.498,14,0.782,17,1.467,18,0.604,19,1.133,22,0.047,34,0.819,43,0.04,44,0.04,56,3.799,57,4.691,58,3.211,59,2.662]],["title/interfaces/AsyncProviderConfig.html",[0,0.024,16,0.892]],["body/interfaces/AsyncProviderConfig.html",[0,0.027,2,0.776,3,0.776,4,0.776,5,0.584,6,0.776,9,0.676,10,0.757,12,0.315,14,0.717,16,1.301,18,0.498,19,1.005,22,0.049,23,0.884,34,0.676,43,0.036,44,0.036,49,1.667,60,2.6,61,3.369,62,2.848,63,3.954,64,3.342,65,4.096,66,4.096,67,1.957,68,4.161,69,4.161,70,4.161,71,2.848,72,3.369,73,2.459,74,3.369,75,3.369,76,2.521,77,1.889,78,3.342,79,3.369,80,1.897]],["title/interfaces/AsyncValueMultiProvider.html",[0,0.024,81,1.295]],["body/interfaces/AsyncValueMultiProvider.html",[0,0.033,2,0.704,3,0.704,4,0.704,5,0.53,6,0.704,8,0.802,9,0.613,10,0.891,11,1.998,12,0.346,13,1.212,14,0.813,15,1.763,16,1.47,17,1.376,18,0.452,19,0.942,21,0.8,22,0.049,23,1.419,24,1.167,25,1.167,26,1.322,27,1.322,28,1.735,29,1.031,34,0.926,36,1.22,37,1.031,38,1.031,40,0.802,42,1.167,43,0.033,44,0.033,81,1.998,82,2.098,83,2.53,84,1.771,85,1.721,86,2.359]],["title/interfaces/AsyncValueProvider.html",[0,0.024,84,1.295]],["body/interfaces/AsyncValueProvider.html",[0,0.034,2,0.707,3,0.707,4,0.707,5,0.532,6,0.707,8,0.806,9,0.616,10,0.893,11,2.003,12,0.346,13,1.078,14,0.814,15,1.768,16,1.473,17,1.224,18,0.454,19,0.946,21,0.802,22,0.049,23,1.421,24,1.173,25,1.173,26,1.329,27,1.329,28,1.738,29,1.037,34,0.929,36,1.224,37,1.037,38,1.037,40,0.806,42,1.173,43,0.034,44,0.034,81,1.777,82,2.1,83,2.534,84,2.003,85,1.73,86,2.371]],["title/interfaces/InjectionContext.html",[0,0.024,48,1.295]],["body/interfaces/InjectionContext.html",[0,0.03,2,0.859,3,0.859,4,0.859,5,0.647,9,0.748,12,0.286,18,0.552,19,1.072,21,0.968,22,0.049,23,1.223,34,0.748,43,0.038,44,0.038,48,2.016,49,1.779,50,2.016,67,1.425,80,2.101,87,2.434,88,2.879,89,2.861,90,2.416,91,2.879,92,2.879,93,3.556,94,3.556]],["title/directives/ResolveAsyncProvidersDirective.html",[95,1.295,96,1.685]],["body/directives/ResolveAsyncProvidersDirective.html",[3,0.315,4,0.315,5,0.237,7,1.701,9,0.275,10,0.746,12,0.329,14,0.332,18,0.203,22,0.05,23,0.865,29,0.962,34,0.45,37,0.757,40,0.589,42,1.491,43,0.018,44,0.018,50,1.927,52,0.674,59,3.126,62,0.894,64,2.15,67,1.643,73,0.772,76,0.674,77,2.11,78,0.894,80,0.772,82,1.389,83,1.621,89,1.402,90,0.971,91,1.732,92,1.057,95,1.784,96,2.509,97,0.894,98,1.859,99,0.894,100,1.104,101,1.732,102,3.698,103,1.264,104,1.917,105,1.732,106,1.732,107,1.732,108,1.732,109,1.732,110,1.732,111,2.543,112,3.321,113,2.15,114,1.732,115,1.732,116,1.464,117,1.732,118,3.698,119,1.856,120,3.014,121,2.543,122,2.543,123,3.321,124,3.538,125,3.321,126,3.321,127,2.543,128,3.014,129,2.543,130,2.543,131,3.438,132,1.732,133,1.732,134,1.464,135,1.264,136,1.464,137,1.464,138,1.732,139,1.859,140,1.732,141,2.543,142,2.2,143,1.732,144,2.139,145,2.717,146,2.717,147,1.306,148,2.139,149,2.139,150,2.139,151,2.717,152,2.139,153,1.732,154,2.139,155,2.543,156,1.306,157,1.732,158,1.464,159,1.732,160,1.306,161,1.306,162,1.859,163,2.2,164,1.057,165,2.139,166,0.772,167,2.543,168,1.306,169,2.139,170,2.139,171,2.806,172,1.306,173,1.306,174,1.306,175,1.306,176,2.139,177,2.139,178,3.182,179,1.306,180,1.306,181,1.306,182,1.306,183,1.306,184,1.306,185,1.306,186,1.306,187,1.306,188,1.306,189,1.306,190,1.306,191,1.306,192,1.306,193,1.306,194,1.306,195,1.306,196,1.306,197,1.306,198,1.306,199,2.139,200,1.306,201,2.717,202,2.139,203,1.057,204,2.139,205,1.306]],["title/interfaces/TypeWithoutConstructorParams.html",[0,0.024,30,1.472]],["body/interfaces/TypeWithoutConstructorParams.html",[0,0.034,2,0.962,3,0.962,4,0.962,5,0.724,7,1.596,9,0.838,10,0.724,12,0.257,15,1.907,21,0.865,22,0.046,30,2.456,31,2.456,32,2.812,33,2.726,34,0.838,43,0.041,44,0.041,52,2.056,100,2.056,104,1.596,206,3.225,207,3.225,208,2.726]],["title/changelog.html",[209,1.947,210,1.947,211,1.947]],["body/changelog.html",[5,0.502,12,0.243,22,0.041,43,0.032,44,0.032,67,1.508,211,2.235,212,2.76,213,1.889,214,2.76,215,2.235,216,5.08,217,4.965,218,2.76,219,2.76,220,2.76,221,2.76,222,4.965,223,2.76,224,2.76,225,4.811,226,2.76,227,2.76,228,2.76,229,4.597,230,4.597,231,4.597,232,3.896,233,2.76,234,2.76,235,2.76,236,2.76,237,5.353,238,2.76,239,3.763,240,3.763,241,3.147,242,4.281,243,3.467,244,3.763,245,2.76,246,4.597,247,3.763,248,3.763,249,2.76,250,2.76,251,2.76,252,2.76,253,2.76,254,2.76,255,2.76,256,2.76,257,3.763,258,4.281,259,2.575,260,2.76,261,2.76,262,2.76,263,2.76,264,2.76,265,2.76,266,2.76,267,4.811,268,3.763,269,2.76,270,2.76,271,2.76,272,2.76,273,4.281,274,3.763,275,2.76,276,2.76,277,2.235,278,2.76,279,2.76,280,2.76,281,2.76,282,2.76,283,2.235,284,2.76,285,2.76,286,2.76,287,2.76,288,2.76,289,2.76,290,2.235,291,2.76]],["title/coverage.html",[292,2.633]],["body/coverage.html",[0,0.045,1,1.202,5,0.481,6,1.283,7,1.678,8,1.463,10,0.481,12,0.171,13,1.007,14,0.411,16,0.828,17,0.828,21,0.957,22,0.048,30,1.366,31,1.366,32,1.564,35,1.202,39,1.564,43,0.031,44,0.031,45,1.202,46,1.901,48,1.202,53,1.202,54,1.564,60,2.143,81,1.202,82,1.678,84,1.202,85,1.564,87,1.812,88,2.143,90,1.202,95,1.202,96,1.564,98,1.812,99,1.812,119,2.475,206,2.143,207,2.143,208,1.812,292,1.812,293,2.143,294,2.647,295,2.647,296,4.531,297,4.188,298,2.143,299,2.143,300,5.358,301,3.391,302,3.391,303,2.475,304,2.143,305,2.647,306,5.024,307,3.391,308,3.391,309,2.647,310,2.647]],["title/dependencies.html",[259,1.646,311,2.34]],["body/dependencies.html",[22,0.046,43,0.043,44,0.043,80,2.537,311,3.404,312,4.293,313,4.293,314,4.293,315,4.293]],["title/miscellaneous/functions.html",[316,1.092,317,2.02]],["body/miscellaneous/functions.html",[1,1.348,6,0.86,7,1.426,8,1.304,10,0.922,12,0.323,13,0.98,14,0.766,18,0.308,20,1.171,21,0.647,22,0.047,25,0.794,28,1.848,35,0.9,36,1.236,37,1.399,38,1.399,39,1.754,40,0.546,43,0.025,44,0.025,45,1.348,46,1.615,47,1.171,49,1.189,52,2.04,53,0.9,54,1.754,58,2.897,62,3.375,67,0.794,71,1.357,76,1.532,77,1.794,81,1.348,82,1.845,83,1.023,84,0.9,85,1.754,89,1.023,90,0.9,97,1.357,100,2.04,103,1.171,104,1.898,113,3.375,116,1.357,119,2.721,134,2.032,135,2.103,136,2.436,137,1.357,155,1.605,157,1.605,164,3.993,166,2.958,213,1.357,298,1.605,299,2.404,301,1.605,302,3.2,303,2.798,307,1.605,308,3.2,316,0.9,317,1.754,318,2.882,319,1.982,320,3.558,321,2.882,322,1.982,323,1.982,324,1.982,325,1.982,326,1.982,327,1.605,328,1.605,329,1.605,330,1.605,331,1.605,332,1.605,333,1.171,334,1.605,335,1.605,336,1.605,337,2.404,338,1.605,339,1.605,340,1.605,341,3.558,342,1.982,343,2.404,344,3.558,345,1.982,346,2.968,347,1.982,348,2.968,349,1.982,350,1.982,351,1.982,352,2.032,353,1.357,354,1.357,355,1.357,356,1.357,357,1.357,358,1.357,359,1.357,360,1.357,361,1.357,362,1.982,363,1.982,364,1.605,365,1.982,366,3.558,367,2.968]],["title/index.html",[18,0.373,209,1.947,210,1.947]],["body/index.html",[7,1.415,12,0.326,13,0.784,14,0.662,20,1.681,21,0.698,22,0.049,23,0.582,31,0.478,34,0.743,36,0.5,38,0.892,40,0.582,43,0.014,44,0.014,46,0.727,47,1.249,48,0.727,49,0.847,50,0.96,56,0.749,58,1.724,59,2.53,61,1.296,63,1.296,64,2.976,65,2.704,66,1.296,67,1.481,71,0.633,72,0.749,73,0.946,74,1.296,75,1.712,76,0.826,77,1.937,79,0.749,82,1.248,83,1.823,89,1.469,90,1.897,95,1.516,96,1.249,97,0.633,100,1.908,101,0.749,102,2.704,103,0.946,104,1.974,105,1.296,106,1.296,107,2.522,108,1.296,109,1.296,110,0.749,111,1.296,112,3.808,113,0.633,114,0.749,115,2.304,116,1.095,117,0.749,118,3.634,119,2.41,120,1.712,121,1.296,122,1.712,123,2.304,124,2.304,125,2.039,126,2.039,127,1.712,128,1.296,129,1.712,130,1.296,131,2.304,132,0.749,133,0.749,134,1.095,135,0.547,136,1.447,137,1.447,138,2.039,139,2.131,140,0.749,141,1.296,142,0.749,143,0.749,153,1.296,158,1.447,159,0.749,162,0.633,166,0.547,178,1.296,203,2.522,208,0.633,213,2.86,232,2.039,241,1.724,243,1.296,277,0.749,283,0.749,290,1.296,292,0.633,293,1.712,296,0.749,303,1.249,311,0.633,317,1.249,327,2.039,328,1.296,329,1.296,330,1.296,331,0.749,332,0.749,333,0.547,334,0.749,335,1.296,336,2.039,337,1.296,338,1.712,339,1.296,340,0.749,352,2.417,353,1.447,354,0.633,355,1.724,356,1.095,357,0.633,358,1.724,359,0.633,360,0.633,361,1.447,364,0.749,368,2.518,369,1.6,370,1.6,371,3.114,372,1.6,373,1.6,374,2.518,375,2.845,376,1.6,377,1.296,378,0.925,379,0.925,380,0.925,381,2.114,382,2.518,383,0.925,384,2.518,385,0.925,386,0.925,387,0.925,388,0.925,389,1.6,390,0.925,391,0.925,392,1.6,393,0.925,394,0.925,395,2.114,396,2.845,397,0.925,398,2.114,399,0.925,400,0.925,401,0.925,402,1.6,403,0.925,404,0.925,405,1.6,406,1.6,407,1.6,408,2.114,409,0.925,410,1.6,411,0.925,412,0.925,413,2.518,414,0.925,415,0.925,416,0.925,417,0.925,418,0.925,419,0.925,420,0.925,421,0.925,422,1.6,423,0.925,424,0.925,425,0.925,426,0.925,427,0.925,428,0.925,429,0.925,430,0.925,431,0.925,432,0.925,433,0.925,434,1.6,435,0.925,436,0.925,437,0.925,438,0.925,439,0.925,440,0.925,441,1.296,442,0.925,443,0.925,444,0.925,445,1.6,446,3.532,447,3.532,448,0.925,449,2.114,450,1.6,451,0.925,452,1.6,453,2.518,454,1.6,455,0.925,456,1.6,457,0.925,458,0.925,459,0.925,460,0.925,461,0.925,462,0.925,463,0.925,464,0.925,465,0.925,466,0.925,467,0.925,468,0.925,469,0.925,470,0.925,471,1.6,472,1.6,473,1.6,474,1.6,475,0.925,476,1.6,477,0.925,478,0.925,479,0.925,480,0.925,481,0.925,482,0.925,483,0.925,484,0.925,485,0.925,486,1.6,487,0.925,488,0.925,489,0.925,490,0.925,491,0.925,492,0.925,493,0.925,494,1.6,495,0.925,496,1.6,497,0.925,498,0.925,499,1.6,500,2.518,501,1.6,502,3.114,503,1.6,504,2.845,505,0.925,506,0.925,507,0.925,508,0.925,509,0.925,510,0.925,511,0.925,512,0.925,513,1.6,514,1.6,515,0.925,516,0.925,517,2.114,518,0.925,519,0.925,520,0.925,521,0.925,522,0.925,523,0.925,524,0.925,525,0.925,526,0.925,527,0.925,528,0.925,529,0.925,530,0.925,531,0.925,532,0.925,533,0.925,534,0.925,535,0.925,536,0.925,537,0.925,538,0.925,539,0.925,540,0.925,541,0.925,542,0.925,543,0.925,544,0.925,545,1.6,546,0.925,547,1.6,548,0.925,549,0.925,550,0.925,551,0.925,552,0.925,553,0.925,554,0.925,555,0.925,556,0.925,557,0.925,558,0.925,559,0.925,560,1.6,561,0.925]],["title/modules.html",[333,2.273]],["body/modules.html",[22,0.043,43,0.043,44,0.043,333,2.614]],["title/overview.html",[562,3.115]],["body/overview.html",[2,1.052,22,0.043,43,0.043,44,0.043,95,1.978,562,3.528,563,4.357,564,4.357]],["title/properties.html",[19,0.826,259,1.646]],["body/properties.html",[9,0.811,12,0.324,19,0.93,22,0.048,43,0.04,44,0.04,49,1.868,67,1.543,104,1.543,158,2.636,215,3.118,241,3.192,377,3.776,441,3.118,565,3.851,566,3.851,567,3.851,568,3.851,569,4.663,570,3.851,571,3.851,572,3.851,573,3.851,574,3.851,575,3.851,576,3.851,577,3.851,578,3.851,579,3.851]],["title/miscellaneous/typealiases.html",[316,1.092,580,3.418]],["body/miscellaneous/typealiases.html",[1,1.478,6,1.122,8,1.352,10,0.924,12,0.336,14,0.721,18,0.505,21,0.592,22,0.045,24,1.682,28,1.487,29,1.645,35,1.478,43,0.036,44,0.036,45,1.478,46,2.11,50,1.478,51,2.874,53,1.478,76,2.534,77,1.478,81,1.478,84,1.478,87,2.229,95,1.478,98,2.229,99,2.874,104,1.682,135,2.481,139,2.229,162,2.229,163,2.637,167,3.4,171,3.4,316,1.478,318,3.763,321,2.637,343,3.4,581,3.256,582,3.256,583,4.198,584,4.198,585,4.198,586,4.647,587,4.909,588,4.198,589,3.256,590,3.256,591,3.256]],["title/miscellaneous/variables.html",[316,1.092,592,2.768]],["body/miscellaneous/variables.html",[12,0.319,14,0.58,18,0.58,21,0.68,22,0.046,36,1.432,40,1.261,43,0.039,44,0.039,73,2.209,77,2.079,78,3.135,82,1.835,89,1.93,90,2.248,100,2.364,103,2.209,104,1.835,166,2.209,303,2.209,304,3.028,316,1.697,317,2.209,352,3.135,353,2.559,354,2.559,355,2.559,356,2.559,357,2.559,358,2.559,359,2.559,360,2.559,361,2.559,592,3.028,593,3.739,594,3.739]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["009816c",{"_index":251,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":222,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":217,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":267,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":257,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":225,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":223,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":563,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":288,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":280,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":272,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":271,"title":{},"body":{"changelog.html":{}}}],["1.0.4",{"_index":270,"title":{},"body":{"changelog.html":{}}}],["1.0.5",{"_index":269,"title":{},"body":{"changelog.html":{}}}],["1.0.6",{"_index":266,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":564,"title":{},"body":{"overview.html":{}}}],["100",{"_index":296,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["1013",{"_index":250,"title":{},"body":{"changelog.html":{}}}],["1099",{"_index":234,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":238,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":220,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":273,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":258,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":268,"title":{},"body":{"changelog.html":{}}}],["17.0.0",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["2.0.0",{"_index":256,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":254,"title":{},"body":{"changelog.html":{}}}],["2.0.2",{"_index":252,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":306,"title":{},"body":{"coverage.html":{}}}],["2023",{"_index":237,"title":{},"body":{"changelog.html":{}}}],["2024",{"_index":216,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":255,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":218,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":253,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":236,"title":{},"body":{"changelog.html":{}}}],["3.0.1",{"_index":228,"title":{},"body":{"changelog.html":{}}}],["3.0.2",{"_index":227,"title":{},"body":{"changelog.html":{}}}],["3.0.3",{"_index":226,"title":{},"body":{"changelog.html":{}}}],["3.0.4",{"_index":224,"title":{},"body":{"changelog.html":{}}}],["3.0.5",{"_index":221,"title":{},"body":{"changelog.html":{}}}],["3.1.0",{"_index":219,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":215,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["3/3",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["5234f18",{"_index":279,"title":{},"body":{"changelog.html":{}}}],["527",{"_index":286,"title":{},"body":{"changelog.html":{}}}],["58e28fa",{"_index":245,"title":{},"body":{"changelog.html":{}}}],["679",{"_index":264,"title":{},"body":{"changelog.html":{}}}],["681",{"_index":261,"title":{},"body":{"changelog.html":{}}}],["682",{"_index":262,"title":{},"body":{"changelog.html":{}}}],["733a9f8",{"_index":265,"title":{},"body":{"changelog.html":{}}}],["85f83e1",{"_index":235,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":165,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["_all_",{"_index":176,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["_asyncinjectorinitializer",{"_index":180,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["above",{"_index":429,"title":{},"body":{"index.html":{}}}],["actually",{"_index":459,"title":{},"body":{"index.html":{}}}],["add",{"_index":276,"title":{},"body":{"changelog.html":{}}}],["additionally",{"_index":133,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["afterwards",{"_index":535,"title":{},"body":{"index.html":{}}}],["against",{"_index":538,"title":{},"body":{"index.html":{}}}],["ahead",{"_index":551,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":581,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":241,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["angular's",{"_index":361,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/core",{"_index":80,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"dependencies.html":{}}}],["another",{"_index":406,"title":{},"body":{"index.html":{}}}],["any).useasyncclass",{"_index":41,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{}}}],["any).useasyncfactory",{"_index":55,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{}}}],["any).useasyncvalue",{"_index":86,"title":{},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{}}}],["api",{"_index":375,"title":{},"body":{"index.html":{}}}],["app",{"_index":397,"title":{},"body":{"index.html":{}}}],["app_initializer",{"_index":398,"title":{},"body":{"index.html":{}}}],["application",{"_index":464,"title":{},"body":{"index.html":{}}}],["approach",{"_index":484,"title":{},"body":{"index.html":{}}}],["approutes",{"_index":470,"title":{},"body":{"index.html":{}}}],["array",{"_index":25,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"miscellaneous/functions.html":{}}}],["arrayitemtype",{"_index":24,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"miscellaneous/typealiases.html":{}}}],["arrow_up",{"_index":244,"title":{},"body":{"changelog.html":{}}}],["async",{"_index":12,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["async.function.ts",{"_index":308,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["async_injector_initializer",{"_index":173,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["asyncclassmultiprovider",{"_index":1,"title":{"interfaces/AsyncClassMultiProvider.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncclassprovider",{"_index":35,"title":{"interfaces/AsyncClassProvider.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncfactorymultiprovider",{"_index":45,"title":{"interfaces/AsyncFactoryMultiProvider.html":{}},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncfactoryprovider",{"_index":53,"title":{"interfaces/AsyncFactoryProvider.html":{}},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncfactorywithinjectioncontext",{"_index":51,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"miscellaneous/typealiases.html":{}}}],["asynchronous",{"_index":382,"title":{},"body":{"index.html":{}}}],["asynchronously",{"_index":390,"title":{},"body":{"index.html":{}}}],["asyncinjector",{"_index":91,"title":{},"body":{"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{}}}],["asyncinjector['resolve",{"_index":94,"title":{},"body":{"interfaces/InjectionContext.html":{}}}],["asyncmultiprovider",{"_index":17,"title":{"interfaces/AsyncMultiProvider.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{}}}],["asyncproviderconfig",{"_index":16,"title":{"interfaces/AsyncProviderConfig.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{}}}],["asyncproviders",{"_index":474,"title":{},"body":{"index.html":{}}}],["asyncprovidertypes",{"_index":343,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncstaticprovider",{"_index":28,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncstaticproviders",{"_index":346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["asyncvaluemultiprovider",{"_index":81,"title":{"interfaces/AsyncValueMultiProvider.html":{}},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncvalueprovider",{"_index":84,"title":{"interfaces/AsyncValueProvider.html":{}},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["author",{"_index":578,"title":{},"body":{"properties.html":{}}}],["available",{"_index":138,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["await",{"_index":514,"title":{},"body":{"index.html":{}}}],["base",{"_index":349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["before",{"_index":355,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["behavior",{"_index":520,"title":{},"body":{"index.html":{}}}],["being",{"_index":364,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["between",{"_index":540,"title":{},"body":{"index.html":{}}}],["blocking",{"_index":402,"title":{},"body":{"index.html":{}}}],["blocks",{"_index":485,"title":{},"body":{"index.html":{}}}],["bootstrapapplication(appcomponent",{"_index":446,"title":{},"body":{"index.html":{}}}],["break",{"_index":385,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":239,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":229,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":571,"title":{},"body":{"properties.html":{}}}],["bundle",{"_index":410,"title":{},"body":{"index.html":{}}}],["called",{"_index":541,"title":{},"body":{"index.html":{}}}],["can't",{"_index":534,"title":{},"body":{"index.html":{}}}],["case",{"_index":476,"title":{},"body":{"index.html":{}}}],["caused",{"_index":411,"title":{},"body":{"index.html":{}}}],["cdr",{"_index":184,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["certain",{"_index":103,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["changedetection",{"_index":125,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["changedetectionstrategy.onpush",{"_index":126,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["changedetectorref",{"_index":168,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["changelog",{"_index":211,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":240,"title":{},"body":{"changelog.html":{}}}],["check",{"_index":38,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["child",{"_index":129,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["childcomponent",{"_index":123,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["class",{"_index":7,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["class_provider",{"_index":499,"title":{},"body":{"index.html":{}}}],["code",{"_index":371,"title":{},"body":{"index.html":{}}}],["collection",{"_index":345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common",{"_index":407,"title":{},"body":{"index.html":{}}}],["compared",{"_index":360,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["completed",{"_index":482,"title":{},"body":{"index.html":{}}}],["completion",{"_index":530,"title":{},"body":{"index.html":{}}}],["component",{"_index":118,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["components",{"_index":334,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["config",{"_index":27,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{}}}],["config.ts",{"_index":60,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"coverage.html":{}}}],["config_token",{"_index":490,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":61,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["cons",{"_index":401,"title":{},"body":{"index.html":{}}}],["const",{"_index":203,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{}}}],["consume",{"_index":391,"title":{},"body":{"index.html":{}}}],["consumption",{"_index":458,"title":{},"body":{"index.html":{}}}],["context",{"_index":50,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["context.ts",{"_index":88,"title":{},"body":{"interfaces/InjectionContext.html":{},"coverage.html":{}}}],["contrary",{"_index":525,"title":{},"body":{"index.html":{}}}],["controlled",{"_index":521,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":292,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cyclic",{"_index":539,"title":{},"body":{"index.html":{}}}],["data",{"_index":389,"title":{},"body":{"index.html":{}}}],["declaration",{"_index":456,"title":{},"body":{"index.html":{}}}],["declare",{"_index":327,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["declared",{"_index":336,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["declaring",{"_index":496,"title":{},"body":{"index.html":{}}}],["default",{"_index":73,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":11,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{}}}],["defined",{"_index":155,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{}}}],["defines",{"_index":57,"title":{},"body":{"interfaces/AsyncMultiProvider.html":{}}}],["delay",{"_index":106,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["delays",{"_index":403,"title":{},"body":{"index.html":{}}}],["demand",{"_index":489,"title":{},"body":{"index.html":{}}}],["demo",{"_index":469,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":311,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":377,"title":{},"body":{"index.html":{},"properties.html":{}}}],["deps",{"_index":246,"title":{},"body":{"changelog.html":{}}}],["described",{"_index":428,"title":{},"body":{"index.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"properties.html":{}}}],["designed",{"_index":379,"title":{},"body":{"index.html":{}}}],["destroyed",{"_index":187,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["di",{"_index":158,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{},"properties.html":{}}}],["diagram",{"_index":462,"title":{},"body":{"index.html":{}}}],["different",{"_index":498,"title":{},"body":{"index.html":{}}}],["directive",{"_index":95,"title":{"directives/ResolveAsyncProvidersDirective.html":{}},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["directives",{"_index":97,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["documentation",{"_index":293,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["done",{"_index":465,"title":{},"body":{"index.html":{}}}],["e2fd0a8",{"_index":263,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":330,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["eager",{"_index":66,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["ensure",{"_index":354,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["entry",{"_index":284,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":71,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["even",{"_index":527,"title":{},"body":{"index.html":{}}}],["example",{"_index":112,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["examples",{"_index":372,"title":{},"body":{"index.html":{}}}],["executing",{"_index":532,"title":{},"body":{"index.html":{}}}],["existing",{"_index":386,"title":{},"body":{"index.html":{}}}],["explanatory",{"_index":544,"title":{},"body":{"index.html":{}}}],["export",{"_index":34,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"index.html":{}}}],["exposes",{"_index":162,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":15,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/TypeWithoutConstructorParams.html":{}}}],["f23e180",{"_index":287,"title":{},"body":{"changelog.html":{}}}],["factory",{"_index":46,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["factory.ts",{"_index":512,"title":{},"body":{"index.html":{}}}],["factory_provider",{"_index":505,"title":{},"body":{"index.html":{}}}],["false",{"_index":188,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["features",{"_index":243,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"changelog.html":{},"coverage.html":{}}}],["finally",{"_index":519,"title":{},"body":{"index.html":{}}}],["fine",{"_index":426,"title":{},"body":{"index.html":{}}}],["first",{"_index":508,"title":{},"body":{"index.html":{}}}],["firstservice",{"_index":510,"title":{},"body":{"index.html":{}}}],["firststring",{"_index":545,"title":{},"body":{"index.html":{}}}],["firstvaluefrom(inject(httpclient).get('/config",{"_index":491,"title":{},"body":{"index.html":{}}}],["fix",{"_index":282,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":230,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":56,"title":{},"body":{"interfaces/AsyncMultiProvider.html":{},"index.html":{}}}],["flexibility",{"_index":437,"title":{},"body":{"index.html":{}}}],["full",{"_index":492,"title":{},"body":{"index.html":{}}}],["function",{"_index":21,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":317,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["generated",{"_index":212,"title":{},"body":{"changelog.html":{}}}],["getting",{"_index":209,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["git+https://github.com/nx",{"_index":576,"title":{},"body":{"properties.html":{}}}],["give",{"_index":436,"title":{},"body":{"index.html":{}}}],["go",{"_index":550,"title":{},"body":{"index.html":{}}}],["grained",{"_index":427,"title":{},"body":{"index.html":{}}}],["great",{"_index":418,"title":{},"body":{"index.html":{}}}],["guard",{"_index":37,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{}}}],["happens",{"_index":516,"title":{},"body":{"index.html":{}}}],["having",{"_index":381,"title":{},"body":{"index.html":{}}}],["help",{"_index":435,"title":{},"body":{"index.html":{}}}],["hierarchy",{"_index":117,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["homepage",{"_index":568,"title":{},"body":{"properties.html":{}}}],["https://github.com/nx",{"_index":569,"title":{},"body":{"properties.html":{}}}],["identical",{"_index":457,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["implementation",{"_index":350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["implementers",{"_index":438,"title":{},"body":{"index.html":{}}}],["implements",{"_index":144,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["implicit",{"_index":204,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["import",{"_index":23,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["import('./factory').then((x",{"_index":506,"title":{},"body":{"index.html":{}}}],["import('./first",{"_index":500,"title":{},"body":{"index.html":{}}}],["import('./my",{"_index":452,"title":{},"body":{"index.html":{}}}],["import('./route.component",{"_index":473,"title":{},"body":{"index.html":{}}}],["import('./second",{"_index":518,"title":{},"body":{"index.html":{}}}],["import('./value').then((x",{"_index":503,"title":{},"body":{"index.html":{}}}],["imports",{"_index":122,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["increasing",{"_index":416,"title":{},"body":{"index.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{}}}],["initial",{"_index":290,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["initializer.token",{"_index":175,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["initializes",{"_index":72,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["inject",{"_index":89,"title":{},"body":{"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inject(async_injector_initializer",{"_index":181,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inject(asyncinjector",{"_index":179,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inject(asyncinjector).resolve(injectiontoken",{"_index":594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(changedetectorref",{"_index":185,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inject(httpclient).get('/config",{"_index":488,"title":{},"body":{"index.html":{}}}],["inject(my_service",{"_index":450,"title":{},"body":{"index.html":{}}}],["inject(second_injection_token",{"_index":548,"title":{},"body":{"index.html":{}}}],["inject(string_injector_token",{"_index":132,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["inject(templateref",{"_index":183,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inject(viewcontainerref",{"_index":182,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["injected",{"_index":478,"title":{},"body":{"index.html":{}}}],["injectedtext",{"_index":130,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["injection",{"_index":49,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/InjectionContext.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["injectioncontext",{"_index":48,"title":{"interfaces/InjectionContext.html":{}},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/InjectionContext.html":{},"coverage.html":{},"index.html":{}}}],["injectiontoken",{"_index":78,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('my",{"_index":497,"title":{},"body":{"index.html":{}}}],["injectiontokens",{"_index":366,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectiontokentype",{"_index":585,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["injectiontokentypecollection",{"_index":588,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["injectiontokentypemap",{"_index":171,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/typealiases.html":{}}}],["injector",{"_index":67,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["injector/async",{"_index":92,"title":{},"body":{"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{}}}],["injectors",{"_index":116,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["input",{"_index":142,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["input('ngxresolveasyncproviders",{"_index":186,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inputs",{"_index":152,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inputtext",{"_index":141,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["inside",{"_index":477,"title":{},"body":{"index.html":{}}}],["install",{"_index":560,"title":{},"body":{"index.html":{}}}],["installation",{"_index":376,"title":{},"body":{"index.html":{}}}],["instantiating",{"_index":433,"title":{},"body":{"index.html":{}}}],["instead",{"_index":137,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["integration",{"_index":555,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"interfaces/TypeWithoutConstructorParams.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"overview.html":{}}}],["interfaces/injection",{"_index":172,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["isasyncclassprovider",{"_index":39,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isasyncclassprovider(asyncstaticprovider",{"_index":322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isasyncfactoryprovider",{"_index":54,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isasyncfactoryprovider(asyncstaticprovider",{"_index":323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isasyncvalueprovider",{"_index":85,"title":{},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isasyncvalueprovider(asyncstaticprovider",{"_index":324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ismultiprovider",{"_index":299,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ismultiprovider(asyncstaticprovider",{"_index":325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["item",{"_index":26,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{}}}],["item.ts",{"_index":583,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["itself",{"_index":531,"title":{},"body":{"index.html":{}}}],["jscutlery/semver",{"_index":214,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keyed",{"_index":590,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keywords",{"_index":567,"title":{},"body":{"properties.html":{}}}],["known",{"_index":400,"title":{},"body":{"index.html":{}}}],["later",{"_index":432,"title":{},"body":{"index.html":{}}}],["lazy",{"_index":65,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["library",{"_index":441,"title":{},"body":{"index.html":{},"properties.html":{}}}],["license",{"_index":573,"title":{},"body":{"properties.html":{}}}],["list",{"_index":157,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{}}}],["live",{"_index":468,"title":{},"body":{"index.html":{}}}],["load",{"_index":115,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["loadcomponent",{"_index":472,"title":{},"body":{"index.html":{}}}],["loaded",{"_index":396,"title":{},"body":{"index.html":{}}}],["loading",{"_index":107,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["loads",{"_index":356,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":451,"title":{},"body":{"index.html":{}}}],["main",{"_index":283,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["main.ts",{"_index":445,"title":{},"body":{"index.html":{}}}],["major",{"_index":249,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":383,"title":{},"body":{"index.html":{}}}],["many",{"_index":421,"title":{},"body":{"index.html":{}}}],["many.ts",{"_index":302,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["map",{"_index":135,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["matching",{"_index":44,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["means",{"_index":522,"title":{},"body":{"index.html":{}}}],["memo",{"_index":275,"title":{},"body":{"changelog.html":{}}}],["metadata",{"_index":147,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["methods",{"_index":150,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["miscellaneous",{"_index":316,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":574,"title":{},"body":{"properties.html":{}}}],["mode",{"_index":63,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["modules",{"_index":333,"title":{"modules.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{},"modules.html":{}}}],["monorepo",{"_index":248,"title":{},"body":{"changelog.html":{}}}],["more",{"_index":329,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["motivation",{"_index":369,"title":{},"body":{"index.html":{}}}],["much",{"_index":108,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["multi",{"_index":13,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["multiple",{"_index":58,"title":{},"body":{"interfaces/AsyncMultiProvider.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["my_service",{"_index":447,"title":{},"body":{"index.html":{}}}],["myservice",{"_index":449,"title":{},"body":{"index.html":{}}}],["name",{"_index":164,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":335,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["needed",{"_index":358,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["needing",{"_index":412,"title":{},"body":{"index.html":{}}}],["needs",{"_index":395,"title":{},"body":{"index.html":{}}}],["new",{"_index":208,"title":{},"body":{"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":148,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["ngondestroy",{"_index":198,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["ngoninit",{"_index":190,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["ngtemplatecontextguard",{"_index":151,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["ngtemplatecontextguard(_",{"_index":160,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["ngx",{"_index":274,"title":{},"body":{"changelog.html":{}}}],["ngxresolveasyncproviders",{"_index":153,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["npm",{"_index":561,"title":{},"body":{"index.html":{}}}],["null",{"_index":42,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{}}}],["nx",{"_index":232,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["offers",{"_index":442,"title":{},"body":{"index.html":{}}}],["once",{"_index":481,"title":{},"body":{"index.html":{}}}],["ondestroy",{"_index":146,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["one",{"_index":328,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["oninit",{"_index":145,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["online",{"_index":466,"title":{},"body":{"index.html":{}}}],["option",{"_index":393,"title":{},"body":{"index.html":{}}}],["optional",{"_index":62,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{}}}],["others",{"_index":423,"title":{},"body":{"index.html":{}}}],["overload",{"_index":344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":562,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":259,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["pairs",{"_index":363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":113,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["params",{"_index":33,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/TypeWithoutConstructorParams.html":{}}}],["params.ts",{"_index":207,"title":{},"body":{"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{}}}],["parent",{"_index":479,"title":{},"body":{"index.html":{}}}],["parentcomponent",{"_index":127,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["particular",{"_index":439,"title":{},"body":{"index.html":{}}}],["passed",{"_index":114,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["path",{"_index":471,"title":{},"body":{"index.html":{}}}],["payload",{"_index":409,"title":{},"body":{"index.html":{}}}],["peer",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["piece",{"_index":460,"title":{},"body":{"index.html":{}}}],["places",{"_index":357,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["playground",{"_index":277,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["point",{"_index":285,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":109,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["preserved",{"_index":533,"title":{},"body":{"index.html":{}}}],["private",{"_index":178,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["problem",{"_index":408,"title":{},"body":{"index.html":{}}}],["production",{"_index":552,"title":{},"body":{"index.html":{}}}],["promise",{"_index":36,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["promise.resolve('value",{"_index":515,"title":{},"body":{"index.html":{}}}],["properties",{"_index":19,"title":{"properties.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"properties.html":{}}}],["protect",{"_index":537,"title":{},"body":{"index.html":{}}}],["protected",{"_index":554,"title":{},"body":{"index.html":{}}}],["provide",{"_index":64,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["provideasync",{"_index":119,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["provideasync(...asyncstaticproviders",{"_index":347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideasync(asyncstaticprovider",{"_index":326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideasync(asyncstaticproviders",{"_index":342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provided",{"_index":79,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["providedin",{"_index":420,"title":{},"body":{"index.html":{}}}],["providehttpclient",{"_index":486,"title":{},"body":{"index.html":{}}}],["provider",{"_index":14,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["provider.ts",{"_index":8,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["providerfactory",{"_index":513,"title":{},"body":{"index.html":{}}}],["providers",{"_index":104,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["providers.directive.ts",{"_index":99,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["providers.directive.ts:102",{"_index":156,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["providers.directive.ts:109",{"_index":161,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["providersvaluemap",{"_index":201,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["provides",{"_index":566,"title":{},"body":{"properties.html":{}}}],["readme",{"_index":278,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":131,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["ready",{"_index":553,"title":{},"body":{"index.html":{}}}],["recommended",{"_index":394,"title":{},"body":{"index.html":{}}}],["regular",{"_index":494,"title":{},"body":{"index.html":{}}}],["release",{"_index":291,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":101,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["rendered",{"_index":483,"title":{},"body":{"index.html":{}}}],["renderer",{"_index":387,"title":{},"body":{"index.html":{}}}],["rendering",{"_index":384,"title":{},"body":{"index.html":{}}}],["renders",{"_index":480,"title":{},"body":{"index.html":{}}}],["rendertemplate(providersvaluemap",{"_index":200,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["repository",{"_index":575,"title":{},"body":{"properties.html":{}}}],["requested",{"_index":524,"title":{},"body":{"index.html":{}}}],["requires",{"_index":331,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["rescope",{"_index":260,"title":{},"body":{"changelog.html":{}}}],["resolve",{"_index":90,"title":{},"body":{"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["resolve(first_injection_token",{"_index":546,"title":{},"body":{"index.html":{}}}],["resolveasyncproviderscontext",{"_index":167,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/typealiases.html":{}}}],["resolveasyncprovidersdirective",{"_index":96,"title":{"directives/ResolveAsyncProvidersDirective.html":{}},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"index.html":{}}}],["resolved",{"_index":77,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resolvemany",{"_index":303,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["resolvemany(...injectiontokens",{"_index":367,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolvemany(class_provider",{"_index":549,"title":{},"body":{"index.html":{}}}],["resolvemany(injectiontokens",{"_index":351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolvemany(my_service",{"_index":475,"title":{},"body":{"index.html":{}}}],["resolvemany(this.providers",{"_index":195,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["resolver",{"_index":374,"title":{},"body":{"index.html":{}}}],["resolvers",{"_index":353,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["resolves",{"_index":359,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["resolving",{"_index":69,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{}}}],["responsibility",{"_index":463,"title":{},"body":{"index.html":{}}}],["results",{"_index":43,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":40,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":166,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":413,"title":{},"body":{"index.html":{}}}],["route",{"_index":352,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["route's",{"_index":373,"title":{},"body":{"index.html":{}}}],["routes",{"_index":405,"title":{},"body":{"index.html":{}}}],["safely",{"_index":110,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["same",{"_index":337,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["samuelfernandez",{"_index":579,"title":{},"body":{"properties.html":{}}}],["scenarios",{"_index":422,"title":{},"body":{"index.html":{}}}],["secondstring",{"_index":547,"title":{},"body":{"index.html":{}}}],["see",{"_index":493,"title":{},"body":{"index.html":{}}}],["selector",{"_index":128,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["self",{"_index":543,"title":{},"body":{"index.html":{}}}],["semantic",{"_index":558,"title":{},"body":{"index.html":{}}}],["server",{"_index":431,"title":{},"body":{"index.html":{}}}],["service",{"_index":434,"title":{},"body":{"index.html":{}}}],["service').then((x",{"_index":453,"title":{},"body":{"index.html":{}}}],["service.ts",{"_index":509,"title":{},"body":{"index.html":{}}}],["services",{"_index":419,"title":{},"body":{"index.html":{}}}],["several",{"_index":399,"title":{},"body":{"index.html":{}}}],["shape",{"_index":365,"title":{},"body":{"miscellaneous/functions.html":{}}}],["show",{"_index":370,"title":{},"body":{"index.html":{}}}],["similar",{"_index":444,"title":{},"body":{"index.html":{}}}],["single",{"_index":339,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["size",{"_index":417,"title":{},"body":{"index.html":{}}}],["solve",{"_index":536,"title":{},"body":{"index.html":{}}}],["solves",{"_index":440,"title":{},"body":{"index.html":{}}}],["soon",{"_index":70,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{}}}],["splitting",{"_index":425,"title":{},"body":{"index.html":{}}}],["squeezer/ngx",{"_index":368,"title":{},"body":{"index.html":{}}}],["squeezer/squeezer.git",{"_index":577,"title":{},"body":{"properties.html":{}}}],["squeezer/squeezer/issues",{"_index":572,"title":{},"body":{"properties.html":{}}}],["squeezer/squeezer/tree/main/packages/ngx",{"_index":570,"title":{},"body":{"properties.html":{}}}],["src/.../array",{"_index":582,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../async",{"_index":318,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../injection",{"_index":586,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../is",{"_index":319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../provide",{"_index":320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../resolve",{"_index":321,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../resolve.ts",{"_index":593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/directives/resolve",{"_index":98,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/functions/is",{"_index":298,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/functions/resolve",{"_index":301,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/functions/resolve.ts",{"_index":304,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/interfaces/array",{"_index":589,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/interfaces/async",{"_index":6,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/interfaces/injection",{"_index":87,"title":{},"body":{"interfaces/InjectionContext.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/interfaces/type",{"_index":206,"title":{},"body":{"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{}}}],["src/lib/providers/provide",{"_index":307,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stackblitz",{"_index":467,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":124,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["start",{"_index":68,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{}}}],["started",{"_index":210,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["statements",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":29,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/typealiases.html":{}}}],["staticprovider",{"_index":341,"title":{},"body":{"miscellaneous/functions.html":{}}}],["still",{"_index":529,"title":{},"body":{"index.html":{}}}],["string",{"_index":143,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["string_injector_token",{"_index":120,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["stringasyncfactory",{"_index":121,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["stringinjectiontoken",{"_index":140,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["structural",{"_index":139,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["such",{"_index":424,"title":{},"body":{"index.html":{}}}],["supports",{"_index":134,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["synchronous",{"_index":380,"title":{},"body":{"index.html":{}}}],["system",{"_index":378,"title":{},"body":{"index.html":{}}}],["t",{"_index":52,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["tada",{"_index":289,"title":{},"body":{"changelog.html":{}}}],["template",{"_index":102,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["template[ngxresolveasyncproviders",{"_index":149,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["templateref",{"_index":169,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["tests",{"_index":556,"title":{},"body":{"index.html":{}}}],["that's",{"_index":455,"title":{},"body":{"index.html":{}}}],["then((providersvaluemap",{"_index":196,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.asyncinjector",{"_index":194,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.asyncinjector.resolveall().then",{"_index":192,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.cdr.markforcheck",{"_index":205,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.destroyed",{"_index":199,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.providers",{"_index":191,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.rendertemplate",{"_index":193,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.rendertemplate(providersvaluemap",{"_index":197,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.viewcontainerref.createembeddedview(this.templateref",{"_index":202,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["those",{"_index":111,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["though",{"_index":528,"title":{},"body":{"index.html":{}}}],["through",{"_index":392,"title":{},"body":{"index.html":{}}}],["times",{"_index":340,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["today",{"_index":388,"title":{},"body":{"index.html":{}}}],["token",{"_index":76,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["tokens",{"_index":136,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["tokens/async",{"_index":174,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["tproviders",{"_index":154,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["tree",{"_index":159,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["trigger",{"_index":526,"title":{},"body":{"index.html":{}}}],["triggers",{"_index":461,"title":{},"body":{"index.html":{}}}],["true",{"_index":59,"title":{},"body":{"interfaces/AsyncMultiProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["ts",{"_index":177,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["tslib",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":542,"title":{},"body":{"index.html":{}}}],["type",{"_index":10,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts",{"_index":587,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":580,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":495,"title":{},"body":{"index.html":{}}}],["typeof",{"_index":93,"title":{},"body":{"interfaces/InjectionContext.html":{}}}],["types.ts",{"_index":584,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typewithoutconstructorparams",{"_index":30,"title":{"interfaces/TypeWithoutConstructorParams.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{}}}],["undefined",{"_index":348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["union",{"_index":591,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unknown",{"_index":189,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["until",{"_index":75,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["update",{"_index":247,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":231,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":338,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["useasyncclass",{"_index":20,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["useasyncfactory",{"_index":47,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["useasyncvalue",{"_index":83,"title":{},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["useclass",{"_index":448,"title":{},"body":{"index.html":{}}}],["used",{"_index":100,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":487,"title":{},"body":{"index.html":{}}}],["useful",{"_index":105,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["uses",{"_index":557,"title":{},"body":{"index.html":{}}}],["using",{"_index":213,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["usually",{"_index":415,"title":{},"body":{"index.html":{}}}],["v17",{"_index":242,"title":{},"body":{"changelog.html":{}}}],["v17.2.0",{"_index":233,"title":{},"body":{"changelog.html":{}}}],["validators",{"_index":163,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/typealiases.html":{}}}],["value",{"_index":82,"title":{},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value').then((x",{"_index":517,"title":{},"body":{"index.html":{}}}],["value.ts",{"_index":511,"title":{},"body":{"index.html":{}}}],["value_provider",{"_index":502,"title":{},"body":{"index.html":{}}}],["variable",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":592,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":414,"title":{},"body":{"index.html":{}}}],["version",{"_index":565,"title":{},"body":{"properties.html":{}}}],["versioning",{"_index":559,"title":{},"body":{"index.html":{}}}],["very",{"_index":443,"title":{},"body":{"index.html":{}}}],["viewcontainerref",{"_index":170,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["wait",{"_index":74,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["way",{"_index":430,"title":{},"body":{"index.html":{}}}],["well",{"_index":332,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["whole",{"_index":404,"title":{},"body":{"index.html":{}}}],["widen",{"_index":281,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":31,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{},"index.html":{}}}],["won't",{"_index":523,"title":{},"body":{"index.html":{}}}],["x.firstservice",{"_index":501,"title":{},"body":{"index.html":{}}}],["x.myservice",{"_index":454,"title":{},"body":{"index.html":{}}}],["x.providerfactory",{"_index":507,"title":{},"body":{"index.html":{}}}],["x.value",{"_index":504,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AsyncClassMultiProvider.html":{"url":"interfaces/AsyncClassMultiProvider.html","title":"interface - AsyncClassMultiProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncClassMultiProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-class-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async class multi provider.\n\n            \n\n            \n                Extends\n            \n            \n                            AsyncProviderConfig\n                            AsyncMultiProvider\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncClass\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncClass:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async class import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\nimport { TypeWithoutConstructorParams } from './type-without-constructor-params';\n\n/**\n * Type to define an async class provider.\n */\nexport interface AsyncClassProvider extends AsyncProviderConfig {\n  /**\n   * Async class import.\n   */\n  useAsyncClass: () => Promise>;\n}\n\n/**\n * Type to define an async class multi provider.\n */\nexport interface AsyncClassMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async class import.\n   */\n  useAsyncClass: () => Promise>>;\n}\n\n/**\n * Type guard to check if a provider is an async class provider.\n */\nexport function isAsyncClassProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncClassProvider | AsyncClassMultiProvider {\n  return (asyncStaticProvider as any).useAsyncClass != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncClassProvider.html":{"url":"interfaces/AsyncClassProvider.html","title":"interface - AsyncClassProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncClassProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-class-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async class provider.\n\n            \n\n            \n                Extends\n            \n            \n                            AsyncProviderConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncClass\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncClass:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async class import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\nimport { TypeWithoutConstructorParams } from './type-without-constructor-params';\n\n/**\n * Type to define an async class provider.\n */\nexport interface AsyncClassProvider extends AsyncProviderConfig {\n  /**\n   * Async class import.\n   */\n  useAsyncClass: () => Promise>;\n}\n\n/**\n * Type to define an async class multi provider.\n */\nexport interface AsyncClassMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async class import.\n   */\n  useAsyncClass: () => Promise>>;\n}\n\n/**\n * Type guard to check if a provider is an async class provider.\n */\nexport function isAsyncClassProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncClassProvider | AsyncClassMultiProvider {\n  return (asyncStaticProvider as any).useAsyncClass != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncFactoryMultiProvider.html":{"url":"interfaces/AsyncFactoryMultiProvider.html","title":"interface - AsyncFactoryMultiProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncFactoryMultiProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-factory-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async factory multi provider.\n\n            \n\n            \n                Extends\n            \n            \n                            AsyncProviderConfig\n                            AsyncMultiProvider\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncFactory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async factory import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\nimport { InjectionContext } from './injection-context';\n\n/**\n * Type of an async factory provider.\n */\nexport type AsyncFactoryWithInjectionContext = (injectionContext: InjectionContext) => T;\n\n/**\n * Type to define an async factory provider.\n */\nexport interface AsyncFactoryProvider extends AsyncProviderConfig {\n  /**\n   * Async factory import.\n   */\n  useAsyncFactory: () => Promise>;\n}\n\n/**\n * Type to define an async factory multi provider.\n */\nexport interface AsyncFactoryMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async factory import.\n   */\n  useAsyncFactory: () => Promise>>;\n}\n\n/**\n * Type guard to check if a provider is an async factory provider.\n */\nexport function isAsyncFactoryProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncFactoryProvider | AsyncFactoryMultiProvider {\n  return (asyncStaticProvider as any).useAsyncFactory != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncFactoryProvider.html":{"url":"interfaces/AsyncFactoryProvider.html","title":"interface - AsyncFactoryProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncFactoryProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-factory-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async factory provider.\n\n            \n\n            \n                Extends\n            \n            \n                            AsyncProviderConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncFactory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async factory import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\nimport { InjectionContext } from './injection-context';\n\n/**\n * Type of an async factory provider.\n */\nexport type AsyncFactoryWithInjectionContext = (injectionContext: InjectionContext) => T;\n\n/**\n * Type to define an async factory provider.\n */\nexport interface AsyncFactoryProvider extends AsyncProviderConfig {\n  /**\n   * Async factory import.\n   */\n  useAsyncFactory: () => Promise>;\n}\n\n/**\n * Type to define an async factory multi provider.\n */\nexport interface AsyncFactoryMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async factory import.\n   */\n  useAsyncFactory: () => Promise>>;\n}\n\n/**\n * Type guard to check if a provider is an async factory provider.\n */\nexport function isAsyncFactoryProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncFactoryProvider | AsyncFactoryMultiProvider {\n  return (asyncStaticProvider as any).useAsyncFactory != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncMultiProvider.html":{"url":"interfaces/AsyncMultiProvider.html","title":"interface - AsyncMultiProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncMultiProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-multi-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type of an async multi provider.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            multi\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        multi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multi:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Flag that defines the provider as multiple.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AsyncMultiProvider {\n  /**\n   * Flag that defines the provider as multiple.\n   */\n  multi: true;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncProviderConfig.html":{"url":"interfaces/AsyncProviderConfig.html","title":"interface - AsyncProviderConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncProviderConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-provider-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration of an async provider.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            provide\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"lazy\" | \"eager\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"lazy\" | \"eager\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If eager, the async injector will start resolving as soon as the environment injector initializes.\nIf lazy (default), it will wait until the injection token is resolved.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provide\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provide:     InjectionToken\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InjectionToken\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Token to be provided.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Configuration of an async provider.\n */\nexport interface AsyncProviderConfig {\n  /**\n   * Token to be provided.\n   */\n  provide: InjectionToken;\n\n  /**\n   * If `eager`, the async injector will start resolving as soon as the environment injector initializes.\n   * If `lazy` (default), it will wait until the injection token is resolved.\n   */\n  mode?: 'lazy' | 'eager';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncValueMultiProvider.html":{"url":"interfaces/AsyncValueMultiProvider.html","title":"interface - AsyncValueMultiProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncValueMultiProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-value-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async value multi provider.\n\n            \n\n            \n                Extends\n            \n            \n                            AsyncProviderConfig\n                            AsyncMultiProvider\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncValue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncValue:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async value import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\n\n/**\n * Type to define an async value provider.\n */\nexport interface AsyncValueProvider extends AsyncProviderConfig {\n  /**\n   * Async value import.\n   */\n  useAsyncValue: () => Promise;\n}\n\n/**\n * Type to define an async value multi provider.\n */\nexport interface AsyncValueMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async value import.\n   */\n  useAsyncValue: () => Promise>;\n}\n\n/**\n * Type guard to check if a provider is an async value provider.\n */\nexport function isAsyncValueProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncValueProvider | AsyncValueMultiProvider {\n  return (asyncStaticProvider as any).useAsyncValue != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncValueProvider.html":{"url":"interfaces/AsyncValueProvider.html","title":"interface - AsyncValueProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncValueProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-value-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async value provider.\n\n            \n\n            \n                Extends\n            \n            \n                            AsyncProviderConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncValue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncValue:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async value import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\n\n/**\n * Type to define an async value provider.\n */\nexport interface AsyncValueProvider extends AsyncProviderConfig {\n  /**\n   * Async value import.\n   */\n  useAsyncValue: () => Promise;\n}\n\n/**\n * Type to define an async value multi provider.\n */\nexport interface AsyncValueMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async value import.\n   */\n  useAsyncValue: () => Promise>;\n}\n\n/**\n * Type guard to check if a provider is an async value provider.\n */\nexport function isAsyncValueProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncValueProvider | AsyncValueMultiProvider {\n  return (asyncStaticProvider as any).useAsyncValue != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectionContext.html":{"url":"interfaces/InjectionContext.html","title":"interface - InjectionContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InjectionContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/injection-context.ts\n        \n\n\n            \n                Description\n            \n            \n                Injection context for async inject function.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            inject\n                                        \n                                \n                                \n                                        \n                                            resolve\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inject:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Inject function.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolve\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resolve:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Resolve function.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject } from '@angular/core';\n\nimport { AsyncInjector } from '../injector/async-injector';\n\n/**\n * Injection context for async inject function.\n */\nexport interface InjectionContext {\n  /**\n   * Inject function.\n   */\n  inject: typeof inject;\n\n  /**\n   * Resolve function.\n   */\n  resolve: AsyncInjector['resolve'];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResolveAsyncProvidersDirective.html":{"url":"directives/ResolveAsyncProvidersDirective.html","title":"directive - ResolveAsyncProvidersDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ResolveAsyncProvidersDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/resolve-async-providers.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive can be used to render a template after certain async providers have resolved. It can be useful to delay loading them as much as possible.\nThe template can safely inject those resolved async providers.\nExample :When no parameters are passed, it will load all async injectors in the injector hierarchy:\nExample :@Component({\n  template: ``,\n  providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n  imports: [ResolveAsyncProvidersDirective, ChildComponent],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ParentComponent {}\n\n@Component({\n  selector: 'child-component',\n  template: `Async injector value: {{ injectedText }}`,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ChildComponent {\n  readonly injectedText = inject(STRING_INJECTOR_TOKEN);\n}Example :Additionally, it also supports a map of async provider tokens. Only those will be resolved instead of all. The resolved async providers\nare available as the context for the structural directive. Example:\nExample :@Component({\n  template: `\n    \n    \n\n    \n    \n  `,\n  providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n  imports: [ResolveAsyncProvidersDirective, ChildComponent],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ParentComponent {\n  readonly stringInjectionToken = STRING_INJECTOR_TOKEN;\n}\n\n@Component({\n  selector: 'child-component',\n  template: `Async injector value: {{ inputText }}`,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ChildComponent {\n  @Input() inputText!: string;\n}\n            \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        ng-template[ngxResolveAsyncProviders]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ngTemplateContextGuard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxResolveAsyncProviders\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngxResolveAsyncProviders\n                    \n                \n                \n                    \n                        Type :     TProviders | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/resolve-async-providers.directive.ts:102\n                            \n                        \n                \n                    \n                        List of providers to be resolved. If not defined, it will resolve all async providers in the DI tree.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        ngTemplateContextGuard\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngTemplateContextGuard(_: ResolveAsyncProvidersDirective, context)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/directives/resolve-async-providers.directive.ts:109\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Type guard that exposes resolved async validators.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            ResolveAsyncProvidersDirective\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ResolveAsyncProvidersContext\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectorRef,\n  Directive,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n  InjectionToken,\n} from '@angular/core';\n\nimport { AsyncInjector } from '../injector/async-injector';\nimport { InjectionTokenTypeMap } from '../interfaces/injection-token-type';\nimport { ASYNC_INJECTOR_INITIALIZER } from '../tokens/async-injector-initializer.token';\n\n/**\n * This directive can be used to render a template after certain async providers have resolved. It can be useful to delay loading them as much as possible.\n * The template can safely inject those resolved async providers.\n *\n * @example\n *\n * When no parameters are passed, it will load _all_ async injectors in the injector hierarchy:\n *\n * ```ts\n * @Component({\n *   template: ``,\n *   providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n *   imports: [ResolveAsyncProvidersDirective, ChildComponent],\n *   standalone: true,\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n * })\n * class ParentComponent {}\n *\n * @Component({\n *   selector: 'child-component',\n *   template: `Async injector value: {{ injectedText }}`,\n *   standalone: true,\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n * })\n * class ChildComponent {\n *   readonly injectedText = inject(STRING_INJECTOR_TOKEN);\n * }\n * ```\n *\n * @example\n *\n * Additionally, it also supports a map of async provider tokens. Only those will be resolved instead of _all_. The resolved async providers\n * are available as the context for the structural directive. Example:\n *\n * ```ts\n * @Component({\n *   template: `\n *     \n *     \n *\n *     \n *     \n *   `,\n *   providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n *   imports: [ResolveAsyncProvidersDirective, ChildComponent],\n *   standalone: true,\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n * })\n * class ParentComponent {\n *   readonly stringInjectionToken = STRING_INJECTOR_TOKEN;\n * }\n *\n * @Component({\n *   selector: 'child-component',\n *   template: `Async injector value: {{ inputText }}`,\n *   standalone: true,\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n * })\n * class ChildComponent {\n *   @Input() inputText!: string;\n * }\n * ```\n */\n@Directive({\n  selector: 'ng-template[ngxResolveAsyncProviders]',\n  standalone: true,\n})\nexport class ResolveAsyncProvidersDirective }>\n  implements OnInit, OnDestroy\n{\n  private readonly asyncInjector = inject(AsyncInjector);\n  private readonly _asyncInjectorInitializer = inject(ASYNC_INJECTOR_INITIALIZER);\n  private readonly viewContainerRef = inject(ViewContainerRef);\n  private readonly templateRef = inject(TemplateRef);\n  private readonly cdr = inject(ChangeDetectorRef);\n\n  /**\n   * List of providers to be resolved. If not defined, it will resolve all async providers in the DI tree.\n   */\n  @Input('ngxResolveAsyncProviders') providers: TProviders | null = null;\n\n  private destroyed = false;\n\n  /**\n   * Type guard that exposes resolved async validators.\n   */\n  static ngTemplateContextGuard }>(\n    _: ResolveAsyncProvidersDirective,\n    context: unknown\n  ): context is ResolveAsyncProvidersContext {\n    return true;\n  }\n\n  ngOnInit() {\n    if (this.providers === null) {\n      this.asyncInjector.resolveAll().then(() => this.renderTemplate());\n    } else {\n      this.asyncInjector\n        .resolveMany(this.providers)\n        .then((providersValueMap: InjectionTokenTypeMap) => this.renderTemplate(providersValueMap));\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyed = true;\n  }\n\n  private renderTemplate(providersValueMap?: InjectionTokenTypeMap) {\n    if (this.destroyed) {\n      return;\n    }\n\n    if (providersValueMap == null) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      const context: ResolveAsyncProvidersContext = {\n        $implicit: providersValueMap,\n        ...providersValueMap,\n      };\n      this.viewContainerRef.createEmbeddedView(this.templateRef, context);\n    }\n\n    this.cdr.markForCheck();\n  }\n}\n\n/**\n * Type of the structural directive context that exposes resolved async validators.\n */\nexport type ResolveAsyncProvidersContext }> = {\n  $implicit: InjectionTokenTypeMap;\n} & InjectionTokenTypeMap;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TypeWithoutConstructorParams.html":{"url":"interfaces/TypeWithoutConstructorParams.html","title":"interface - TypeWithoutConstructorParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TypeWithoutConstructorParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/type-without-constructor-params.ts\n        \n\n\n            \n                Description\n            \n            \n                Type of a constructor without params used for class async providers.\n\n            \n\n            \n                Extends\n            \n            \n                            Function\n            \n\n\n\n\n    \n\n\n    \n        export interface TypeWithoutConstructorParams extends Function {\n  new (): T;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nThis file was generated using @jscutlery/semver.\n3.1.1 (2024-03-26)\n3.1.0 (2024-03-14)\n3.0.5 (2024-02-08)\n3.0.4 (2024-02-07)\n3.0.3 (2024-02-07)\n3.0.2 (2024-02-07)\n3.0.1 (2024-02-02)\nBug Fixes\n\nupgrade nx to v17.2.0 (#1099) (85f83e1)\n\n3.0.0 (2023-12-03)\n⚠ BREAKING CHANGES\n\nUpgrade to Angular v17\n\nFeatures\n\n:arrow_up: upgrade to Angular v17 (58e28fa)\n\nBug Fixes\n\ndeps: ⬆️ update nx monorepo to v17 (major) (#1013) (009816c)\n\n2.0.2 (2023-07-27)\n2.0.1 (2023-07-25)\n2.0.0 (2023-05-16)\n⚠ BREAKING CHANGES\n\ndeps: Upgrade to Angular and Nx 16\n\nFeatures\n\n:package: rescope to @nx (#681) (#682) (e2fd0a8)\ndeps: :arrow_up: update monorepo to Angular and Nx 16 (#679) (733a9f8)\n\n1.0.6 (2023-04-17)\n1.0.5 (2023-04-17)\n1.0.4 (2023-04-05)\n1.0.3 (2023-04-04)\n1.0.2 (2023-03-15)\nBug Fixes\n\nngx-async-injector: :memo: add playground to README (5234f18)\n\n1.0.1 (2023-03-15)\nBug Fixes\n\nngx-async-injector: :package: widen deps and fix main entry point (#527) (f23e180)\n\n1.0.0 (2023-03-15)\nFeatures\n\n:tada: initial release\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/directives/resolve-async-providers.directive.ts\n            \n            directive\n            ResolveAsyncProvidersDirective\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/functions/is-multi-provider.ts\n            \n            function\n            isMultiProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/functions/resolve-many.ts\n            \n            function\n            resolveMany\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/functions/resolve-many.ts\n            \n            function\n            resolveMany\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/functions/resolve-many.ts\n            \n            function\n            resolveMany\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/functions/resolve.ts\n            \n            variable\n            resolve\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-class-provider.ts\n            \n            interface\n            AsyncClassMultiProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-class-provider.ts\n            \n            interface\n            AsyncClassProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-class-provider.ts\n            \n            function\n            isAsyncClassProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-factory-provider.ts\n            \n            interface\n            AsyncFactoryMultiProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-factory-provider.ts\n            \n            interface\n            AsyncFactoryProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-factory-provider.ts\n            \n            function\n            isAsyncFactoryProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-multi-provider.ts\n            \n            interface\n            AsyncMultiProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-provider-config.ts\n            \n            interface\n            AsyncProviderConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-value-provider.ts\n            \n            interface\n            AsyncValueMultiProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-value-provider.ts\n            \n            interface\n            AsyncValueProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-value-provider.ts\n            \n            function\n            isAsyncValueProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/interfaces/injection-context.ts\n            \n            interface\n            InjectionContext\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/interfaces/type-without-constructor-params.ts\n            \n            interface\n            TypeWithoutConstructorParams\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/providers/provide-async.function.ts\n            \n            function\n            provideAsync\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/providers/provide-async.function.ts\n            \n            function\n            provideAsync\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/providers/provide-async.function.ts\n            \n            function\n            provideAsync\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.5.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/core : ^17.0.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isAsyncClassProvider   (src/.../async-class-provider.ts)\n                        \n                        \n                            isAsyncFactoryProvider   (src/.../async-factory-provider.ts)\n                        \n                        \n                            isAsyncValueProvider   (src/.../async-value-provider.ts)\n                        \n                        \n                            isMultiProvider   (src/.../is-multi-provider.ts)\n                        \n                        \n                            provideAsync   (src/.../provide-async.function.ts)\n                        \n                        \n                            provideAsync   (src/.../provide-async.function.ts)\n                        \n                        \n                            provideAsync   (src/.../provide-async.function.ts)\n                        \n                        \n                            resolveMany   (src/.../resolve-many.ts)\n                        \n                        \n                            resolveMany   (src/.../resolve-many.ts)\n                        \n                        \n                            resolveMany   (src/.../resolve-many.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/interfaces/async-class-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAsyncClassProvider\n                        \n                    \n                \n            \n            \n                \nisAsyncClassProvider(asyncStaticProvider: AsyncStaticProvider)\n                \n            \n\n\n\n\n            \n                \n                        Type guard to check if a provider is an async class provider.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asyncStaticProvider\n                                            \n                                                            AsyncStaticProvider\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AsyncClassProvider | AsyncClassMultiProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/interfaces/async-factory-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAsyncFactoryProvider\n                        \n                    \n                \n            \n            \n                \nisAsyncFactoryProvider(asyncStaticProvider: AsyncStaticProvider)\n                \n            \n\n\n\n\n            \n                \n                        Type guard to check if a provider is an async factory provider.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asyncStaticProvider\n                                            \n                                                            AsyncStaticProvider\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AsyncFactoryProvider | AsyncFactoryMultiProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/interfaces/async-value-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAsyncValueProvider\n                        \n                    \n                \n            \n            \n                \nisAsyncValueProvider(asyncStaticProvider: AsyncStaticProvider)\n                \n            \n\n\n\n\n            \n                \n                        Type guard to check if a provider is an async value provider.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asyncStaticProvider\n                                            \n                                                            AsyncStaticProvider\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AsyncValueProvider | AsyncValueMultiProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/functions/is-multi-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMultiProvider\n                        \n                    \n                \n            \n            \n                \nisMultiProvider(asyncStaticProvider: AsyncStaticProvider)\n                \n            \n\n\n\n\n            \n                \n                        Type guard to check if the provider is defined as multiple.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asyncStaticProvider\n                                            \n                                                            AsyncStaticProvider\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AsyncValueMultiProvider | AsyncClassMultiProvider | AsyncFactoryMultiProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/providers/provide-async.function.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideAsync\n                        \n                    \n                \n            \n            \n                \nprovideAsync(asyncStaticProvider: AsyncStaticProvider)\n                \n            \n\n\n\n\n            \n                \n                        It is used to declare one or more async providers. For each provider, it requires the token, and then an async function that can be useAsyncValue, useAsyncClass or useAsyncFactory. It supports multi providers as well. It can be used in environment injectors, modules, components and directives. If multiple providers need to be declared in the same injector, use a single provideAsync function with multiple providers instead of using it multiple times.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asyncStaticProvider\n                                            \n                                                            AsyncStaticProvider\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     StaticProvider[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideAsync\n                        \n                    \n                \n            \n            \n                \nprovideAsync(asyncStaticProviders: AsyncProviderTypes)\n                \n            \n\n\n\n\n            \n                \n                        Overload for a collection of async providers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asyncStaticProviders\n                                            \n                                                            AsyncProviderTypes\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     StaticProvider[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideAsync\n                        \n                    \n                \n            \n            \n                \nprovideAsync(...asyncStaticProviders: undefined)\n                \n            \n\n\n\n\n            \n                \n                        Base implementation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asyncStaticProviders\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     StaticProvider[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/functions/resolve-many.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        resolveMany\n                        \n                    \n                \n            \n            \n                \nresolveMany(injectionTokens: T)\n                \n            \n\n\n\n\n            \n                \n                        resolve and resolveMany functions can be used in route resolvers to ensure that certain async providers are resolved before a route loads.\nThey could be used in other places as needed, since they return a promise that resolves when the async provider is resolved and returns its value.\nIt can be compared to Angular's inject function, but for async providers.\nresolveMany supports either a list of async provider tokens, or a map of key-value pairs with the value being the token.\nThe resolved value will have the same shape, either an array or a map of the resolved async providers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                injectionTokens\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveMany\n                        \n                    \n                \n            \n            \n                \nresolveMany(...injectionTokens: T)\n                \n            \n\n\n\n\n            \n                \n                        Overload for multiple injection tokens.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                injectionTokens\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveMany\n                        \n                    \n                \n            \n            \n                \nresolveMany(...injectionTokens: undefined)\n                \n            \n\n\n\n\n            \n                \n                        Overload for map of injection tokens.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                injectionTokens\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@nx-squeezer/ngx-async-injector \n      \n\nMotivation\nShow me the code\nExamples\nResolve using route's resolver\nResolve using a structural directive\nResolve configuration from API\n\n\nAPI documentation\nprovideAsync function\nresolve and resolveMany\n*ngxResolveAsyncProviders structural directive\n\n\nInstallation\n\nMotivation\nAngular's dependency injection (DI) system is designed to be synchronous, since having asynchronous providers would make component rendering asynchronous and break existing renderer.\nAs of today it is not possible to lazy load data asynchronously and consume it through a provider. The only option recommended by Angular when it needs to be loaded before the app initializes is using APP_INITIALIZER. However, it has several known cons because it is blocking and delays rendering the whole component tree and loading routes.\nAnother common problem is the initial payload of the main bundle caused by needing to declare providers in root. When a provider is needed by various features it usually needs to be declared in the root injector, increasing the initial bundle size. It would be great that services could be declared in the root component, but lazy loaded when needed. It is true that using providedIn: root could be used in many scenarios, but there are others where using async import() of a dependency would be more useful, such as code splitting and fine grained lazy loading.\nFor the scenarios described above, having a way to declare asynchronous providers, either by loading data from the server and later instantiating a service, or to lazy load them using import(), could help and give flexibility to implementers. This particular problem is what @nx-squeezer/ngx-async-injector solves.\nShow me the code\nThe API that this library offers is very much similar to Angular's DI. Check this code as an example:\nExample :// main.ts\nbootstrapApplication(AppComponent, {\n  providers: [\n    {\n      provide: MY_SERVICE,\n      useClass: MyService,\n    },\n  ],\n});\n\n// component\nclass Component {\n  private readonly myService = inject(MY_SERVICE);\n}Could be made asynchronous and lazy loaded using provideAsync():\nExample :// main.ts\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync({\n      provide: MY_SERVICE,\n      useAsyncClass: () => import('./my-service').then((x) => x.MyService),\n    }),\n  ],\n});\n\n// component\nclass Component {\n  private readonly myService = inject(MY_SERVICE);\n}That's it! Declaration is almost identical, and consumption is the same. But wait, when is the async provided actually loaded and resolved?\nIt needs another piece that triggers it: async provider resolvers. Check this diagram:\n\nAsync providers need to be resolved before being used, and that is a responsibility of the application. It can be done while loading a route using a route resolver, or with a structural directive that will delay rendering until they are loaded.\nCheck this online Stackblitz playground with a live demo.\nExamples\nResolve using route's resolver\nExample :export const appRoutes: Route[] = [\n  {\n    path: '',\n    loadComponent: () => import('./route.component'),\n    resolve: {\n      asyncProviders: () => resolveMany(MY_SERVICE),\n    },\n  },\n];In this case, the async provider will be resolved while the route loads, and the inside the component MY_SERVICE can be injected.\nResolve using a structural directive\nExample :@Component({\n  imports: [ResolveAsyncProvidersDirective, ChildComponent],\n  template: `  `,\n  standalone: true,\n})\nexport default class ParentComponent {\n  readonly MY_SERVICE = MY_SERVICE;\n}In this case, the async provider will be resolved when the parent component renders, and once completed the child component will be rendered having MY_SERVICE available.\nResolve configuration from API\nExample :// Instead of using the common approach of APP_INITIALIZER, which blocks loading and rendering until resolved:\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideHttpClient(),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: () => inject(HttpClient).get('/config'),\n      multi: true,\n    },\n  ],\n});\n\n// You could declare it with an async provider, which will be resolved on demand without blocking,\n// and yet available through DI:\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideHttpClient(),\n    {\n      provide: CONFIG_TOKEN,\n      useAsyncFactory: () => firstValueFrom(inject(HttpClient).get('/config')),\n    },\n  ],\n});API documentation\nCheck the full documentation to see all available features.\nprovideAsync function\nIt is used to declare one or more async providers. For each provider, it requires the token, and then an async function that can be useAsyncValue, useAsyncClass or useAsyncFactory. It supports multi providers as well. It can be used in environment injectors, modules, components and directives. If multiple providers need to be declared in the same injector, use a single provideAsync function with multiple providers instead of using it multiple times.\nAsync provider tokens are regular Angular injection tokens typed with the resolved value of the async provider.\nExample of declaring a single async provider:\nExample :export const MY_SERVICE = new InjectionToken('my-service-token');\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync({\n      provide: MY_SERVICE,\n      useAsyncClass: () => import('./my-service').then((x) => x.MyService),\n    }),\n  ],\n});Example of declaring multiple providers, each one with different async functions:\nExample :bootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync(\n      {\n        provide: CLASS_PROVIDER,\n        useAsyncClass: () => import('./first-service').then((x) => x.FirstService),\n      },\n      {\n        provide: VALUE_PROVIDER,\n        useAsyncValue: () => import('./value').then((x) => x.value),\n      },\n      {\n        provide: FACTORY_PROVIDER,\n        useAsyncFactory: () => import('./factory').then((x) => x.providerFactory),\n      }\n    ),\n  ],\n});\n\n// first-service.ts\nexport class FirstService {}\n\n// value.ts\nexport const value = 'value';\n\n// factory.ts\nexport async function providerFactory() {\n  return await Promise.resolve('value');\n}Multi providers can also be declared as it happens with Angular:\nExample :bootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync(\n      {\n        provide: VALUE_PROVIDER,\n        useAsyncValue: () => import('./first-value').then((x) => x.value),\n        multi: true,\n      },\n      {\n        provide: VALUE_PROVIDER,\n        useAsyncValue: () => import('./second-value').then((x) => x.value),\n        multi: true,\n      }\n    ),\n  ],\n});Finally, the lazy load behavior can be controlled by the mode flag. By default it is lazy, which means it won't be resolved until requested. eager on the contrary will trigger the load on declaration, even though resolvers are still needed to wait for completion. Example:\nExample :bootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync({\n      provide: VALUE_PROVIDER,\n      useAsyncValue: () => import('./first-value').then((x) => x.value),\n      mode: 'eager',\n    }),\n  ],\n});When using a factory provider, the function itself can be async. Regular inject function from Angular can be used before executing any async code since the injection context is preserved, however it can't be used afterwards. To solve that problem, and also to protect against cyclic dependencies between async providers, the factory provider function is called with a context that exposes two functions that are self explanatory, inject and resolve. Example:\nExample :import { InjectionContext } from '@nx-squeezer/ngx-async-injector';\n\nexport async function providerFactory({ inject, resolve }: InjectionContext): Promise {\n  const firstString = await resolve(FIRST_INJECTION_TOKEN);\n  const secondString = inject(SECOND_INJECTION_TOKEN);\n  return `${firstString} ${secondString}`;\n}resolve and resolveMany\nresolve and resolveMany functions can be used in route resolvers to ensure that certain async providers are resolved before a route loads. They could be used in other places as needed, since they return a promise that resolves when the async provider is resolved and returns its value. It can be compared to Angular's inject function, but for async providers.\nExample of how to use it in a route resolver:\nExample :export const routes: Route[] = [\n  {\n    path: '',\n    loadComponent: () => import('./route.component'),\n    providers: [\n      provideAsync(\n        {\n          provide: CLASS_PROVIDER,\n          useAsyncClass: () => import('./first-service').then((x) => x.FirstService),\n        },\n        {\n          provide: VALUE_PROVIDER,\n          useAsyncValue: () => import('./value').then((x) => x.value),\n        }\n      ),\n    ],\n    resolve: {\n      asyncProviders: () => resolveMany(CLASS_PROVIDER, VALUE_PROVIDER),\n    },\n  },\n];*ngxResolveAsyncProviders structural directive\nThis directive can be used to render a template after certain async providers have resolved. It can be useful to delay loading them as much as possible. The template can safely inject those resolved async providers.\nWhen no parameters are passed, it will load all async injectors in the injector hierarchy:\nExample :@Component({\n  template: ``,\n  providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n  imports: [ResolveAsyncProvidersDirective, ChildComponent],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ParentComponent {}\n\n@Component({\n  selector: 'child-component',\n  template: `Async injector value: {{ injectedText }}`,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ChildComponent {\n  readonly injectedText = inject(STRING_INJECTOR_TOKEN);\n}Additionally, it also supports a map of async provider tokens. Only those will be resolved instead of all. The resolved async providers are available as the context for the structural directive. Example:\nExample :@Component({\n  template: `\n    \n    \n\n    \n    \n  `,\n  providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n  imports: [ResolveAsyncProvidersDirective, ChildComponent],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ParentComponent {\n  readonly stringInjectionToken = STRING_INJECTOR_TOKEN;\n}\n\n@Component({\n  selector: 'child-component',\n  template: `Async injector value: {{ inputText }}`,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ChildComponent {\n  @Input() inputText!: string;\n}Installation\nDo you like this library? Go ahead and use it! It is production ready, with 100% code coverage, protected by integration tests, and uses semantic versioning. To install it:\nExample :npm install @nx-squeezer/ngx-async-injector\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.1.1\n        \n            Description : Angular library that provides async dependency injection\n        \n            Keywords : angular, async, DI, dependency injection, providers\n        \n            Homepage : https://github.com/nx-squeezer/squeezer/tree/main/packages/ngx-async-injector\n        \n            Bugs : https://github.com/nx-squeezer/squeezer/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/nx-squeezer/squeezer.git\n        \n            Author : samuelfernandez\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ArrayItemType   (src/.../array-item.ts)\n                        \n                        \n                            AsyncFactoryWithInjectionContext   (src/.../async-factory-provider.ts)\n                        \n                        \n                            AsyncProviderTypes   (src/.../async-provider-types.ts)\n                        \n                        \n                            AsyncStaticProvider   (src/.../async-static-provider.ts)\n                        \n                        \n                            InjectionTokenType   (src/.../injection-token-type.ts)\n                        \n                        \n                            InjectionTokenTypeCollection   (src/.../injection-token-type.ts)\n                        \n                        \n                            InjectionTokenTypeMap   (src/.../injection-token-type.ts)\n                        \n                        \n                            ResolveAsyncProvidersContext   (src/.../resolve-async-providers.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/interfaces/array-item.ts\n    \n    \n        \n            \n                \n                    \n                    ArrayItemType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/lib/interfaces/async-factory-provider.ts\n    \n    \n        \n            \n                \n                    \n                    AsyncFactoryWithInjectionContext\n                \n            \n            \n                \n                    Type of an async factory provider.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/lib/interfaces/async-provider-types.ts\n    \n    \n        \n            \n                \n                    \n                    AsyncProviderTypes\n                \n            \n            \n                \n                    Type map for async providers in a keyed map.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/lib/interfaces/async-static-provider.ts\n    \n    \n        \n            \n                \n                    \n                    AsyncStaticProvider\n                \n            \n            \n                \n                    Union type of static async providers.\n\n                \n            \n            \n                \n                        AsyncValueProvider | AsyncFactoryProvider | AsyncClassProvider | AsyncValueMultiProvider | AsyncFactoryMultiProvider | AsyncClassMultiProvider\n\n                \n            \n        \n    \n    src/lib/interfaces/injection-token-type.ts\n    \n    \n        \n            \n                \n                    \n                    InjectionTokenType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InjectionTokenTypeCollection\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InjectionTokenTypeMap\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/lib/directives/resolve-async-providers.directive.ts\n    \n    \n        \n            \n                \n                    \n                    ResolveAsyncProvidersContext\n                \n            \n            \n                \n                    Type of the structural directive context that exposes resolved async validators.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            resolve   (src/.../resolve.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/functions/resolve.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (injectionToken: InjectionToken): Promise => {\n  return inject(AsyncInjector).resolve(injectionToken);\n}\n                    \n                \n\n            \n                \n                    resolve and resolveMany functions can be used in route resolvers to ensure that certain async providers are resolved before a route loads.\nThey could be used in other places as needed, since they return a promise that resolves when the async provider is resolved and returns its value.\nIt can be compared to Angular's inject function, but for async providers.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
