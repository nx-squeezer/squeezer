var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AsyncClassMultiProvider.html",[0,0.024,1,1.295]],["body/interfaces/AsyncClassMultiProvider.html",[0,0.033,1,1.978,2,0.69,3,0.69,4,0.69,5,0.52,6,0.69,7,2.089,8,0.787,9,0.601,10,0.912,11,1.978,12,0.344,13,1.2,14,0.809,15,1.746,16,1.458,17,1.362,18,0.444,19,0.93,20,2.877,21,0.792,22,0.049,23,1.436,24,1.145,25,1.145,26,1.297,27,1.297,28,1.724,29,1.012,30,1.475,31,1.475,32,1.688,33,1.956,34,0.917,35,1.749,36,1.204,37,1.012,38,1.012,39,1.688,40,0.787,41,2.314,42,1.145,43,0.033,44,0.033]],["title/interfaces/AsyncClassProvider.html",[0,0.024,35,1.295]],["body/interfaces/AsyncClassProvider.html",[0,0.033,1,1.755,2,0.694,3,0.694,4,0.694,5,0.522,6,0.694,7,2.091,8,0.791,9,0.604,10,0.913,11,1.983,12,0.345,13,1.064,14,0.81,15,1.75,16,1.461,17,1.208,18,0.446,19,0.933,20,2.882,21,0.794,22,0.049,23,1.437,24,1.151,25,1.151,26,1.304,27,1.304,28,1.727,29,1.017,30,1.482,31,1.482,32,1.697,33,1.965,34,0.92,35,1.983,36,1.208,37,1.017,38,1.017,39,1.697,40,0.791,41,2.325,42,1.151,43,0.033,44,0.033]],["title/interfaces/AsyncFactoryMultiProvider.html",[0,0.024,45,1.295]],["body/interfaces/AsyncFactoryMultiProvider.html",[0,0.032,2,0.669,3,0.669,4,0.669,5,0.503,6,0.669,8,0.763,9,0.583,10,0.925,11,1.947,12,0.346,13,1.181,14,0.815,15,1.718,16,1.439,17,1.341,18,0.43,19,0.911,21,0.78,22,0.049,23,1.425,24,1.109,25,1.109,26,1.257,27,1.257,28,1.705,29,0.98,34,0.969,36,1.179,37,0.98,38,0.98,40,0.763,42,1.109,43,0.032,44,0.032,45,1.947,46,2.382,47,2.846,48,1.947,49,1.109,50,1.257,51,1.895,52,1.429,53,1.712,54,1.636,55,2.242]],["title/interfaces/AsyncFactoryProvider.html",[0,0.024,53,1.295]],["body/interfaces/AsyncFactoryProvider.html",[0,0.032,2,0.672,3,0.672,4,0.672,5,0.506,6,0.672,8,0.766,9,0.586,10,0.926,11,1.951,12,0.346,13,1.042,14,0.815,15,1.722,16,1.442,17,1.183,18,0.432,19,0.914,21,0.782,22,0.049,23,1.427,24,1.115,25,1.115,26,1.263,27,1.263,28,1.708,29,0.985,34,0.971,36,1.183,37,0.985,38,0.985,40,0.766,42,1.115,43,0.032,44,0.032,45,1.717,46,2.385,47,2.851,48,1.951,49,1.115,50,1.263,51,1.904,52,1.436,53,1.951,54,1.644,55,2.253]],["title/interfaces/AsyncMultiProvider.html",[0,0.024,17,0.892]],["body/interfaces/AsyncMultiProvider.html",[0,0.033,2,0.94,3,0.94,4,0.94,5,0.707,6,0.94,8,1.072,9,0.819,10,0.707,12,0.251,13,1.498,14,0.782,17,1.467,18,0.604,19,1.133,22,0.047,34,0.819,43,0.04,44,0.04,56,3.799,57,4.692,58,3.211,59,2.663]],["title/interfaces/AsyncProviderConfig.html",[0,0.024,16,0.892]],["body/interfaces/AsyncProviderConfig.html",[0,0.028,2,0.776,3,0.776,4,0.776,5,0.584,6,0.776,9,0.676,10,0.757,12,0.315,14,0.717,16,1.301,18,0.499,19,1.005,22,0.049,23,0.885,34,0.676,43,0.036,44,0.036,49,1.668,60,2.602,61,3.371,62,2.849,63,3.955,64,3.343,65,4.097,66,4.097,67,1.957,68,4.162,69,4.162,70,4.162,71,2.849,72,3.371,73,2.46,74,3.371,75,3.371,76,2.521,77,1.89,78,3.343,79,3.371,80,1.899]],["title/interfaces/AsyncValueMultiProvider.html",[0,0.024,81,1.295]],["body/interfaces/AsyncValueMultiProvider.html",[0,0.033,2,0.704,3,0.704,4,0.704,5,0.53,6,0.704,8,0.803,9,0.614,10,0.891,11,1.998,12,0.346,13,1.212,14,0.813,15,1.764,16,1.47,17,1.376,18,0.452,19,0.943,21,0.8,22,0.049,23,1.419,24,1.168,25,1.168,26,1.323,27,1.323,28,1.736,29,1.032,34,0.926,36,1.221,37,1.032,38,1.032,40,0.803,42,1.168,43,0.033,44,0.033,81,1.998,82,2.098,83,2.53,84,1.772,85,1.722,86,2.36]],["title/interfaces/AsyncValueProvider.html",[0,0.024,84,1.295]],["body/interfaces/AsyncValueProvider.html",[0,0.034,2,0.708,3,0.708,4,0.708,5,0.533,6,0.708,8,0.807,9,0.617,10,0.893,11,2.003,12,0.346,13,1.079,14,0.814,15,1.768,16,1.473,17,1.225,18,0.455,19,0.946,21,0.802,22,0.049,23,1.421,24,1.174,25,1.174,26,1.33,27,1.33,28,1.739,29,1.037,34,0.929,36,1.225,37,1.037,38,1.037,40,0.807,42,1.174,43,0.034,44,0.034,81,1.778,82,2.1,83,2.534,84,2.003,85,1.731,86,2.372]],["title/interfaces/InjectionContext.html",[0,0.024,48,1.295]],["body/interfaces/InjectionContext.html",[0,0.03,2,0.859,3,0.859,4,0.859,5,0.647,9,0.749,12,0.287,18,0.552,19,1.073,21,0.968,22,0.049,23,1.223,34,0.749,43,0.038,44,0.038,48,2.016,49,1.779,50,2.016,67,1.425,80,2.102,87,2.435,88,2.88,89,2.861,90,2.416,91,2.88,92,2.88,93,3.557,94,3.557]],["title/directives/ResolveAsyncProvidersDirective.html",[95,1.295,96,1.685]],["body/directives/ResolveAsyncProvidersDirective.html",[3,0.316,4,0.316,5,0.238,7,1.702,9,0.275,10,0.746,12,0.329,14,0.332,18,0.203,22,0.05,23,0.866,29,0.963,34,0.451,37,0.758,40,0.59,42,1.492,43,0.018,44,0.018,50,1.928,52,0.675,59,3.127,62,0.895,64,2.152,67,1.644,73,0.773,76,0.675,77,2.111,78,0.895,80,0.773,82,1.39,83,1.623,89,1.404,90,0.972,91,1.734,92,1.059,95,1.785,96,2.51,97,0.895,98,1.861,99,0.895,100,1.105,101,1.734,102,3.7,103,1.265,104,1.918,105,1.734,106,1.734,107,1.734,108,1.734,109,1.734,110,1.734,111,2.545,112,3.323,113,2.152,114,1.734,115,1.734,116,1.466,117,1.734,118,3.7,119,1.857,120,3.016,121,2.545,122,2.545,123,3.323,124,3.539,125,3.323,126,3.323,127,2.545,128,3.016,129,2.545,130,2.545,131,3.44,132,1.734,133,1.734,134,1.466,135,1.265,136,1.466,137,1.466,138,1.734,139,1.861,140,1.734,141,2.545,142,2.202,143,1.734,144,2.141,145,2.719,146,2.719,147,1.308,148,2.141,149,2.141,150,2.141,151,2.719,152,2.141,153,1.734,154,2.141,155,2.545,156,1.308,157,1.734,158,1.466,159,1.734,160,1.308,161,1.308,162,1.861,163,2.202,164,1.059,165,2.141,166,0.773,167,2.545,168,1.308,169,2.141,170,2.141,171,2.808,172,1.308,173,1.308,174,1.308,175,1.308,176,2.141,177,2.141,178,3.184,179,1.308,180,1.308,181,1.308,182,1.308,183,1.308,184,1.308,185,1.308,186,1.308,187,1.308,188,1.308,189,1.308,190,1.308,191,1.308,192,1.308,193,1.308,194,1.308,195,1.308,196,1.308,197,1.308,198,1.308,199,2.141,200,1.308,201,2.719,202,2.141,203,1.059,204,2.141,205,1.308]],["title/interfaces/TypeWithoutConstructorParams.html",[0,0.024,30,1.472]],["body/interfaces/TypeWithoutConstructorParams.html",[0,0.034,2,0.962,3,0.962,4,0.962,5,0.724,7,1.596,9,0.839,10,0.724,12,0.257,15,1.907,21,0.865,22,0.046,30,2.457,31,2.457,32,2.812,33,2.727,34,0.839,43,0.041,44,0.041,52,2.056,100,2.056,104,1.596,206,3.226,207,3.226,208,2.727]],["title/changelog.html",[209,1.947,210,1.947,211,1.947]],["body/changelog.html",[5,0.494,12,0.24,22,0.041,43,0.032,44,0.032,67,1.492,211,2.2,212,2.717,213,1.86,214,2.717,215,2.2,216,4.941,217,4.784,218,2.717,219,3.698,220,4.246,221,3.722,222,3.722,223,3.722,224,2.717,225,1.86,226,2.717,227,2.717,228,2.717,229,4.941,230,2.717,231,2.717,232,4.784,233,2.717,234,2.717,235,2.717,236,4.567,237,4.567,238,4.567,239,3.874,240,2.717,241,2.717,242,2.717,243,2.717,244,5.338,245,2.717,246,3.722,247,3.722,248,3.126,249,4.246,250,3.722,251,2.717,252,4.567,253,3.722,254,3.722,255,2.717,256,2.717,257,2.717,258,2.717,259,2.717,260,2.717,261,2.717,262,2.717,263,3.722,264,4.246,265,2.548,266,2.717,267,2.717,268,2.717,269,2.717,270,2.717,271,2.717,272,2.717,273,4.784,274,3.722,275,2.717,276,2.717,277,2.717,278,2.717,279,4.246,280,2.717,281,2.717,282,2.2,283,2.717,284,2.717,285,2.717,286,2.717,287,2.717,288,2.2,289,2.717,290,2.717,291,2.717,292,2.717,293,2.717,294,2.2,295,2.717]],["title/coverage.html",[296,2.633]],["body/coverage.html",[0,0.045,1,1.203,5,0.482,6,1.284,7,1.679,8,1.464,10,0.482,12,0.171,13,1.007,14,0.411,16,0.828,17,0.828,21,0.957,22,0.048,30,1.367,31,1.367,32,1.565,35,1.203,39,1.565,43,0.031,44,0.031,45,1.203,46,1.902,48,1.203,53,1.203,54,1.565,60,2.145,81,1.203,82,1.679,84,1.203,85,1.565,87,1.813,88,2.145,90,1.203,95,1.203,96,1.565,98,1.813,99,1.813,119,2.476,206,2.145,207,2.145,208,1.813,296,1.813,297,2.145,298,2.649,299,2.649,300,4.531,301,4.19,302,2.145,303,2.145,304,5.359,305,3.393,306,3.393,307,2.476,308,2.145,309,2.649,310,5.025,311,3.393,312,3.393,313,2.649,314,2.649]],["title/dependencies.html",[265,1.646,315,2.34]],["body/dependencies.html",[22,0.046,43,0.043,44,0.043,80,2.537,315,3.404,316,4.293,317,4.293,318,4.293,319,4.293]],["title/miscellaneous/functions.html",[320,1.092,321,2.02]],["body/miscellaneous/functions.html",[1,1.349,6,0.86,7,1.427,8,1.305,10,0.922,12,0.323,13,0.981,14,0.766,18,0.308,20,1.172,21,0.647,22,0.047,25,0.795,28,1.848,35,0.901,36,1.236,37,1.4,38,1.4,39,1.755,40,0.546,43,0.025,44,0.025,45,1.349,46,1.617,47,1.172,49,1.19,52,2.041,53,0.901,54,1.755,58,2.898,62,3.376,67,0.795,71,1.358,76,1.533,77,1.795,81,1.349,82,1.846,83,1.024,84,0.901,85,1.755,89,1.024,90,0.901,97,1.358,100,2.041,103,1.172,104,1.898,113,3.376,116,1.358,119,2.722,134,2.033,135,2.104,136,2.437,137,1.358,155,1.607,157,1.607,164,3.994,166,2.959,213,1.358,302,1.607,303,2.405,305,1.607,306,3.201,307,2.799,311,1.607,312,3.201,320,0.901,321,1.755,322,2.883,323,1.984,324,3.561,325,2.883,326,1.984,327,1.984,328,1.984,329,1.984,330,1.984,331,1.607,332,1.607,333,1.607,334,1.607,335,1.607,336,1.607,337,1.172,338,1.607,339,1.607,340,1.607,341,2.405,342,1.607,343,1.607,344,1.607,345,3.561,346,1.984,347,2.405,348,3.561,349,1.984,350,2.97,351,1.984,352,2.97,353,1.984,354,1.984,355,1.984,356,2.033,357,1.358,358,1.358,359,1.358,360,1.358,361,1.358,362,1.358,363,1.358,364,1.358,365,1.358,366,1.984,367,1.984,368,1.607,369,1.984,370,3.561,371,2.97]],["title/index.html",[18,0.373,209,1.947,210,1.947]],["body/index.html",[7,1.416,12,0.326,13,0.784,14,0.663,20,1.683,21,0.699,22,0.049,23,0.583,31,0.478,34,0.744,36,0.501,38,0.893,40,0.583,43,0.014,44,0.014,46,0.727,47,1.251,48,0.727,49,0.848,50,0.961,56,0.751,58,1.726,59,2.532,61,1.298,63,1.298,64,2.977,65,2.706,66,1.298,67,1.482,71,0.634,72,0.751,73,0.947,74,1.298,75,1.714,76,0.827,77,1.938,79,0.751,82,1.249,83,1.824,89,1.47,90,1.898,95,1.517,96,1.251,97,0.634,100,1.91,101,0.751,102,2.706,103,0.947,104,1.974,105,1.298,106,1.298,107,2.524,108,1.298,109,1.298,110,0.751,111,1.298,112,3.809,113,0.634,114,0.751,115,2.306,116,1.097,117,0.751,118,3.635,119,2.411,120,1.714,121,1.298,122,1.714,123,2.306,124,2.306,125,2.041,126,2.041,127,1.714,128,1.298,129,1.714,130,1.298,131,2.306,132,0.751,133,0.751,134,1.097,135,0.548,136,1.449,137,1.449,138,2.041,139,2.133,140,0.751,141,1.298,142,0.751,143,0.751,153,1.298,158,1.449,159,0.751,162,0.634,166,0.548,178,1.298,203,2.524,208,0.634,213,2.861,219,1.298,225,1.097,239,2.041,248,1.726,282,0.751,288,0.751,294,1.298,296,0.634,297,1.714,300,0.751,307,1.251,315,0.634,321,1.251,331,2.041,332,1.298,333,1.298,334,1.298,335,0.751,336,0.751,337,0.548,338,0.751,339,1.298,340,2.041,341,1.298,342,1.714,343,1.298,344,0.751,356,2.419,357,1.449,358,0.634,359,1.726,360,1.097,361,0.634,362,1.726,363,0.634,364,0.634,365,1.449,368,0.751,372,2.521,373,1.602,374,1.602,375,3.117,376,1.602,377,1.602,378,2.521,379,2.847,380,1.602,381,1.298,382,0.927,383,0.927,384,0.927,385,2.117,386,2.521,387,0.927,388,2.521,389,0.927,390,0.927,391,0.927,392,0.927,393,1.602,394,0.927,395,0.927,396,1.602,397,0.927,398,0.927,399,2.117,400,2.847,401,0.927,402,2.117,403,0.927,404,0.927,405,0.927,406,1.602,407,0.927,408,0.927,409,1.602,410,1.602,411,1.602,412,2.117,413,0.927,414,1.602,415,0.927,416,0.927,417,2.521,418,0.927,419,0.927,420,0.927,421,0.927,422,0.927,423,0.927,424,0.927,425,0.927,426,1.602,427,0.927,428,0.927,429,0.927,430,0.927,431,0.927,432,0.927,433,0.927,434,0.927,435,0.927,436,0.927,437,0.927,438,1.602,439,0.927,440,0.927,441,0.927,442,0.927,443,0.927,444,0.927,445,0.927,446,0.927,447,0.927,448,1.602,449,3.534,450,3.534,451,0.927,452,2.117,453,1.602,454,0.927,455,1.602,456,2.521,457,1.602,458,0.927,459,1.602,460,0.927,461,0.927,462,0.927,463,0.927,464,0.927,465,0.927,466,0.927,467,0.927,468,0.927,469,0.927,470,0.927,471,0.927,472,0.927,473,0.927,474,1.602,475,1.602,476,1.602,477,1.602,478,0.927,479,1.602,480,0.927,481,0.927,482,0.927,483,0.927,484,0.927,485,0.927,486,0.927,487,0.927,488,0.927,489,1.602,490,0.927,491,0.927,492,0.927,493,0.927,494,0.927,495,0.927,496,0.927,497,1.602,498,0.927,499,1.602,500,0.927,501,0.927,502,1.602,503,2.521,504,1.602,505,3.117,506,1.602,507,2.847,508,0.927,509,0.927,510,0.927,511,0.927,512,0.927,513,0.927,514,0.927,515,0.927,516,1.602,517,1.602,518,0.927,519,0.927,520,2.117,521,0.927,522,0.927,523,0.927,524,0.927,525,0.927,526,0.927,527,0.927,528,0.927,529,0.927,530,0.927,531,0.927,532,0.927,533,0.927,534,0.927,535,0.927,536,0.927,537,0.927,538,0.927,539,0.927,540,0.927,541,0.927,542,0.927,543,0.927,544,0.927,545,0.927,546,0.927,547,0.927,548,1.602,549,0.927,550,1.602,551,0.927,552,0.927,553,0.927,554,0.927,555,0.927,556,0.927,557,0.927,558,0.927,559,0.927,560,0.927,561,0.927,562,0.927,563,1.602,564,0.927]],["title/modules.html",[337,2.273]],["body/modules.html",[22,0.043,43,0.043,44,0.043,337,2.614]],["title/overview.html",[565,3.115]],["body/overview.html",[2,1.053,22,0.043,43,0.043,44,0.043,95,1.978,565,3.529,566,4.357,567,4.357]],["title/properties.html",[19,0.826,265,1.646]],["body/properties.html",[9,0.811,12,0.324,19,0.93,22,0.048,43,0.04,44,0.04,49,1.869,67,1.543,104,1.543,158,2.637,215,3.119,225,2.637,248,3.192,381,3.776,568,3.852,569,3.852,570,3.852,571,3.852,572,4.663,573,3.852,574,3.852,575,3.852,576,3.852,577,3.852,578,3.852,579,3.852,580,3.852,581,3.852,582,3.852]],["title/miscellaneous/typealiases.html",[320,1.092,583,3.418]],["body/miscellaneous/typealiases.html",[1,1.479,6,1.123,8,1.352,10,0.924,12,0.336,14,0.722,18,0.506,21,0.592,22,0.045,24,1.683,28,1.487,29,1.646,35,1.479,43,0.036,44,0.036,45,1.479,46,2.11,50,1.479,51,2.875,53,1.479,76,2.534,77,1.479,81,1.479,84,1.479,87,2.23,95,1.479,98,2.23,99,2.875,104,1.683,135,2.482,139,2.23,162,2.23,163,2.638,167,3.401,171,3.401,320,1.479,322,3.764,325,2.638,347,3.401,584,3.258,585,3.258,586,4.2,587,4.2,588,4.2,589,4.648,590,4.91,591,4.2,592,3.258,593,3.258,594,3.258]],["title/miscellaneous/variables.html",[320,1.092,595,2.768]],["body/miscellaneous/variables.html",[12,0.319,14,0.581,18,0.581,21,0.68,22,0.046,36,1.432,40,1.262,43,0.039,44,0.039,73,2.21,77,2.08,78,3.135,82,1.836,89,1.931,90,2.248,100,2.365,103,2.21,104,1.836,166,2.21,307,2.21,308,3.029,320,1.698,321,2.21,356,3.135,357,2.56,358,2.56,359,2.56,360,2.56,361,2.56,362,2.56,363,2.56,364,2.56,365,2.56,595,3.029,596,3.74,597,3.74]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["009816c",{"_index":257,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":229,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":217,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":273,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":263,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":232,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":230,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":566,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":293,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":285,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":278,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":277,"title":{},"body":{"changelog.html":{}}}],["1.0.4",{"_index":276,"title":{},"body":{"changelog.html":{}}}],["1.0.5",{"_index":275,"title":{},"body":{"changelog.html":{}}}],["1.0.6",{"_index":272,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":567,"title":{},"body":{"overview.html":{}}}],["100",{"_index":300,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["1013",{"_index":256,"title":{},"body":{"changelog.html":{}}}],["1099",{"_index":241,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":245,"title":{},"body":{"changelog.html":{}}}],["1200",{"_index":226,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":218,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":279,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":264,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":274,"title":{},"body":{"changelog.html":{}}}],["17.0.0",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["2.0.0",{"_index":262,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":260,"title":{},"body":{"changelog.html":{}}}],["2.0.2",{"_index":258,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["2023",{"_index":244,"title":{},"body":{"changelog.html":{}}}],["2024",{"_index":216,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":261,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":259,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":243,"title":{},"body":{"changelog.html":{}}}],["3.0.1",{"_index":235,"title":{},"body":{"changelog.html":{}}}],["3.0.2",{"_index":234,"title":{},"body":{"changelog.html":{}}}],["3.0.3",{"_index":233,"title":{},"body":{"changelog.html":{}}}],["3.0.4",{"_index":231,"title":{},"body":{"changelog.html":{}}}],["3.0.5",{"_index":228,"title":{},"body":{"changelog.html":{}}}],["3.1.0",{"_index":215,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["3/3",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["5234f18",{"_index":284,"title":{},"body":{"changelog.html":{}}}],["527",{"_index":291,"title":{},"body":{"changelog.html":{}}}],["58e28fa",{"_index":251,"title":{},"body":{"changelog.html":{}}}],["679",{"_index":270,"title":{},"body":{"changelog.html":{}}}],["681",{"_index":267,"title":{},"body":{"changelog.html":{}}}],["682",{"_index":268,"title":{},"body":{"changelog.html":{}}}],["733a9f8",{"_index":271,"title":{},"body":{"changelog.html":{}}}],["85f83e1",{"_index":242,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":165,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["_all_",{"_index":176,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["_asyncinjectorinitializer",{"_index":180,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["above",{"_index":433,"title":{},"body":{"index.html":{}}}],["actually",{"_index":462,"title":{},"body":{"index.html":{}}}],["add",{"_index":281,"title":{},"body":{"changelog.html":{}}}],["additionally",{"_index":133,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["afterwards",{"_index":538,"title":{},"body":{"index.html":{}}}],["against",{"_index":541,"title":{},"body":{"index.html":{}}}],["ahead",{"_index":554,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":584,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":248,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["angular's",{"_index":365,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/core",{"_index":80,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"dependencies.html":{}}}],["another",{"_index":410,"title":{},"body":{"index.html":{}}}],["any).useasyncclass",{"_index":41,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{}}}],["any).useasyncfactory",{"_index":55,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{}}}],["any).useasyncvalue",{"_index":86,"title":{},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{}}}],["api",{"_index":379,"title":{},"body":{"index.html":{}}}],["app",{"_index":401,"title":{},"body":{"index.html":{}}}],["app_initializer",{"_index":402,"title":{},"body":{"index.html":{}}}],["application",{"_index":467,"title":{},"body":{"index.html":{}}}],["approach",{"_index":487,"title":{},"body":{"index.html":{}}}],["approutes",{"_index":473,"title":{},"body":{"index.html":{}}}],["array",{"_index":25,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"miscellaneous/functions.html":{}}}],["arrayitemtype",{"_index":24,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"miscellaneous/typealiases.html":{}}}],["arrow_up",{"_index":250,"title":{},"body":{"changelog.html":{}}}],["async",{"_index":12,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["async.function.ts",{"_index":312,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["async_injector_initializer",{"_index":173,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["asyncclassmultiprovider",{"_index":1,"title":{"interfaces/AsyncClassMultiProvider.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncclassprovider",{"_index":35,"title":{"interfaces/AsyncClassProvider.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncfactorymultiprovider",{"_index":45,"title":{"interfaces/AsyncFactoryMultiProvider.html":{}},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncfactoryprovider",{"_index":53,"title":{"interfaces/AsyncFactoryProvider.html":{}},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncfactorywithinjectioncontext",{"_index":51,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"miscellaneous/typealiases.html":{}}}],["asynchronous",{"_index":386,"title":{},"body":{"index.html":{}}}],["asynchronously",{"_index":394,"title":{},"body":{"index.html":{}}}],["asyncinjector",{"_index":91,"title":{},"body":{"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{}}}],["asyncinjector['resolve",{"_index":94,"title":{},"body":{"interfaces/InjectionContext.html":{}}}],["asyncmultiprovider",{"_index":17,"title":{"interfaces/AsyncMultiProvider.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{}}}],["asyncproviderconfig",{"_index":16,"title":{"interfaces/AsyncProviderConfig.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{}}}],["asyncproviders",{"_index":477,"title":{},"body":{"index.html":{}}}],["asyncprovidertypes",{"_index":347,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncstaticprovider",{"_index":28,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncstaticproviders",{"_index":350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["asyncvaluemultiprovider",{"_index":81,"title":{"interfaces/AsyncValueMultiProvider.html":{}},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asyncvalueprovider",{"_index":84,"title":{"interfaces/AsyncValueProvider.html":{}},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["author",{"_index":581,"title":{},"body":{"properties.html":{}}}],["available",{"_index":138,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["await",{"_index":517,"title":{},"body":{"index.html":{}}}],["b84e599",{"_index":227,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["before",{"_index":359,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["behavior",{"_index":523,"title":{},"body":{"index.html":{}}}],["being",{"_index":368,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["between",{"_index":543,"title":{},"body":{"index.html":{}}}],["blocking",{"_index":406,"title":{},"body":{"index.html":{}}}],["blocks",{"_index":488,"title":{},"body":{"index.html":{}}}],["bootstrapapplication(appcomponent",{"_index":449,"title":{},"body":{"index.html":{}}}],["break",{"_index":389,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":246,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":236,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":574,"title":{},"body":{"properties.html":{}}}],["bundle",{"_index":414,"title":{},"body":{"index.html":{}}}],["called",{"_index":544,"title":{},"body":{"index.html":{}}}],["can't",{"_index":537,"title":{},"body":{"index.html":{}}}],["case",{"_index":479,"title":{},"body":{"index.html":{}}}],["caused",{"_index":415,"title":{},"body":{"index.html":{}}}],["cdr",{"_index":184,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["certain",{"_index":103,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["changedetection",{"_index":125,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["changedetectionstrategy.onpush",{"_index":126,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["changedetectorref",{"_index":168,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["changelog",{"_index":211,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":247,"title":{},"body":{"changelog.html":{}}}],["check",{"_index":38,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["child",{"_index":129,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["childcomponent",{"_index":123,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["class",{"_index":7,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["class_provider",{"_index":502,"title":{},"body":{"index.html":{}}}],["code",{"_index":375,"title":{},"body":{"index.html":{}}}],["collection",{"_index":349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common",{"_index":411,"title":{},"body":{"index.html":{}}}],["compared",{"_index":364,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["completed",{"_index":485,"title":{},"body":{"index.html":{}}}],["completion",{"_index":533,"title":{},"body":{"index.html":{}}}],["component",{"_index":118,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["components",{"_index":338,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["config",{"_index":27,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{}}}],["config.ts",{"_index":60,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"coverage.html":{}}}],["config_token",{"_index":493,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":61,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["cons",{"_index":405,"title":{},"body":{"index.html":{}}}],["const",{"_index":203,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{}}}],["consume",{"_index":395,"title":{},"body":{"index.html":{}}}],["consumption",{"_index":461,"title":{},"body":{"index.html":{}}}],["context",{"_index":50,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["context.ts",{"_index":88,"title":{},"body":{"interfaces/InjectionContext.html":{},"coverage.html":{}}}],["contrary",{"_index":528,"title":{},"body":{"index.html":{}}}],["controlled",{"_index":524,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":296,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cyclic",{"_index":542,"title":{},"body":{"index.html":{}}}],["data",{"_index":393,"title":{},"body":{"index.html":{}}}],["declaration",{"_index":459,"title":{},"body":{"index.html":{}}}],["declare",{"_index":331,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["declared",{"_index":340,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["declaring",{"_index":499,"title":{},"body":{"index.html":{}}}],["default",{"_index":73,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":11,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{}}}],["defined",{"_index":155,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{}}}],["defines",{"_index":57,"title":{},"body":{"interfaces/AsyncMultiProvider.html":{}}}],["delay",{"_index":106,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["delays",{"_index":407,"title":{},"body":{"index.html":{}}}],["demand",{"_index":492,"title":{},"body":{"index.html":{}}}],["demo",{"_index":472,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":315,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":381,"title":{},"body":{"index.html":{},"properties.html":{}}}],["deps",{"_index":252,"title":{},"body":{"changelog.html":{}}}],["described",{"_index":432,"title":{},"body":{"index.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"properties.html":{}}}],["designed",{"_index":383,"title":{},"body":{"index.html":{}}}],["destroyed",{"_index":187,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["di",{"_index":158,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{},"properties.html":{}}}],["diagram",{"_index":465,"title":{},"body":{"index.html":{}}}],["different",{"_index":501,"title":{},"body":{"index.html":{}}}],["directive",{"_index":95,"title":{"directives/ResolveAsyncProvidersDirective.html":{}},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["directives",{"_index":97,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["documentation",{"_index":297,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["done",{"_index":468,"title":{},"body":{"index.html":{}}}],["e2fd0a8",{"_index":269,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":334,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["eager",{"_index":66,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["ensure",{"_index":358,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["entry",{"_index":289,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":71,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["even",{"_index":530,"title":{},"body":{"index.html":{}}}],["example",{"_index":112,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["examples",{"_index":376,"title":{},"body":{"index.html":{}}}],["executing",{"_index":535,"title":{},"body":{"index.html":{}}}],["existing",{"_index":390,"title":{},"body":{"index.html":{}}}],["explanatory",{"_index":547,"title":{},"body":{"index.html":{}}}],["export",{"_index":34,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"index.html":{}}}],["exposes",{"_index":162,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":15,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/TypeWithoutConstructorParams.html":{}}}],["f23e180",{"_index":292,"title":{},"body":{"changelog.html":{}}}],["factory",{"_index":46,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["factory.ts",{"_index":515,"title":{},"body":{"index.html":{}}}],["factory_provider",{"_index":508,"title":{},"body":{"index.html":{}}}],["false",{"_index":188,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["features",{"_index":219,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"changelog.html":{},"coverage.html":{}}}],["finally",{"_index":522,"title":{},"body":{"index.html":{}}}],["fine",{"_index":430,"title":{},"body":{"index.html":{}}}],["first",{"_index":511,"title":{},"body":{"index.html":{}}}],["firstservice",{"_index":513,"title":{},"body":{"index.html":{}}}],["firststring",{"_index":548,"title":{},"body":{"index.html":{}}}],["firstvaluefrom(inject(httpclient).get('/config",{"_index":494,"title":{},"body":{"index.html":{}}}],["fix",{"_index":287,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":237,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":56,"title":{},"body":{"interfaces/AsyncMultiProvider.html":{},"index.html":{}}}],["flexibility",{"_index":441,"title":{},"body":{"index.html":{}}}],["forms",{"_index":222,"title":{},"body":{"changelog.html":{}}}],["full",{"_index":495,"title":{},"body":{"index.html":{}}}],["function",{"_index":21,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":321,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["generated",{"_index":212,"title":{},"body":{"changelog.html":{}}}],["getting",{"_index":209,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["git+https://github.com/nx",{"_index":579,"title":{},"body":{"properties.html":{}}}],["give",{"_index":440,"title":{},"body":{"index.html":{}}}],["go",{"_index":553,"title":{},"body":{"index.html":{}}}],["grained",{"_index":431,"title":{},"body":{"index.html":{}}}],["great",{"_index":422,"title":{},"body":{"index.html":{}}}],["guard",{"_index":37,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{}}}],["happens",{"_index":519,"title":{},"body":{"index.html":{}}}],["having",{"_index":385,"title":{},"body":{"index.html":{}}}],["help",{"_index":439,"title":{},"body":{"index.html":{}}}],["hierarchy",{"_index":117,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["homepage",{"_index":571,"title":{},"body":{"properties.html":{}}}],["https://github.com/nx",{"_index":572,"title":{},"body":{"properties.html":{}}}],["identical",{"_index":460,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["implementation",{"_index":354,"title":{},"body":{"miscellaneous/functions.html":{}}}],["implementers",{"_index":442,"title":{},"body":{"index.html":{}}}],["implements",{"_index":144,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["implicit",{"_index":204,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["import",{"_index":23,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["import('./factory').then((x",{"_index":509,"title":{},"body":{"index.html":{}}}],["import('./first",{"_index":503,"title":{},"body":{"index.html":{}}}],["import('./my",{"_index":455,"title":{},"body":{"index.html":{}}}],["import('./route.component",{"_index":476,"title":{},"body":{"index.html":{}}}],["import('./second",{"_index":521,"title":{},"body":{"index.html":{}}}],["import('./value').then((x",{"_index":506,"title":{},"body":{"index.html":{}}}],["imports",{"_index":122,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["increasing",{"_index":420,"title":{},"body":{"index.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{}}}],["initial",{"_index":294,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["initializer.token",{"_index":175,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["initializes",{"_index":72,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["inject",{"_index":89,"title":{},"body":{"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inject(async_injector_initializer",{"_index":181,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inject(asyncinjector",{"_index":179,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inject(asyncinjector).resolve(injectiontoken",{"_index":597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(changedetectorref",{"_index":185,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inject(httpclient).get('/config",{"_index":491,"title":{},"body":{"index.html":{}}}],["inject(my_service",{"_index":453,"title":{},"body":{"index.html":{}}}],["inject(second_injection_token",{"_index":551,"title":{},"body":{"index.html":{}}}],["inject(string_injector_token",{"_index":132,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["inject(templateref",{"_index":183,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inject(viewcontainerref",{"_index":182,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["injected",{"_index":481,"title":{},"body":{"index.html":{}}}],["injectedtext",{"_index":130,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["injection",{"_index":49,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/InjectionContext.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["injectioncontext",{"_index":48,"title":{"interfaces/InjectionContext.html":{}},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/InjectionContext.html":{},"coverage.html":{},"index.html":{}}}],["injectiontoken",{"_index":78,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('my",{"_index":500,"title":{},"body":{"index.html":{}}}],["injectiontokens",{"_index":370,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectiontokentype",{"_index":588,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["injectiontokentypecollection",{"_index":591,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["injectiontokentypemap",{"_index":171,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/typealiases.html":{}}}],["injector",{"_index":67,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["injector/async",{"_index":92,"title":{},"body":{"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{}}}],["injectors",{"_index":116,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["input",{"_index":142,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["input('ngxresolveasyncproviders",{"_index":186,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inputs",{"_index":152,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["inputtext",{"_index":141,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["inside",{"_index":480,"title":{},"body":{"index.html":{}}}],["install",{"_index":563,"title":{},"body":{"index.html":{}}}],["installation",{"_index":380,"title":{},"body":{"index.html":{}}}],["instantiating",{"_index":437,"title":{},"body":{"index.html":{}}}],["instead",{"_index":137,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["integration",{"_index":558,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"interfaces/TypeWithoutConstructorParams.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"overview.html":{}}}],["interfaces/injection",{"_index":172,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["isasyncclassprovider",{"_index":39,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isasyncclassprovider(asyncstaticprovider",{"_index":326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isasyncfactoryprovider",{"_index":54,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isasyncfactoryprovider(asyncstaticprovider",{"_index":327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isasyncvalueprovider",{"_index":85,"title":{},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isasyncvalueprovider(asyncstaticprovider",{"_index":328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ismultiprovider",{"_index":303,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ismultiprovider(asyncstaticprovider",{"_index":329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["item",{"_index":26,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{}}}],["item.ts",{"_index":586,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["itself",{"_index":534,"title":{},"body":{"index.html":{}}}],["jscutlery/semver",{"_index":214,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":366,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keyed",{"_index":593,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keywords",{"_index":570,"title":{},"body":{"properties.html":{}}}],["known",{"_index":404,"title":{},"body":{"index.html":{}}}],["later",{"_index":436,"title":{},"body":{"index.html":{}}}],["lazy",{"_index":65,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["library",{"_index":225,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["license",{"_index":576,"title":{},"body":{"properties.html":{}}}],["list",{"_index":157,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{}}}],["live",{"_index":471,"title":{},"body":{"index.html":{}}}],["load",{"_index":115,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["loadcomponent",{"_index":475,"title":{},"body":{"index.html":{}}}],["loaded",{"_index":400,"title":{},"body":{"index.html":{}}}],["loading",{"_index":107,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["loads",{"_index":360,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":454,"title":{},"body":{"index.html":{}}}],["main",{"_index":288,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["main.ts",{"_index":448,"title":{},"body":{"index.html":{}}}],["major",{"_index":255,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":387,"title":{},"body":{"index.html":{}}}],["many",{"_index":425,"title":{},"body":{"index.html":{}}}],["many.ts",{"_index":306,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["map",{"_index":135,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["matching",{"_index":44,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["means",{"_index":525,"title":{},"body":{"index.html":{}}}],["memo",{"_index":280,"title":{},"body":{"changelog.html":{}}}],["metadata",{"_index":147,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["methods",{"_index":150,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["miscellaneous",{"_index":320,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":577,"title":{},"body":{"properties.html":{}}}],["mode",{"_index":63,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["modules",{"_index":337,"title":{"modules.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{},"modules.html":{}}}],["monorepo",{"_index":254,"title":{},"body":{"changelog.html":{}}}],["more",{"_index":333,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["motivation",{"_index":373,"title":{},"body":{"index.html":{}}}],["much",{"_index":108,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["multi",{"_index":13,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["multiple",{"_index":58,"title":{},"body":{"interfaces/AsyncMultiProvider.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["my_service",{"_index":450,"title":{},"body":{"index.html":{}}}],["myservice",{"_index":452,"title":{},"body":{"index.html":{}}}],["name",{"_index":164,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":339,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["needed",{"_index":362,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["needing",{"_index":416,"title":{},"body":{"index.html":{}}}],["needs",{"_index":399,"title":{},"body":{"index.html":{}}}],["new",{"_index":208,"title":{},"body":{"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":148,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["ngondestroy",{"_index":198,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["ngoninit",{"_index":190,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["ngtemplatecontextguard",{"_index":151,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["ngtemplatecontextguard(_",{"_index":160,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["ngx",{"_index":220,"title":{},"body":{"changelog.html":{}}}],["ngxresolveasyncproviders",{"_index":153,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["npm",{"_index":564,"title":{},"body":{"index.html":{}}}],["null",{"_index":42,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{}}}],["nx",{"_index":239,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["offers",{"_index":445,"title":{},"body":{"index.html":{}}}],["once",{"_index":484,"title":{},"body":{"index.html":{}}}],["ondestroy",{"_index":146,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["one",{"_index":332,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["oninit",{"_index":145,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["online",{"_index":469,"title":{},"body":{"index.html":{}}}],["option",{"_index":397,"title":{},"body":{"index.html":{}}}],["optional",{"_index":62,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{}}}],["others",{"_index":427,"title":{},"body":{"index.html":{}}}],["overload",{"_index":348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":565,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":265,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["pairs",{"_index":367,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":113,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["params",{"_index":33,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/TypeWithoutConstructorParams.html":{}}}],["params.ts",{"_index":207,"title":{},"body":{"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{}}}],["parent",{"_index":482,"title":{},"body":{"index.html":{}}}],["parentcomponent",{"_index":127,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["particular",{"_index":443,"title":{},"body":{"index.html":{}}}],["passed",{"_index":114,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["path",{"_index":474,"title":{},"body":{"index.html":{}}}],["payload",{"_index":413,"title":{},"body":{"index.html":{}}}],["peer",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["piece",{"_index":463,"title":{},"body":{"index.html":{}}}],["places",{"_index":361,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["playground",{"_index":282,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["point",{"_index":290,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":109,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["preserved",{"_index":536,"title":{},"body":{"index.html":{}}}],["private",{"_index":178,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["problem",{"_index":412,"title":{},"body":{"index.html":{}}}],["production",{"_index":555,"title":{},"body":{"index.html":{}}}],["promise",{"_index":36,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["promise.resolve('value",{"_index":518,"title":{},"body":{"index.html":{}}}],["properties",{"_index":19,"title":{"properties.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"properties.html":{}}}],["protect",{"_index":540,"title":{},"body":{"index.html":{}}}],["protected",{"_index":557,"title":{},"body":{"index.html":{}}}],["provide",{"_index":64,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["provideasync",{"_index":119,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["provideasync(...asyncstaticproviders",{"_index":351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideasync(asyncstaticprovider",{"_index":330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideasync(asyncstaticproviders",{"_index":346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provided",{"_index":79,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["providedin",{"_index":424,"title":{},"body":{"index.html":{}}}],["providehttpclient",{"_index":489,"title":{},"body":{"index.html":{}}}],["provider",{"_index":14,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["provider.ts",{"_index":8,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["providerfactory",{"_index":516,"title":{},"body":{"index.html":{}}}],["providers",{"_index":104,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["providers.directive.ts",{"_index":99,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["providers.directive.ts:102",{"_index":156,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["providers.directive.ts:109",{"_index":161,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["providersvaluemap",{"_index":201,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["provides",{"_index":569,"title":{},"body":{"properties.html":{}}}],["readme",{"_index":283,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":131,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["ready",{"_index":556,"title":{},"body":{"index.html":{}}}],["recommended",{"_index":398,"title":{},"body":{"index.html":{}}}],["regular",{"_index":497,"title":{},"body":{"index.html":{}}}],["release",{"_index":295,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":101,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["rendered",{"_index":486,"title":{},"body":{"index.html":{}}}],["renderer",{"_index":391,"title":{},"body":{"index.html":{}}}],["rendering",{"_index":388,"title":{},"body":{"index.html":{}}}],["renders",{"_index":483,"title":{},"body":{"index.html":{}}}],["rendertemplate(providersvaluemap",{"_index":200,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["repository",{"_index":578,"title":{},"body":{"properties.html":{}}}],["requested",{"_index":527,"title":{},"body":{"index.html":{}}}],["requires",{"_index":335,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["rescope",{"_index":266,"title":{},"body":{"changelog.html":{}}}],["resolve",{"_index":90,"title":{},"body":{"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["resolve(first_injection_token",{"_index":549,"title":{},"body":{"index.html":{}}}],["resolveasyncproviderscontext",{"_index":167,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/typealiases.html":{}}}],["resolveasyncprovidersdirective",{"_index":96,"title":{"directives/ResolveAsyncProvidersDirective.html":{}},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"index.html":{}}}],["resolved",{"_index":77,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resolvemany",{"_index":307,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["resolvemany(...injectiontokens",{"_index":371,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolvemany(class_provider",{"_index":552,"title":{},"body":{"index.html":{}}}],["resolvemany(injectiontokens",{"_index":355,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolvemany(my_service",{"_index":478,"title":{},"body":{"index.html":{}}}],["resolvemany(this.providers",{"_index":195,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["resolver",{"_index":378,"title":{},"body":{"index.html":{}}}],["resolvers",{"_index":357,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["resolves",{"_index":363,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["resolving",{"_index":69,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{}}}],["responsibility",{"_index":466,"title":{},"body":{"index.html":{}}}],["results",{"_index":43,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":40,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":166,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":417,"title":{},"body":{"index.html":{}}}],["route",{"_index":356,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["route's",{"_index":377,"title":{},"body":{"index.html":{}}}],["routes",{"_index":409,"title":{},"body":{"index.html":{}}}],["safely",{"_index":110,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["same",{"_index":341,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["samuelfernandez",{"_index":582,"title":{},"body":{"properties.html":{}}}],["scaffold",{"_index":224,"title":{},"body":{"changelog.html":{}}}],["scenarios",{"_index":426,"title":{},"body":{"index.html":{}}}],["secondstring",{"_index":550,"title":{},"body":{"index.html":{}}}],["see",{"_index":496,"title":{},"body":{"index.html":{}}}],["selector",{"_index":128,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["self",{"_index":546,"title":{},"body":{"index.html":{}}}],["semantic",{"_index":561,"title":{},"body":{"index.html":{}}}],["server",{"_index":435,"title":{},"body":{"index.html":{}}}],["service",{"_index":438,"title":{},"body":{"index.html":{}}}],["service').then((x",{"_index":456,"title":{},"body":{"index.html":{}}}],["service.ts",{"_index":512,"title":{},"body":{"index.html":{}}}],["services",{"_index":423,"title":{},"body":{"index.html":{}}}],["several",{"_index":403,"title":{},"body":{"index.html":{}}}],["shape",{"_index":369,"title":{},"body":{"miscellaneous/functions.html":{}}}],["show",{"_index":374,"title":{},"body":{"index.html":{}}}],["signal",{"_index":221,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":447,"title":{},"body":{"index.html":{}}}],["single",{"_index":343,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["size",{"_index":421,"title":{},"body":{"index.html":{}}}],["solve",{"_index":539,"title":{},"body":{"index.html":{}}}],["solves",{"_index":444,"title":{},"body":{"index.html":{}}}],["soon",{"_index":70,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"interfaces/InjectionContext.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{}}}],["splitting",{"_index":429,"title":{},"body":{"index.html":{}}}],["squeezer/ngx",{"_index":372,"title":{},"body":{"index.html":{}}}],["squeezer/squeezer.git",{"_index":580,"title":{},"body":{"properties.html":{}}}],["squeezer/squeezer/issues",{"_index":575,"title":{},"body":{"properties.html":{}}}],["squeezer/squeezer/tree/main/packages/ngx",{"_index":573,"title":{},"body":{"properties.html":{}}}],["src/.../array",{"_index":585,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../async",{"_index":322,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../injection",{"_index":589,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../is",{"_index":323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../provide",{"_index":324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../resolve",{"_index":325,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../resolve.ts",{"_index":596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/directives/resolve",{"_index":98,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/functions/is",{"_index":302,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/functions/resolve",{"_index":305,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/functions/resolve.ts",{"_index":308,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/interfaces/array",{"_index":592,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/interfaces/async",{"_index":6,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/interfaces/injection",{"_index":87,"title":{},"body":{"interfaces/InjectionContext.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/interfaces/type",{"_index":206,"title":{},"body":{"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{}}}],["src/lib/providers/provide",{"_index":311,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stackblitz",{"_index":470,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":124,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["start",{"_index":68,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{}}}],["started",{"_index":210,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["statements",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":29,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/typealiases.html":{}}}],["staticprovider",{"_index":345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["still",{"_index":532,"title":{},"body":{"index.html":{}}}],["string",{"_index":143,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["string_injector_token",{"_index":120,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["stringasyncfactory",{"_index":121,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["stringinjectiontoken",{"_index":140,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["structural",{"_index":139,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["such",{"_index":428,"title":{},"body":{"index.html":{}}}],["supports",{"_index":134,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["synchronous",{"_index":384,"title":{},"body":{"index.html":{}}}],["system",{"_index":382,"title":{},"body":{"index.html":{}}}],["t",{"_index":52,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["tada",{"_index":223,"title":{},"body":{"changelog.html":{}}}],["template",{"_index":102,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["template[ngxresolveasyncproviders",{"_index":149,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["templateref",{"_index":169,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["tests",{"_index":559,"title":{},"body":{"index.html":{}}}],["that's",{"_index":458,"title":{},"body":{"index.html":{}}}],["then((providersvaluemap",{"_index":196,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.asyncinjector",{"_index":194,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.asyncinjector.resolveall().then",{"_index":192,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.cdr.markforcheck",{"_index":205,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.destroyed",{"_index":199,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.providers",{"_index":191,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.rendertemplate",{"_index":193,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.rendertemplate(providersvaluemap",{"_index":197,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["this.viewcontainerref.createembeddedview(this.templateref",{"_index":202,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["those",{"_index":111,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["though",{"_index":531,"title":{},"body":{"index.html":{}}}],["through",{"_index":396,"title":{},"body":{"index.html":{}}}],["times",{"_index":344,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["today",{"_index":392,"title":{},"body":{"index.html":{}}}],["token",{"_index":76,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["tokens",{"_index":136,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["tokens/async",{"_index":174,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["tproviders",{"_index":154,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["tree",{"_index":159,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["trigger",{"_index":529,"title":{},"body":{"index.html":{}}}],["triggers",{"_index":464,"title":{},"body":{"index.html":{}}}],["true",{"_index":59,"title":{},"body":{"interfaces/AsyncMultiProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["ts",{"_index":177,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["tslib",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":545,"title":{},"body":{"index.html":{}}}],["type",{"_index":10,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"interfaces/AsyncMultiProvider.html":{},"interfaces/AsyncProviderConfig.html":{},"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts",{"_index":590,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":583,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":498,"title":{},"body":{"index.html":{}}}],["typeof",{"_index":93,"title":{},"body":{"interfaces/InjectionContext.html":{}}}],["types.ts",{"_index":587,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typewithoutconstructorparams",{"_index":30,"title":{"interfaces/TypeWithoutConstructorParams.html":{}},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{}}}],["undefined",{"_index":352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["union",{"_index":594,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unknown",{"_index":189,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["until",{"_index":75,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["update",{"_index":253,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":238,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":342,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["useasyncclass",{"_index":20,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["useasyncfactory",{"_index":47,"title":{},"body":{"interfaces/AsyncFactoryMultiProvider.html":{},"interfaces/AsyncFactoryProvider.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["useasyncvalue",{"_index":83,"title":{},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["useclass",{"_index":451,"title":{},"body":{"index.html":{}}}],["used",{"_index":100,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":490,"title":{},"body":{"index.html":{}}}],["useful",{"_index":105,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"index.html":{}}}],["uses",{"_index":560,"title":{},"body":{"index.html":{}}}],["using",{"_index":213,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["usually",{"_index":419,"title":{},"body":{"index.html":{}}}],["v17",{"_index":249,"title":{},"body":{"changelog.html":{}}}],["v17.2.0",{"_index":240,"title":{},"body":{"changelog.html":{}}}],["validators",{"_index":163,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{},"miscellaneous/typealiases.html":{}}}],["value",{"_index":82,"title":{},"body":{"interfaces/AsyncValueMultiProvider.html":{},"interfaces/AsyncValueProvider.html":{},"directives/ResolveAsyncProvidersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value').then((x",{"_index":520,"title":{},"body":{"index.html":{}}}],["value.ts",{"_index":514,"title":{},"body":{"index.html":{}}}],["value_provider",{"_index":505,"title":{},"body":{"index.html":{}}}],["variable",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":595,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":418,"title":{},"body":{"index.html":{}}}],["version",{"_index":568,"title":{},"body":{"properties.html":{}}}],["versioning",{"_index":562,"title":{},"body":{"index.html":{}}}],["very",{"_index":446,"title":{},"body":{"index.html":{}}}],["viewcontainerref",{"_index":170,"title":{},"body":{"directives/ResolveAsyncProvidersDirective.html":{}}}],["wait",{"_index":74,"title":{},"body":{"interfaces/AsyncProviderConfig.html":{},"index.html":{}}}],["way",{"_index":434,"title":{},"body":{"index.html":{}}}],["well",{"_index":336,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["whole",{"_index":408,"title":{},"body":{"index.html":{}}}],["widen",{"_index":286,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":31,"title":{},"body":{"interfaces/AsyncClassMultiProvider.html":{},"interfaces/AsyncClassProvider.html":{},"interfaces/TypeWithoutConstructorParams.html":{},"coverage.html":{},"index.html":{}}}],["won't",{"_index":526,"title":{},"body":{"index.html":{}}}],["x.firstservice",{"_index":504,"title":{},"body":{"index.html":{}}}],["x.myservice",{"_index":457,"title":{},"body":{"index.html":{}}}],["x.providerfactory",{"_index":510,"title":{},"body":{"index.html":{}}}],["x.value",{"_index":507,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AsyncClassMultiProvider.html":{"url":"interfaces/AsyncClassMultiProvider.html","title":"interface - AsyncClassMultiProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncClassMultiProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-class-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async class multi provider.\n\n            \n\n            \n                Extends\n            \n            \n                            AsyncProviderConfig\n                            AsyncMultiProvider\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncClass\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncClass:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async class import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\nimport { TypeWithoutConstructorParams } from './type-without-constructor-params';\n\n/**\n * Type to define an async class provider.\n */\nexport interface AsyncClassProvider extends AsyncProviderConfig {\n  /**\n   * Async class import.\n   */\n  useAsyncClass: () => Promise>;\n}\n\n/**\n * Type to define an async class multi provider.\n */\nexport interface AsyncClassMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async class import.\n   */\n  useAsyncClass: () => Promise>>;\n}\n\n/**\n * Type guard to check if a provider is an async class provider.\n */\nexport function isAsyncClassProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncClassProvider | AsyncClassMultiProvider {\n  return (asyncStaticProvider as any).useAsyncClass != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncClassProvider.html":{"url":"interfaces/AsyncClassProvider.html","title":"interface - AsyncClassProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncClassProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-class-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async class provider.\n\n            \n\n            \n                Extends\n            \n            \n                            AsyncProviderConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncClass\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncClass:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async class import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\nimport { TypeWithoutConstructorParams } from './type-without-constructor-params';\n\n/**\n * Type to define an async class provider.\n */\nexport interface AsyncClassProvider extends AsyncProviderConfig {\n  /**\n   * Async class import.\n   */\n  useAsyncClass: () => Promise>;\n}\n\n/**\n * Type to define an async class multi provider.\n */\nexport interface AsyncClassMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async class import.\n   */\n  useAsyncClass: () => Promise>>;\n}\n\n/**\n * Type guard to check if a provider is an async class provider.\n */\nexport function isAsyncClassProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncClassProvider | AsyncClassMultiProvider {\n  return (asyncStaticProvider as any).useAsyncClass != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncFactoryMultiProvider.html":{"url":"interfaces/AsyncFactoryMultiProvider.html","title":"interface - AsyncFactoryMultiProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncFactoryMultiProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-factory-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async factory multi provider.\n\n            \n\n            \n                Extends\n            \n            \n                            AsyncProviderConfig\n                            AsyncMultiProvider\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncFactory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async factory import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\nimport { InjectionContext } from './injection-context';\n\n/**\n * Type of an async factory provider.\n */\nexport type AsyncFactoryWithInjectionContext = (injectionContext: InjectionContext) => T;\n\n/**\n * Type to define an async factory provider.\n */\nexport interface AsyncFactoryProvider extends AsyncProviderConfig {\n  /**\n   * Async factory import.\n   */\n  useAsyncFactory: () => Promise>;\n}\n\n/**\n * Type to define an async factory multi provider.\n */\nexport interface AsyncFactoryMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async factory import.\n   */\n  useAsyncFactory: () => Promise>>;\n}\n\n/**\n * Type guard to check if a provider is an async factory provider.\n */\nexport function isAsyncFactoryProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncFactoryProvider | AsyncFactoryMultiProvider {\n  return (asyncStaticProvider as any).useAsyncFactory != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncFactoryProvider.html":{"url":"interfaces/AsyncFactoryProvider.html","title":"interface - AsyncFactoryProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncFactoryProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-factory-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async factory provider.\n\n            \n\n            \n                Extends\n            \n            \n                            AsyncProviderConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncFactory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async factory import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\nimport { InjectionContext } from './injection-context';\n\n/**\n * Type of an async factory provider.\n */\nexport type AsyncFactoryWithInjectionContext = (injectionContext: InjectionContext) => T;\n\n/**\n * Type to define an async factory provider.\n */\nexport interface AsyncFactoryProvider extends AsyncProviderConfig {\n  /**\n   * Async factory import.\n   */\n  useAsyncFactory: () => Promise>;\n}\n\n/**\n * Type to define an async factory multi provider.\n */\nexport interface AsyncFactoryMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async factory import.\n   */\n  useAsyncFactory: () => Promise>>;\n}\n\n/**\n * Type guard to check if a provider is an async factory provider.\n */\nexport function isAsyncFactoryProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncFactoryProvider | AsyncFactoryMultiProvider {\n  return (asyncStaticProvider as any).useAsyncFactory != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncMultiProvider.html":{"url":"interfaces/AsyncMultiProvider.html","title":"interface - AsyncMultiProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncMultiProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-multi-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type of an async multi provider.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            multi\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        multi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multi:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Flag that defines the provider as multiple.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AsyncMultiProvider {\n  /**\n   * Flag that defines the provider as multiple.\n   */\n  multi: true;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncProviderConfig.html":{"url":"interfaces/AsyncProviderConfig.html","title":"interface - AsyncProviderConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncProviderConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-provider-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration of an async provider.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            provide\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"lazy\" | \"eager\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"lazy\" | \"eager\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If eager, the async injector will start resolving as soon as the environment injector initializes.\nIf lazy (default), it will wait until the injection token is resolved.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provide\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provide:     InjectionToken\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InjectionToken\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Token to be provided.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Configuration of an async provider.\n */\nexport interface AsyncProviderConfig {\n  /**\n   * Token to be provided.\n   */\n  provide: InjectionToken;\n\n  /**\n   * If `eager`, the async injector will start resolving as soon as the environment injector initializes.\n   * If `lazy` (default), it will wait until the injection token is resolved.\n   */\n  mode?: 'lazy' | 'eager';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncValueMultiProvider.html":{"url":"interfaces/AsyncValueMultiProvider.html","title":"interface - AsyncValueMultiProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncValueMultiProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-value-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async value multi provider.\n\n            \n\n            \n                Extends\n            \n            \n                            AsyncProviderConfig\n                            AsyncMultiProvider\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncValue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncValue:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async value import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\n\n/**\n * Type to define an async value provider.\n */\nexport interface AsyncValueProvider extends AsyncProviderConfig {\n  /**\n   * Async value import.\n   */\n  useAsyncValue: () => Promise;\n}\n\n/**\n * Type to define an async value multi provider.\n */\nexport interface AsyncValueMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async value import.\n   */\n  useAsyncValue: () => Promise>;\n}\n\n/**\n * Type guard to check if a provider is an async value provider.\n */\nexport function isAsyncValueProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncValueProvider | AsyncValueMultiProvider {\n  return (asyncStaticProvider as any).useAsyncValue != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncValueProvider.html":{"url":"interfaces/AsyncValueProvider.html","title":"interface - AsyncValueProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AsyncValueProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/async-value-provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Type to define an async value provider.\n\n            \n\n            \n                Extends\n            \n            \n                            AsyncProviderConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useAsyncValue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useAsyncValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useAsyncValue:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Async value import.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ArrayItemType } from './array-item';\nimport { AsyncMultiProvider } from './async-multi-provider';\nimport { AsyncProviderConfig } from './async-provider-config';\nimport { AsyncStaticProvider } from './async-static-provider';\n\n/**\n * Type to define an async value provider.\n */\nexport interface AsyncValueProvider extends AsyncProviderConfig {\n  /**\n   * Async value import.\n   */\n  useAsyncValue: () => Promise;\n}\n\n/**\n * Type to define an async value multi provider.\n */\nexport interface AsyncValueMultiProvider extends AsyncProviderConfig, AsyncMultiProvider {\n  /**\n   * Async value import.\n   */\n  useAsyncValue: () => Promise>;\n}\n\n/**\n * Type guard to check if a provider is an async value provider.\n */\nexport function isAsyncValueProvider(\n  asyncStaticProvider: AsyncStaticProvider\n): asyncStaticProvider is AsyncValueProvider | AsyncValueMultiProvider {\n  return (asyncStaticProvider as any).useAsyncValue != null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectionContext.html":{"url":"interfaces/InjectionContext.html","title":"interface - InjectionContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InjectionContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/injection-context.ts\n        \n\n\n            \n                Description\n            \n            \n                Injection context for async inject function.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            inject\n                                        \n                                \n                                \n                                        \n                                            resolve\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inject:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Inject function.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolve\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resolve:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Resolve function.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject } from '@angular/core';\n\nimport { AsyncInjector } from '../injector/async-injector';\n\n/**\n * Injection context for async inject function.\n */\nexport interface InjectionContext {\n  /**\n   * Inject function.\n   */\n  inject: typeof inject;\n\n  /**\n   * Resolve function.\n   */\n  resolve: AsyncInjector['resolve'];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResolveAsyncProvidersDirective.html":{"url":"directives/ResolveAsyncProvidersDirective.html","title":"directive - ResolveAsyncProvidersDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ResolveAsyncProvidersDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/resolve-async-providers.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive can be used to render a template after certain async providers have resolved. It can be useful to delay loading them as much as possible.\nThe template can safely inject those resolved async providers.\nExample :When no parameters are passed, it will load all async injectors in the injector hierarchy:\nExample :@Component({\n  template: ``,\n  providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n  imports: [ResolveAsyncProvidersDirective, ChildComponent],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ParentComponent {}\n\n@Component({\n  selector: 'child-component',\n  template: `Async injector value: {{ injectedText }}`,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ChildComponent {\n  readonly injectedText = inject(STRING_INJECTOR_TOKEN);\n}Example :Additionally, it also supports a map of async provider tokens. Only those will be resolved instead of all. The resolved async providers\nare available as the context for the structural directive. Example:\nExample :@Component({\n  template: `\n    \n    \n\n    \n    \n  `,\n  providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n  imports: [ResolveAsyncProvidersDirective, ChildComponent],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ParentComponent {\n  readonly stringInjectionToken = STRING_INJECTOR_TOKEN;\n}\n\n@Component({\n  selector: 'child-component',\n  template: `Async injector value: {{ inputText }}`,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ChildComponent {\n  @Input() inputText!: string;\n}\n            \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        ng-template[ngxResolveAsyncProviders]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ngTemplateContextGuard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxResolveAsyncProviders\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngxResolveAsyncProviders\n                    \n                \n                \n                    \n                        Type :     TProviders | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/resolve-async-providers.directive.ts:102\n                            \n                        \n                \n                    \n                        List of providers to be resolved. If not defined, it will resolve all async providers in the DI tree.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        ngTemplateContextGuard\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngTemplateContextGuard(_: ResolveAsyncProvidersDirective, context)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/directives/resolve-async-providers.directive.ts:109\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Type guard that exposes resolved async validators.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            ResolveAsyncProvidersDirective\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ResolveAsyncProvidersContext\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectorRef,\n  Directive,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n  InjectionToken,\n} from '@angular/core';\n\nimport { AsyncInjector } from '../injector/async-injector';\nimport { InjectionTokenTypeMap } from '../interfaces/injection-token-type';\nimport { ASYNC_INJECTOR_INITIALIZER } from '../tokens/async-injector-initializer.token';\n\n/**\n * This directive can be used to render a template after certain async providers have resolved. It can be useful to delay loading them as much as possible.\n * The template can safely inject those resolved async providers.\n *\n * @example\n *\n * When no parameters are passed, it will load _all_ async injectors in the injector hierarchy:\n *\n * ```ts\n * @Component({\n *   template: ``,\n *   providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n *   imports: [ResolveAsyncProvidersDirective, ChildComponent],\n *   standalone: true,\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n * })\n * class ParentComponent {}\n *\n * @Component({\n *   selector: 'child-component',\n *   template: `Async injector value: {{ injectedText }}`,\n *   standalone: true,\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n * })\n * class ChildComponent {\n *   readonly injectedText = inject(STRING_INJECTOR_TOKEN);\n * }\n * ```\n *\n * @example\n *\n * Additionally, it also supports a map of async provider tokens. Only those will be resolved instead of _all_. The resolved async providers\n * are available as the context for the structural directive. Example:\n *\n * ```ts\n * @Component({\n *   template: `\n *     \n *     \n *\n *     \n *     \n *   `,\n *   providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n *   imports: [ResolveAsyncProvidersDirective, ChildComponent],\n *   standalone: true,\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n * })\n * class ParentComponent {\n *   readonly stringInjectionToken = STRING_INJECTOR_TOKEN;\n * }\n *\n * @Component({\n *   selector: 'child-component',\n *   template: `Async injector value: {{ inputText }}`,\n *   standalone: true,\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n * })\n * class ChildComponent {\n *   @Input() inputText!: string;\n * }\n * ```\n */\n@Directive({\n  selector: 'ng-template[ngxResolveAsyncProviders]',\n  standalone: true,\n})\nexport class ResolveAsyncProvidersDirective }>\n  implements OnInit, OnDestroy\n{\n  private readonly asyncInjector = inject(AsyncInjector);\n  private readonly _asyncInjectorInitializer = inject(ASYNC_INJECTOR_INITIALIZER);\n  private readonly viewContainerRef = inject(ViewContainerRef);\n  private readonly templateRef = inject(TemplateRef);\n  private readonly cdr = inject(ChangeDetectorRef);\n\n  /**\n   * List of providers to be resolved. If not defined, it will resolve all async providers in the DI tree.\n   */\n  @Input('ngxResolveAsyncProviders') providers: TProviders | null = null;\n\n  private destroyed = false;\n\n  /**\n   * Type guard that exposes resolved async validators.\n   */\n  static ngTemplateContextGuard }>(\n    _: ResolveAsyncProvidersDirective,\n    context: unknown\n  ): context is ResolveAsyncProvidersContext {\n    return true;\n  }\n\n  ngOnInit() {\n    if (this.providers === null) {\n      this.asyncInjector.resolveAll().then(() => this.renderTemplate());\n    } else {\n      this.asyncInjector\n        .resolveMany(this.providers)\n        .then((providersValueMap: InjectionTokenTypeMap) => this.renderTemplate(providersValueMap));\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyed = true;\n  }\n\n  private renderTemplate(providersValueMap?: InjectionTokenTypeMap) {\n    if (this.destroyed) {\n      return;\n    }\n\n    if (providersValueMap == null) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      const context: ResolveAsyncProvidersContext = {\n        $implicit: providersValueMap,\n        ...providersValueMap,\n      };\n      this.viewContainerRef.createEmbeddedView(this.templateRef, context);\n    }\n\n    this.cdr.markForCheck();\n  }\n}\n\n/**\n * Type of the structural directive context that exposes resolved async validators.\n */\nexport type ResolveAsyncProvidersContext }> = {\n  $implicit: InjectionTokenTypeMap;\n} & InjectionTokenTypeMap;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TypeWithoutConstructorParams.html":{"url":"interfaces/TypeWithoutConstructorParams.html","title":"interface - TypeWithoutConstructorParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TypeWithoutConstructorParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/type-without-constructor-params.ts\n        \n\n\n            \n                Description\n            \n            \n                Type of a constructor without params used for class async providers.\n\n            \n\n            \n                Extends\n            \n            \n                            Function\n            \n\n\n\n\n    \n\n\n    \n        export interface TypeWithoutConstructorParams extends Function {\n  new (): T;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nThis file was generated using @jscutlery/semver.\n3.1.0 (2024-03-14)\nFeatures\n\nngx-signal-forms: :tada: scaffold signal forms library (#1200) (b84e599)\n\n3.0.5 (2024-02-08)\n3.0.4 (2024-02-07)\n3.0.3 (2024-02-07)\n3.0.2 (2024-02-07)\n3.0.1 (2024-02-02)\nBug Fixes\n\nupgrade nx to v17.2.0 (#1099) (85f83e1)\n\n3.0.0 (2023-12-03)\n⚠ BREAKING CHANGES\n\nUpgrade to Angular v17\n\nFeatures\n\n:arrow_up: upgrade to Angular v17 (58e28fa)\n\nBug Fixes\n\ndeps: ⬆️ update nx monorepo to v17 (major) (#1013) (009816c)\n\n2.0.2 (2023-07-27)\n2.0.1 (2023-07-25)\n2.0.0 (2023-05-16)\n⚠ BREAKING CHANGES\n\ndeps: Upgrade to Angular and Nx 16\n\nFeatures\n\n:package: rescope to @nx (#681) (#682) (e2fd0a8)\ndeps: :arrow_up: update monorepo to Angular and Nx 16 (#679) (733a9f8)\n\n1.0.6 (2023-04-17)\n1.0.5 (2023-04-17)\n1.0.4 (2023-04-05)\n1.0.3 (2023-04-04)\n1.0.2 (2023-03-15)\nBug Fixes\n\nngx-async-injector: :memo: add playground to README (5234f18)\n\n1.0.1 (2023-03-15)\nBug Fixes\n\nngx-async-injector: :package: widen deps and fix main entry point (#527) (f23e180)\n\n1.0.0 (2023-03-15)\nFeatures\n\n:tada: initial release\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/directives/resolve-async-providers.directive.ts\n            \n            directive\n            ResolveAsyncProvidersDirective\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/functions/is-multi-provider.ts\n            \n            function\n            isMultiProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/functions/resolve-many.ts\n            \n            function\n            resolveMany\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/functions/resolve-many.ts\n            \n            function\n            resolveMany\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/functions/resolve-many.ts\n            \n            function\n            resolveMany\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/functions/resolve.ts\n            \n            variable\n            resolve\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-class-provider.ts\n            \n            interface\n            AsyncClassMultiProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-class-provider.ts\n            \n            interface\n            AsyncClassProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-class-provider.ts\n            \n            function\n            isAsyncClassProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-factory-provider.ts\n            \n            interface\n            AsyncFactoryMultiProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-factory-provider.ts\n            \n            interface\n            AsyncFactoryProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-factory-provider.ts\n            \n            function\n            isAsyncFactoryProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-multi-provider.ts\n            \n            interface\n            AsyncMultiProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-provider-config.ts\n            \n            interface\n            AsyncProviderConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-value-provider.ts\n            \n            interface\n            AsyncValueMultiProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-value-provider.ts\n            \n            interface\n            AsyncValueProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/interfaces/async-value-provider.ts\n            \n            function\n            isAsyncValueProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/interfaces/injection-context.ts\n            \n            interface\n            InjectionContext\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/interfaces/type-without-constructor-params.ts\n            \n            interface\n            TypeWithoutConstructorParams\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/providers/provide-async.function.ts\n            \n            function\n            provideAsync\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/providers/provide-async.function.ts\n            \n            function\n            provideAsync\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/providers/provide-async.function.ts\n            \n            function\n            provideAsync\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.5.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/core : ^17.0.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isAsyncClassProvider   (src/.../async-class-provider.ts)\n                        \n                        \n                            isAsyncFactoryProvider   (src/.../async-factory-provider.ts)\n                        \n                        \n                            isAsyncValueProvider   (src/.../async-value-provider.ts)\n                        \n                        \n                            isMultiProvider   (src/.../is-multi-provider.ts)\n                        \n                        \n                            provideAsync   (src/.../provide-async.function.ts)\n                        \n                        \n                            provideAsync   (src/.../provide-async.function.ts)\n                        \n                        \n                            provideAsync   (src/.../provide-async.function.ts)\n                        \n                        \n                            resolveMany   (src/.../resolve-many.ts)\n                        \n                        \n                            resolveMany   (src/.../resolve-many.ts)\n                        \n                        \n                            resolveMany   (src/.../resolve-many.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/interfaces/async-class-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAsyncClassProvider\n                        \n                    \n                \n            \n            \n                \nisAsyncClassProvider(asyncStaticProvider: AsyncStaticProvider)\n                \n            \n\n\n\n\n            \n                \n                        Type guard to check if a provider is an async class provider.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asyncStaticProvider\n                                            \n                                                            AsyncStaticProvider\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AsyncClassProvider | AsyncClassMultiProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/interfaces/async-factory-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAsyncFactoryProvider\n                        \n                    \n                \n            \n            \n                \nisAsyncFactoryProvider(asyncStaticProvider: AsyncStaticProvider)\n                \n            \n\n\n\n\n            \n                \n                        Type guard to check if a provider is an async factory provider.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asyncStaticProvider\n                                            \n                                                            AsyncStaticProvider\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AsyncFactoryProvider | AsyncFactoryMultiProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/interfaces/async-value-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAsyncValueProvider\n                        \n                    \n                \n            \n            \n                \nisAsyncValueProvider(asyncStaticProvider: AsyncStaticProvider)\n                \n            \n\n\n\n\n            \n                \n                        Type guard to check if a provider is an async value provider.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asyncStaticProvider\n                                            \n                                                            AsyncStaticProvider\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AsyncValueProvider | AsyncValueMultiProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/functions/is-multi-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMultiProvider\n                        \n                    \n                \n            \n            \n                \nisMultiProvider(asyncStaticProvider: AsyncStaticProvider)\n                \n            \n\n\n\n\n            \n                \n                        Type guard to check if the provider is defined as multiple.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asyncStaticProvider\n                                            \n                                                            AsyncStaticProvider\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AsyncValueMultiProvider | AsyncClassMultiProvider | AsyncFactoryMultiProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/providers/provide-async.function.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideAsync\n                        \n                    \n                \n            \n            \n                \nprovideAsync(asyncStaticProvider: AsyncStaticProvider)\n                \n            \n\n\n\n\n            \n                \n                        It is used to declare one or more async providers. For each provider, it requires the token, and then an async function that can be useAsyncValue, useAsyncClass or useAsyncFactory. It supports multi providers as well. It can be used in environment injectors, modules, components and directives. If multiple providers need to be declared in the same injector, use a single provideAsync function with multiple providers instead of using it multiple times.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asyncStaticProvider\n                                            \n                                                            AsyncStaticProvider\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     StaticProvider[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideAsync\n                        \n                    \n                \n            \n            \n                \nprovideAsync(asyncStaticProviders: AsyncProviderTypes)\n                \n            \n\n\n\n\n            \n                \n                        Overload for a collection of async providers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asyncStaticProviders\n                                            \n                                                            AsyncProviderTypes\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     StaticProvider[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideAsync\n                        \n                    \n                \n            \n            \n                \nprovideAsync(...asyncStaticProviders: undefined)\n                \n            \n\n\n\n\n            \n                \n                        Base implementation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asyncStaticProviders\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     StaticProvider[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/functions/resolve-many.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        resolveMany\n                        \n                    \n                \n            \n            \n                \nresolveMany(injectionTokens: T)\n                \n            \n\n\n\n\n            \n                \n                        resolve and resolveMany functions can be used in route resolvers to ensure that certain async providers are resolved before a route loads.\nThey could be used in other places as needed, since they return a promise that resolves when the async provider is resolved and returns its value.\nIt can be compared to Angular's inject function, but for async providers.\nresolveMany supports either a list of async provider tokens, or a map of key-value pairs with the value being the token.\nThe resolved value will have the same shape, either an array or a map of the resolved async providers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                injectionTokens\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveMany\n                        \n                    \n                \n            \n            \n                \nresolveMany(...injectionTokens: T)\n                \n            \n\n\n\n\n            \n                \n                        Overload for multiple injection tokens.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                injectionTokens\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveMany\n                        \n                    \n                \n            \n            \n                \nresolveMany(...injectionTokens: undefined)\n                \n            \n\n\n\n\n            \n                \n                        Overload for map of injection tokens.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                injectionTokens\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@nx-squeezer/ngx-async-injector \n      \n\nMotivation\nShow me the code\nExamples\nResolve using route's resolver\nResolve using a structural directive\nResolve configuration from API\n\n\nAPI documentation\nprovideAsync function\nresolve and resolveMany\n*ngxResolveAsyncProviders structural directive\n\n\nInstallation\n\nMotivation\nAngular's dependency injection (DI) system is designed to be synchronous, since having asynchronous providers would make component rendering asynchronous and break existing renderer.\nAs of today it is not possible to lazy load data asynchronously and consume it through a provider. The only option recommended by Angular when it needs to be loaded before the app initializes is using APP_INITIALIZER. However, it has several known cons because it is blocking and delays rendering the whole component tree and loading routes.\nAnother common problem is the initial payload of the main bundle caused by needing to declare providers in root. When a provider is needed by various features it usually needs to be declared in the root injector, increasing the initial bundle size. It would be great that services could be declared in the root component, but lazy loaded when needed. It is true that using providedIn: root could be used in many scenarios, but there are others where using async import() of a dependency would be more useful, such as code splitting and fine grained lazy loading.\nFor the scenarios described above, having a way to declare asynchronous providers, either by loading data from the server and later instantiating a service, or to lazy load them using import(), could help and give flexibility to implementers. This particular problem is what @nx-squeezer/ngx-async-injector solves.\nShow me the code\nThe API that this library offers is very much similar to Angular's DI. Check this code as an example:\nExample :// main.ts\nbootstrapApplication(AppComponent, {\n  providers: [\n    {\n      provide: MY_SERVICE,\n      useClass: MyService,\n    },\n  ],\n});\n\n// component\nclass Component {\n  private readonly myService = inject(MY_SERVICE);\n}Could be made asynchronous and lazy loaded using provideAsync():\nExample :// main.ts\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync({\n      provide: MY_SERVICE,\n      useAsyncClass: () => import('./my-service').then((x) => x.MyService),\n    }),\n  ],\n});\n\n// component\nclass Component {\n  private readonly myService = inject(MY_SERVICE);\n}That's it! Declaration is almost identical, and consumption is the same. But wait, when is the async provided actually loaded and resolved?\nIt needs another piece that triggers it: async provider resolvers. Check this diagram:\n\nAsync providers need to be resolved before being used, and that is a responsibility of the application. It can be done while loading a route using a route resolver, or with a structural directive that will delay rendering until they are loaded.\nCheck this online Stackblitz playground with a live demo.\nExamples\nResolve using route's resolver\nExample :export const appRoutes: Route[] = [\n  {\n    path: '',\n    loadComponent: () => import('./route.component'),\n    resolve: {\n      asyncProviders: () => resolveMany(MY_SERVICE),\n    },\n  },\n];In this case, the async provider will be resolved while the route loads, and the inside the component MY_SERVICE can be injected.\nResolve using a structural directive\nExample :@Component({\n  imports: [ResolveAsyncProvidersDirective, ChildComponent],\n  template: `  `,\n  standalone: true,\n})\nexport default class ParentComponent {\n  readonly MY_SERVICE = MY_SERVICE;\n}In this case, the async provider will be resolved when the parent component renders, and once completed the child component will be rendered having MY_SERVICE available.\nResolve configuration from API\nExample :// Instead of using the common approach of APP_INITIALIZER, which blocks loading and rendering until resolved:\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideHttpClient(),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: () => inject(HttpClient).get('/config'),\n      multi: true,\n    },\n  ],\n});\n\n// You could declare it with an async provider, which will be resolved on demand without blocking,\n// and yet available through DI:\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideHttpClient(),\n    {\n      provide: CONFIG_TOKEN,\n      useAsyncFactory: () => firstValueFrom(inject(HttpClient).get('/config')),\n    },\n  ],\n});API documentation\nCheck the full documentation to see all available features.\nprovideAsync function\nIt is used to declare one or more async providers. For each provider, it requires the token, and then an async function that can be useAsyncValue, useAsyncClass or useAsyncFactory. It supports multi providers as well. It can be used in environment injectors, modules, components and directives. If multiple providers need to be declared in the same injector, use a single provideAsync function with multiple providers instead of using it multiple times.\nAsync provider tokens are regular Angular injection tokens typed with the resolved value of the async provider.\nExample of declaring a single async provider:\nExample :export const MY_SERVICE = new InjectionToken('my-service-token');\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync({\n      provide: MY_SERVICE,\n      useAsyncClass: () => import('./my-service').then((x) => x.MyService),\n    }),\n  ],\n});Example of declaring multiple providers, each one with different async functions:\nExample :bootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync(\n      {\n        provide: CLASS_PROVIDER,\n        useAsyncClass: () => import('./first-service').then((x) => x.FirstService),\n      },\n      {\n        provide: VALUE_PROVIDER,\n        useAsyncValue: () => import('./value').then((x) => x.value),\n      },\n      {\n        provide: FACTORY_PROVIDER,\n        useAsyncFactory: () => import('./factory').then((x) => x.providerFactory),\n      }\n    ),\n  ],\n});\n\n// first-service.ts\nexport class FirstService {}\n\n// value.ts\nexport const value = 'value';\n\n// factory.ts\nexport async function providerFactory() {\n  return await Promise.resolve('value');\n}Multi providers can also be declared as it happens with Angular:\nExample :bootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync(\n      {\n        provide: VALUE_PROVIDER,\n        useAsyncValue: () => import('./first-value').then((x) => x.value),\n        multi: true,\n      },\n      {\n        provide: VALUE_PROVIDER,\n        useAsyncValue: () => import('./second-value').then((x) => x.value),\n        multi: true,\n      }\n    ),\n  ],\n});Finally, the lazy load behavior can be controlled by the mode flag. By default it is lazy, which means it won't be resolved until requested. eager on the contrary will trigger the load on declaration, even though resolvers are still needed to wait for completion. Example:\nExample :bootstrapApplication(AppComponent, {\n  providers: [\n    provideAsync({\n      provide: VALUE_PROVIDER,\n      useAsyncValue: () => import('./first-value').then((x) => x.value),\n      mode: 'eager',\n    }),\n  ],\n});When using a factory provider, the function itself can be async. Regular inject function from Angular can be used before executing any async code since the injection context is preserved, however it can't be used afterwards. To solve that problem, and also to protect against cyclic dependencies between async providers, the factory provider function is called with a context that exposes two functions that are self explanatory, inject and resolve. Example:\nExample :import { InjectionContext } from '@nx-squeezer/ngx-async-injector';\n\nexport async function providerFactory({ inject, resolve }: InjectionContext): Promise {\n  const firstString = await resolve(FIRST_INJECTION_TOKEN);\n  const secondString = inject(SECOND_INJECTION_TOKEN);\n  return `${firstString} ${secondString}`;\n}resolve and resolveMany\nresolve and resolveMany functions can be used in route resolvers to ensure that certain async providers are resolved before a route loads. They could be used in other places as needed, since they return a promise that resolves when the async provider is resolved and returns its value. It can be compared to Angular's inject function, but for async providers.\nExample of how to use it in a route resolver:\nExample :export const routes: Route[] = [\n  {\n    path: '',\n    loadComponent: () => import('./route.component'),\n    providers: [\n      provideAsync(\n        {\n          provide: CLASS_PROVIDER,\n          useAsyncClass: () => import('./first-service').then((x) => x.FirstService),\n        },\n        {\n          provide: VALUE_PROVIDER,\n          useAsyncValue: () => import('./value').then((x) => x.value),\n        }\n      ),\n    ],\n    resolve: {\n      asyncProviders: () => resolveMany(CLASS_PROVIDER, VALUE_PROVIDER),\n    },\n  },\n];*ngxResolveAsyncProviders structural directive\nThis directive can be used to render a template after certain async providers have resolved. It can be useful to delay loading them as much as possible. The template can safely inject those resolved async providers.\nWhen no parameters are passed, it will load all async injectors in the injector hierarchy:\nExample :@Component({\n  template: ``,\n  providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n  imports: [ResolveAsyncProvidersDirective, ChildComponent],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ParentComponent {}\n\n@Component({\n  selector: 'child-component',\n  template: `Async injector value: {{ injectedText }}`,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ChildComponent {\n  readonly injectedText = inject(STRING_INJECTOR_TOKEN);\n}Additionally, it also supports a map of async provider tokens. Only those will be resolved instead of all. The resolved async providers are available as the context for the structural directive. Example:\nExample :@Component({\n  template: `\n    \n    \n\n    \n    \n  `,\n  providers: [provideAsync({ provide: STRING_INJECTOR_TOKEN, useAsyncValue: stringAsyncFactory })],\n  imports: [ResolveAsyncProvidersDirective, ChildComponent],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ParentComponent {\n  readonly stringInjectionToken = STRING_INJECTOR_TOKEN;\n}\n\n@Component({\n  selector: 'child-component',\n  template: `Async injector value: {{ inputText }}`,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass ChildComponent {\n  @Input() inputText!: string;\n}Installation\nDo you like this library? Go ahead and use it! It is production ready, with 100% code coverage, protected by integration tests, and uses semantic versioning. To install it:\nExample :npm install @nx-squeezer/ngx-async-injector\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.1.0\n        \n            Description : Angular library that provides async dependency injection\n        \n            Keywords : angular, async, DI, dependency injection, providers\n        \n            Homepage : https://github.com/nx-squeezer/squeezer/tree/main/packages/ngx-async-injector\n        \n            Bugs : https://github.com/nx-squeezer/squeezer/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/nx-squeezer/squeezer.git\n        \n            Author : samuelfernandez\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ArrayItemType   (src/.../array-item.ts)\n                        \n                        \n                            AsyncFactoryWithInjectionContext   (src/.../async-factory-provider.ts)\n                        \n                        \n                            AsyncProviderTypes   (src/.../async-provider-types.ts)\n                        \n                        \n                            AsyncStaticProvider   (src/.../async-static-provider.ts)\n                        \n                        \n                            InjectionTokenType   (src/.../injection-token-type.ts)\n                        \n                        \n                            InjectionTokenTypeCollection   (src/.../injection-token-type.ts)\n                        \n                        \n                            InjectionTokenTypeMap   (src/.../injection-token-type.ts)\n                        \n                        \n                            ResolveAsyncProvidersContext   (src/.../resolve-async-providers.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/interfaces/array-item.ts\n    \n    \n        \n            \n                \n                    \n                    ArrayItemType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/lib/interfaces/async-factory-provider.ts\n    \n    \n        \n            \n                \n                    \n                    AsyncFactoryWithInjectionContext\n                \n            \n            \n                \n                    Type of an async factory provider.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/lib/interfaces/async-provider-types.ts\n    \n    \n        \n            \n                \n                    \n                    AsyncProviderTypes\n                \n            \n            \n                \n                    Type map for async providers in a keyed map.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/lib/interfaces/async-static-provider.ts\n    \n    \n        \n            \n                \n                    \n                    AsyncStaticProvider\n                \n            \n            \n                \n                    Union type of static async providers.\n\n                \n            \n            \n                \n                        AsyncValueProvider | AsyncFactoryProvider | AsyncClassProvider | AsyncValueMultiProvider | AsyncFactoryMultiProvider | AsyncClassMultiProvider\n\n                \n            \n        \n    \n    src/lib/interfaces/injection-token-type.ts\n    \n    \n        \n            \n                \n                    \n                    InjectionTokenType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InjectionTokenTypeCollection\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InjectionTokenTypeMap\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/lib/directives/resolve-async-providers.directive.ts\n    \n    \n        \n            \n                \n                    \n                    ResolveAsyncProvidersContext\n                \n            \n            \n                \n                    Type of the structural directive context that exposes resolved async validators.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            resolve   (src/.../resolve.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/functions/resolve.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (injectionToken: InjectionToken): Promise => {\n  return inject(AsyncInjector).resolve(injectionToken);\n}\n                    \n                \n\n            \n                \n                    resolve and resolveMany functions can be used in route resolvers to ensure that certain async providers are resolved before a route loads.\nThey could be used in other places as needed, since they return a promise that resolves when the async provider is resolved and returns its value.\nIt can be compared to Angular's inject function, but for async providers.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
