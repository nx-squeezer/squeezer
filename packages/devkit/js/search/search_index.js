var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ExecOptions.html",[0,0.683,1,1.023]],["body/interfaces/ExecOptions.html",[0,0.847,1,1.454,2,1.114,3,1.361,4,1.361,5,0.847,6,1.114,7,0.917,8,2.158,9,1.766,10,2.681,11,2.444,12,0.613,13,1.269,14,1.541,15,3.037,16,1.829,17,0.078,18,0.613,19,2.339,20,2.339,21,2.339,22,2.328,23,1.692,24,1.692,25,1.692,26,1.541,27,1.692,28,1.692,29,1.114,30,2.339,31,1.692,32,2.158,33,1.269,34,2.893,35,3.281,36,1.692,37,1.361,38,1.361,39,1.361,40,1.114,41,1.361,42,1.882,43,1.361,44,2.681,45,1.114,46,1.692,47,1.114,48,1.692,49,2.339,50,1.882,51,1.692,52,1.692,53,1.692,54,1.692,55,1.882,56,1.692,57,1.692,58,1.692,59,1.692,60,1.361,61,1.692,62,0.049,63,0.049]],["title/interfaces/ExecResult.html",[0,0.683,33,1.023]],["body/interfaces/ExecResult.html",[0,0.845,1,1.265,2,1.109,3,1.355,4,1.355,5,0.845,6,1.109,7,0.913,8,1.876,9,1.536,10,2.675,11,2.323,12,0.61,13,1.265,14,1.536,15,2.332,16,1.778,17,0.078,18,0.845,19,1.684,20,1.684,21,1.684,22,2.323,23,1.684,24,1.684,25,1.684,26,1.536,27,1.684,28,1.684,29,1.109,30,2.675,31,2.332,32,2.152,33,1.451,34,3.278,35,3.479,36,2.332,37,1.355,38,1.355,39,1.355,40,1.109,41,1.355,42,1.876,43,1.355,44,2.675,45,1.109,46,1.684,47,1.109,48,1.684,49,2.332,50,1.876,51,1.684,52,1.684,53,1.684,54,1.684,55,1.876,56,1.684,57,1.684,58,1.684,59,1.684,60,1.355,61,1.684,62,0.049,63,0.049]],["title/interfaces/GitHubActionJobStep.html",[0,0.683,64,1.243]],["body/interfaces/GitHubActionJobStep.html",[0,0.567,2,1.03,3,1.258,4,1.258,5,1.11,7,0.848,9,2.018,12,0.567,13,1.201,14,2.12,16,1.877,17,0.078,18,1.141,22,1.782,32,2.249,40,1.459,45,1.03,47,1.03,50,2.068,55,2.068,62,0.047,63,0.047,64,1.693,65,1.03,66,1.03,67,1.03,68,2.871,69,1.693,70,2.871,71,3.218,72,2.795,73,2.018,74,3.972,75,2.871,76,2.871,77,2.795,78,1.564,79,2.028,80,2.028,81,2.871,82,1.564,83,1.564,84,2.249,85,1.693,86,2.068,87,1.564,88,2.028,89,2.028,90,2.214,91,1.564,92,1.564,93,1.564,94,2.028,95,1.564,96,1.564,97,2.028,98,2.871,99,2.028,100,2.028,101,2.028,102,1.564,103,2.028,104,2.028,105,2.871,106,2.028,107,2.028,108,2.028,109,2.028,110,2.028,111,2.028]],["title/changelog.html",[112,1.603,113,1.603,114,1.603]],["body/changelog.html",[5,0.472,17,0.061,62,0.041,63,0.041,69,0.858,73,0.858,85,0.858,114,1.303,115,1.689,116,1.689,117,1.689,118,1.303,119,3.728,120,3.967,121,3.556,122,1.689,123,1.689,124,2.514,125,1.689,126,3.003,127,3.003,128,4.285,129,3.861,130,1.052,131,2.514,132,2.978,133,4.054,134,1.689,135,1.689,136,1.689,137,1.303,138,1.56,139,1.689,140,1.133,141,3.326,142,1.689,143,1.689,144,1.689,145,1.689,146,1.689,147,3.556,148,3.556,149,4.054,150,3.728,151,3.861,152,1.962,153,1.689,154,1.689,155,3.003,156,1.689,157,1.689,158,1.689,159,1.689,160,1.689,161,1.689,162,1.689,163,4.359,164,3.003,165,3.326,166,4.187,167,0.472,168,1.689,169,1.689,170,1.689,171,1.689,172,1.689,173,1.689,174,1.689,175,2.514,176,1.689,177,1.689,178,1.689,179,1.689,180,1.689,181,1.689,182,1.689,183,1.689,184,1.689,185,1.689,186,1.689,187,2.514,188,1.689,189,1.689,190,1.689,191,1.864,192,3.556,193,1.689,194,1.048,195,1.689,196,1.689,197,1.689,198,1.689,199,1.689,200,1.689,201,1.689,202,1.689,203,3.556,204,3.003,205,2.514,206,1.689,207,3.003,208,1.689,209,1.689,210,1.689,211,3.003,212,0.377,213,1.689,214,1.689,215,1.689,216,1.689,217,1.689,218,1.689,219,1.689,220,3.556,221,1.689,222,1.689,223,2.514,224,1.689,225,1.689,226,1.689,227,1.689,228,1.048,229,1.689,230,1.689,231,1.689,232,1.689,233,1.689,234,1.689,235,1.689,236,1.689,237,1.689,238,1.689,239,2.514,240,1.689,241,1.689,242,1.689,243,1.689,244,1.689,245,1.689,246,1.689,247,1.689,248,1.689,249,1.689,250,1.689,251,1.689]],["title/coverage.html",[252,2.519]],["body/coverage.html",[0,0.822,1,0.683,5,0.456,6,1.496,17,0.077,18,0.456,29,0.83,33,0.683,40,2.324,60,1.014,62,0.04,63,0.04,64,0.83,65,1.662,66,1.662,67,1.662,86,1.014,130,0.683,138,1.522,140,0.456,191,1.522,194,1.014,212,0.783,228,1.014,252,1.26,253,1.26,254,1.633,255,1.633,256,4.69,257,1.633,258,1.633,259,1.26,260,4.673,261,1.891,262,1.891,263,1.891,264,1.26,265,1.26,266,1.26,267,1.26,268,1.26,269,1.633,270,1.26,271,1.26,272,4.209,273,1.781,274,1.26,275,1.26,276,1.26,277,1.26,278,1.26,279,1.014,280,1.26,281,1.26,282,2.285,283,1.26,284,1.26,285,1.26,286,1.26,287,2.176,288,1.26,289,1.26,290,1.26,291,1.26,292,1.26,293,1.26,294,1.26,295,1.26,296,1.26,297,1.26,298,2.285,299,2.27,300,2.285,301,1.26,302,1.014,303,1.26,304,1.26,305,1.26,306,1.827,307,1.26,308,1.26,309,1.26,310,1.26,311,1.26,312,1.26,313,1.26,314,1.827,315,1.827,316,1.827,317,1.26,318,1.26,319,1.26,320,1.26,321,1.26,322,1.26,323,1.26,324,1.26,325,2.27,326,1.26,327,1.26,328,1.26,329,1.26,330,1.26,331,1.891,332,1.26,333,1.26,334,1.633,335,1.633]],["title/dependencies.html",[152,1.485,212,0.464]],["body/dependencies.html",[17,0.077,62,0.062,63,0.062,78,2.428,82,2.428,130,1.317,137,2.428,140,0.879,152,1.95,336,3.147,337,3.147,338,3.147,339,3.147,340,3.147,341,4.309,342,4.309,343,3.147,344,3.147,345,3.147,346,3.147,347,3.147,348,2.428,349,3.147,350,1.953,351,3.147]],["title/miscellaneous/functions.html",[167,0.581,352,2.254]],["body/miscellaneous/functions.html",[1,0.691,5,0.985,6,0.505,7,0.691,8,1.026,9,0.505,11,1.317,12,0.462,14,2.168,16,1.836,17,0.074,18,1.172,26,1.078,29,0.84,33,0.415,37,1.026,38,1.317,39,1.026,41,0.616,42,1.026,43,1.026,45,0.505,47,1.078,62,0.027,63,0.027,64,0.84,65,0.505,66,0.505,67,1.078,69,0.505,71,1.637,72,1.637,73,2.188,77,3.532,84,1.026,85,0.84,90,1.275,91,1.275,92,0.766,93,0.766,95,0.766,96,0.766,130,0.888,138,1.84,140,0.593,152,0.505,167,0.278,191,1.84,194,1.317,212,0.808,228,1.026,259,1.275,261,0.766,262,2.286,263,1.637,264,1.275,265,1.275,266,0.766,267,1.275,268,1.275,270,1.275,271,1.275,273,0.505,274,1.275,275,1.275,276,1.275,278,0.766,279,1.317,280,1.275,281,1.275,282,1.026,283,0.766,284,1.275,285,1.275,286,1.275,287,0.616,288,1.275,289,1.275,293,0.766,294,1.275,295,1.275,298,1.535,299,1.637,300,2.12,301,1.275,302,1.317,303,1.275,304,2.118,305,1.275,306,0.616,307,1.275,308,1.275,310,0.766,311,1.275,312,0.766,313,1.637,314,0.616,315,1.317,316,1.026,317,1.275,324,0.766,325,2.286,326,1.275,327,0.766,328,1.275,329,0.766,330,1.637,331,0.766,332,1.275,333,1.275,348,0.766,350,1.026,352,0.766,353,2.118,354,1.275,355,1.317,356,1.652,357,0.993,358,0.993,359,2.122,360,0.993,361,0.993,362,0.993,363,0.993,364,1.275,365,1.275,366,0.993,367,0.993,368,0.993,369,1.652,370,1.652,371,1.652,372,3.416,373,3.142,374,0.766,375,4.266,376,1.637,377,1.637,378,1.652,379,0.993,380,2.746,381,2.286,382,0.993,383,4.03,384,0.993,385,2.122,386,1.275,387,0.993,388,0.993,389,2.964,390,0.993,391,0.993,392,1.652,393,1.652,394,0.993,395,1.637,396,0.993,397,1.652,398,0.993,399,1.84,400,1.652,401,0.993,402,0.993,403,0.993,404,0.993,405,0.993,406,0.993,407,0.993,408,0.993,409,0.993,410,0.993,411,0.993,412,0.993,413,0.993,414,2.122,415,1.652,416,1.652,417,1.652,418,2.746,419,0.993,420,2.122,421,0.993,422,0.993,423,1.652,424,2.122,425,0.993,426,0.993,427,0.993,428,0.993,429,0.766,430,0.993,431,0.993,432,0.993,433,0.993,434,0.993,435,0.993,436,0.993,437,0.993,438,0.993,439,0.993,440,2.122,441,0.993,442,0.993,443,0.993,444,0.993,445,0.993,446,0.993,447,2.122,448,2.122,449,0.993,450,1.652,451,0.993,452,0.993,453,1.652,454,1.652,455,1.275,456,0.993,457,0.993,458,0.993,459,0.766,460,0.993,461,0.993,462,0.993,463,0.993,464,0.993,465,0.993]],["title/index.html",[12,0.581,112,1.603,113,1.603]],["body/index.html",[17,0.066,62,0.066,63,0.066,132,2.63,140,1.197,212,0.762,253,2.63,279,2.116,302,2.116,399,2.116,459,2.63,466,4.026,467,2.63,468,2.63,469,2.63,470,2.63,471,3.41,472,3.41,473,3.41,474,3.41,475,3.41]],["title/modules.html",[476,2.519]],["body/modules.html",[17,0.068,62,0.068,63,0.068,476,2.836]],["title/overview.html",[477,2.519]],["body/overview.html",[2,1.854,17,0.068,62,0.068,63,0.068,477,2.814,478,3.648]],["title/properties.html",[13,1.222,212,0.464]],["body/properties.html",[7,1.344,13,1.344,17,0.076,62,0.063,63,0.063,118,2.477,140,1.086,212,0.718,399,1.993,429,2.477,467,2.477,468,2.477,469,2.477,470,2.477,479,3.212,480,3.212,481,3.212,482,3.212,483,3.212,484,3.212,485,3.885,486,3.212,487,3.212,488,3.212,489,3.212,490,3.212,491,3.212,492,3.212,493,3.212,494,3.212,495,3.212]],["title/miscellaneous/typealiases.html",[167,0.581,496,2.922]],["body/miscellaneous/typealiases.html",[12,0.97,17,0.07,18,0.97,62,0.066,63,0.066,167,0.97,273,1.765,355,2.155,386,3.139,497,3.473,498,2.679,499,4.317,500,2.679,501,3.473,502,3.473]],["title/miscellaneous/variables.html",[167,0.581,503,2.254]],["body/miscellaneous/variables.html",[5,0.984,12,0.627,16,1.757,17,0.075,18,1.196,26,1.566,62,0.05,63,0.05,65,1.141,66,1.141,67,1.566,69,1.789,73,1.141,83,3.062,84,1.394,85,1.141,86,1.913,87,1.732,102,1.732,130,1.716,140,0.627,167,0.627,212,0.502,273,1.141,277,2.377,282,1.394,287,1.394,290,2.377,291,2.377,292,2.377,296,1.732,297,2.377,298,1.394,300,1.913,306,1.394,309,2.377,314,1.394,315,2.185,316,2.185,318,2.377,319,2.377,320,1.732,321,2.377,322,1.732,323,2.377,350,2.185,353,2.377,354,1.732,355,1.913,364,1.732,365,2.715,374,1.732,376,3.348,377,3.348,381,2.377,395,1.732,455,1.732,498,2.377,500,1.732,503,1.732,504,2.245,505,2.245,506,2.245,507,2.245,508,3.082,509,2.245,510,3.082,511,2.245,512,2.245,513,2.245,514,2.245,515,2.245,516,2.245,517,2.245,518,3.082,519,2.245,520,2.245,521,2.245,522,2.245]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.1.0",{"_index":243,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":237,"title":{},"body":{"changelog.html":{}}}],["0.2.1",{"_index":232,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":221,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":219,"title":{},"body":{"changelog.html":{}}}],["009816c",{"_index":177,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":180,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":120,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":172,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":220,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":203,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":124,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":121,"title":{},"body":{"changelog.html":{}}}],["077b1b8",{"_index":231,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":165,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":179,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":210,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":202,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":199,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":189,"title":{},"body":{"changelog.html":{}}}],["1.2.1",{"_index":188,"title":{},"body":{"changelog.html":{}}}],["1.2.2",{"_index":186,"title":{},"body":{"changelog.html":{}}}],["1.2.3",{"_index":178,"title":{},"body":{"changelog.html":{}}}],["1.2.4",{"_index":171,"title":{},"body":{"changelog.html":{}}}],["1.2.5",{"_index":170,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":256,"title":{},"body":{"coverage.html":{}}}],["1013",{"_index":176,"title":{},"body":{"changelog.html":{}}}],["1097",{"_index":153,"title":{},"body":{"changelog.html":{}}}],["1099",{"_index":160,"title":{},"body":{"changelog.html":{}}}],["11.0.0",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["1172",{"_index":157,"title":{},"body":{"changelog.html":{}}}],["1190",{"_index":143,"title":{},"body":{"changelog.html":{}}}],["1191",{"_index":134,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":164,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":187,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":211,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":204,"title":{},"body":{"changelog.html":{}}}],["17.0.0",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["17.1.0",{"_index":156,"title":{},"body":{"changelog.html":{}}}],["18.0.0",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["1948e5b",{"_index":200,"title":{},"body":{"changelog.html":{}}}],["1983221",{"_index":182,"title":{},"body":{"changelog.html":{}}}],["2.0.0",{"_index":162,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":146,"title":{},"body":{"changelog.html":{}}}],["2.0.2",{"_index":145,"title":{},"body":{"changelog.html":{}}}],["2.3.4",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["2.8.0",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":257,"title":{},"body":{"coverage.html":{}}}],["2023",{"_index":163,"title":{},"body":{"changelog.html":{}}}],["2024",{"_index":119,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":190,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":478,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":125,"title":{},"body":{"changelog.html":{}}}],["3.0.1",{"_index":123,"title":{},"body":{"changelog.html":{}}}],["3.0.2",{"_index":122,"title":{},"body":{"changelog.html":{}}}],["3.0.3",{"_index":118,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["3/3",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["4745b8c",{"_index":185,"title":{},"body":{"changelog.html":{}}}],["4b148a1",{"_index":144,"title":{},"body":{"changelog.html":{}}}],["5.2.0",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["574",{"_index":250,"title":{},"body":{"changelog.html":{}}}],["576",{"_index":246,"title":{},"body":{"changelog.html":{}}}],["577",{"_index":241,"title":{},"body":{"changelog.html":{}}}],["579",{"_index":235,"title":{},"body":{"changelog.html":{}}}],["588",{"_index":230,"title":{},"body":{"changelog.html":{}}}],["595",{"_index":226,"title":{},"body":{"changelog.html":{}}}],["6/6",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["63004d2",{"_index":169,"title":{},"body":{"changelog.html":{}}}],["679",{"_index":217,"title":{},"body":{"changelog.html":{}}}],["680",{"_index":196,"title":{},"body":{"changelog.html":{}}}],["681",{"_index":214,"title":{},"body":{"changelog.html":{}}}],["682",{"_index":215,"title":{},"body":{"changelog.html":{}}}],["684",{"_index":208,"title":{},"body":{"changelog.html":{}}}],["701e487",{"_index":201,"title":{},"body":{"changelog.html":{}}}],["70b234c",{"_index":251,"title":{},"body":{"changelog.html":{}}}],["733a9f8",{"_index":218,"title":{},"body":{"changelog.html":{}}}],["769cd5e",{"_index":227,"title":{},"body":{"changelog.html":{}}}],["7fac52b",{"_index":236,"title":{},"body":{"changelog.html":{}}}],["81d1ee4",{"_index":135,"title":{},"body":{"changelog.html":{}}}],["826075f",{"_index":173,"title":{},"body":{"changelog.html":{}}}],["835",{"_index":197,"title":{},"body":{"changelog.html":{}}}],["85f83e1",{"_index":161,"title":{},"body":{"changelog.html":{}}}],["9.0.0",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["912",{"_index":181,"title":{},"body":{"changelog.html":{}}}],["924",{"_index":184,"title":{},"body":{"changelog.html":{}}}],["9776c36",{"_index":174,"title":{},"body":{"changelog.html":{}}}],["9d82481",{"_index":242,"title":{},"body":{"changelog.html":{}}}],["a1f0daf",{"_index":158,"title":{},"body":{"changelog.html":{}}}],["according",{"_index":438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["action",{"_index":70,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["add",{"_index":95,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"miscellaneous/functions.html":{}}}],["addbadgetoreadme",{"_index":317,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addbadgetoreadme(tree",{"_index":368,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adddependencytopackagejson",{"_index":301,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["adddependencytopackagejson(tree",{"_index":379,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adddevdependencytopackagejson",{"_index":303,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["adddevdependencytopackagejson(tree",{"_index":382,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addgithubcijobstep",{"_index":270,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addgithubcijobstep(tree",{"_index":96,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"miscellaneous/functions.html":{}}}],["addhuskyhook",{"_index":274,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addhuskyhook(tree",{"_index":384,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addhuskytopackagejson",{"_index":275,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addhuskytopackagejson(tree",{"_index":387,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addnxnamedinput",{"_index":295,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addnxnamedinput(tree",{"_index":391,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adds",{"_index":373,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addscripttopackagejson",{"_index":305,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addscripttopackagejson(tree",{"_index":396,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addtodefault",{"_index":393,"title":{},"body":{"miscellaneous/functions.html":{}}}],["aliases",{"_index":497,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":107,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["angular",{"_index":155,"title":{},"body":{"changelog.html":{}}}],["aresetsequal",{"_index":332,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["aresetsequal(a",{"_index":398,"title":{},"body":{"miscellaneous/functions.html":{}}}],["args",{"_index":42,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"miscellaneous/functions.html":{}}}],["arguments",{"_index":39,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"miscellaneous/functions.html":{}}}],["array",{"_index":408,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arrow_up",{"_index":133,"title":{},"body":{"changelog.html":{}}}],["art",{"_index":238,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":494,"title":{},"body":{"properties.html":{}}}],["available",{"_index":473,"title":{},"body":{"index.html":{}}}],["b",{"_index":400,"title":{},"body":{"miscellaneous/functions.html":{}}}],["backslash",{"_index":464,"title":{},"body":{"miscellaneous/functions.html":{}}}],["badge",{"_index":315,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["badgeimg",{"_index":369,"title":{},"body":{"miscellaneous/functions.html":{}}}],["badgesregex",{"_index":318,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["basename",{"_index":25,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["basename(whichsync(file",{"_index":52,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["beginning",{"_index":371,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boolean",{"_index":90,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"miscellaneous/functions.html":{}}}],["breaking",{"_index":126,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":147,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":487,"title":{},"body":{"properties.html":{}}}],["builders",{"_index":480,"title":{},"body":{"properties.html":{}}}],["c56a48d",{"_index":209,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":57,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["changelog",{"_index":114,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":127,"title":{},"body":{"changelog.html":{}}}],["check",{"_index":471,"title":{},"body":{"index.html":{}}}],["checks",{"_index":91,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"miscellaneous/functions.html":{}}}],["child_process",{"_index":24,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["chores",{"_index":168,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":84,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ci.getin(['jobs",{"_index":99,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["cifile",{"_index":86,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cli",{"_index":10,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["code",{"_index":240,"title":{},"body":{"changelog.html":{}}}],["command",{"_index":11,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"miscellaneous/functions.html":{}}}],["commit",{"_index":499,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["compares",{"_index":401,"title":{},"body":{"miscellaneous/functions.html":{}}}],["condition",{"_index":75,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["config",{"_index":516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":395,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["console.error(`could",{"_index":101,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["console.error(`step",{"_index":106,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["console.error(error",{"_index":58,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["const",{"_index":50,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{}}}],["constant",{"_index":518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contains",{"_index":467,"title":{},"body":{"index.html":{},"properties.html":{}}}],["content",{"_index":447,"title":{},"body":{"miscellaneous/functions.html":{}}}],["convert",{"_index":462,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copied",{"_index":465,"title":{},"body":{"miscellaneous/functions.html":{}}}],["coverage",{"_index":252,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":407,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creating",{"_index":469,"title":{},"body":{"index.html":{},"properties.html":{}}}],["current",{"_index":423,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cwd",{"_index":15,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["default",{"_index":376,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":152,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["dependency",{"_index":138,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["deps",{"_index":128,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{},"miscellaneous/functions.html":{},"properties.html":{}}}],["dev",{"_index":302,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["devkit",{"_index":166,"title":{},"body":{"changelog.html":{}}}],["directory",{"_index":20,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["documentation",{"_index":253,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["e2fd0a8",{"_index":216,"title":{},"body":{"changelog.html":{}}}],["efb00a0",{"_index":247,"title":{},"body":{"changelog.html":{}}}],["ensure",{"_index":229,"title":{},"body":{"changelog.html":{}}}],["ensurenxproject",{"_index":222,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":405,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":35,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["error(error",{"_index":61,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["exec",{"_index":259,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["exec(file",{"_index":41,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"miscellaneous/functions.html":{}}}],["execfilesync",{"_index":23,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["execfilesync(resolvedfile",{"_index":54,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["execoptions",{"_index":1,"title":{"interfaces/ExecOptions.html":{}},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["execresult",{"_index":33,"title":{"interfaces/ExecResult.html":{}},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["executable",{"_index":37,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"miscellaneous/functions.html":{}}}],["executable.ts",{"_index":267,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["executed",{"_index":21,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["executors",{"_index":481,"title":{},"body":{"properties.html":{}}}],["exists",{"_index":92,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"miscellaneous/functions.html":{}}}],["existsgithubciworkflow",{"_index":271,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["existsgithubciworkflow(tree",{"_index":93,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"miscellaneous/functions.html":{}}}],["export",{"_index":32,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{}}}],["extra",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["faaebcf",{"_index":198,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":378,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fd00a7a",{"_index":154,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":132,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":83,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"miscellaneous/variables.html":{}}}],["find",{"_index":102,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"miscellaneous/variables.html":{}}}],["fix",{"_index":234,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":148,"title":{},"body":{"changelog.html":{}}}],["fixing",{"_index":416,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatworkspacetask",{"_index":326,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["formatworkspacetask(tree",{"_index":413,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fs",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["function",{"_index":40,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{},"coverage.html":{}}}],["functions",{"_index":352,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":115,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":372,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generators",{"_index":483,"title":{},"body":{"properties.html":{}}}],["getgitrepo",{"_index":264,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getgitrepo(tree",{"_index":419,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getgitreposlug",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getgitreposlug(tree",{"_index":425,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getnpmpackageversion",{"_index":281,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnpmpackageversion(packagename",{"_index":427,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gets",{"_index":420,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getset",{"_index":333,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getset(items",{"_index":406,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":112,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["git",{"_index":262,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["git+https://github.com/nx",{"_index":492,"title":{},"body":{"properties.html":{}}}],["github",{"_index":69,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["github/workflows/ci.yml",{"_index":87,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"miscellaneous/variables.html":{}}}],["githubactionjobstep",{"_index":64,"title":{"interfaces/GitHubActionJobStep.html":{}},"body":{"interfaces/GitHubActionJobStep.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gitmakeexecutable",{"_index":268,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gitmakeexecutable(tree",{"_index":430,"title":{},"body":{"miscellaneous/functions.html":{}}}],["given",{"_index":38,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"miscellaneous/functions.html":{}}}],["homepage",{"_index":484,"title":{},"body":{"properties.html":{}}}],["hook",{"_index":385,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hooks",{"_index":500,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["https://github.com/nx",{"_index":485,"title":{},"body":{"properties.html":{}}}],["husky",{"_index":130,"title":{},"body":{"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["huskyhooks",{"_index":386,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["huskypath",{"_index":277,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":254,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{}}}],["include",{"_index":139,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":409,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{}}}],["init",{"_index":249,"title":{},"body":{"changelog.html":{}}}],["initial",{"_index":244,"title":{},"body":{"changelog.html":{}}}],["input",{"_index":394,"title":{},"body":{"miscellaneous/functions.html":{}}}],["input.ts",{"_index":294,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["inputs",{"_index":195,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":459,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["install.ts",{"_index":285,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["installhuskytask",{"_index":276,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["installhuskytask(tree",{"_index":388,"title":{},"body":{"miscellaneous/functions.html":{}}}],["installs",{"_index":390,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instanceof",{"_index":59,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{}},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{},"overview.html":{}}}],["issues",{"_index":417,"title":{},"body":{"miscellaneous/functions.html":{}}}],["item",{"_index":410,"title":{},"body":{"miscellaneous/functions.html":{}}}],["item.get('name",{"_index":104,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["items",{"_index":411,"title":{},"body":{"miscellaneous/functions.html":{}}}],["job",{"_index":71,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"miscellaneous/functions.html":{}}}],["jobsteps",{"_index":98,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["jobsteps.add(step",{"_index":109,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["jobsteps.items.some((item",{"_index":103,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["join",{"_index":433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["joinnormalize",{"_index":29,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["joinnormalize(...(array.isarray(options.cwd",{"_index":48,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["joinnormalize(...paths",{"_index":432,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jscutlery/semver",{"_index":117,"title":{},"body":{"changelog.html":{}}}],["json.ts",{"_index":300,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["json/add",{"_index":299,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["json/package",{"_index":306,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["jsonschemafornpmpackagejsonfiles",{"_index":448,"title":{},"body":{"miscellaneous/functions.html":{}}}],["key",{"_index":88,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["keywords",{"_index":479,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":428,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library",{"_index":239,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":489,"title":{},"body":{"properties.html":{}}}],["link",{"_index":370,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lint",{"_index":442,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lintworkspacetask",{"_index":328,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["lintworkspacetask(tree",{"_index":441,"title":{},"body":{"miscellaneous/functions.html":{}}}],["literal",{"_index":76,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["main",{"_index":512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["major",{"_index":151,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":228,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["makes",{"_index":431,"title":{},"body":{"miscellaneous/functions.html":{}}}],["manager",{"_index":284,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mappings",{"_index":522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["markdown",{"_index":510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":63,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["memo",{"_index":233,"title":{},"body":{"changelog.html":{}}}],["migrate",{"_index":193,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":167,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":490,"title":{},"body":{"properties.html":{}}}],["model",{"_index":68,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["module",{"_index":521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":476,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monorepo",{"_index":175,"title":{},"body":{"changelog.html":{}}}],["move",{"_index":205,"title":{},"body":{"changelog.html":{}}}],["msg",{"_index":502,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["name",{"_index":73,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":194,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":60,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"coverage.html":{}}}],["newnamedinputs",{"_index":392,"title":{},"body":{"miscellaneous/functions.html":{}}}],["non",{"_index":150,"title":{},"body":{"changelog.html":{}}}],["nooptask",{"_index":330,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalize",{"_index":435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalize.ts",{"_index":311,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalizedcwd",{"_index":44,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["npm",{"_index":279,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["null",{"_index":47,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":89,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["nx",{"_index":140,"title":{},"body":{"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["nx.json",{"_index":515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nx/devkit",{"_index":78,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"dependencies.html":{}}}],["nx/plugin",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["nx/webpack",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["nxconfigfile",{"_index":297,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["operation",{"_index":444,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":14,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":8,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"miscellaneous/functions.html":{}}}],["options.cwd",{"_index":49,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["options?.cwd",{"_index":46,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["output",{"_index":34,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["overview",{"_index":477,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":212,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["package.json",{"_index":381,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packagejson",{"_index":450,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packagejsonfile",{"_index":309,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packagename",{"_index":380,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":375,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsedcommandline",{"_index":455,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parsedocument",{"_index":79,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["parsedocument(tree.read(cifile)?.tostring",{"_index":97,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["parses",{"_index":446,"title":{},"body":{"miscellaneous/functions.html":{}}}],["path",{"_index":26,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["paths",{"_index":440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["peer",{"_index":137,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["performs",{"_index":443,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plugin/run",{"_index":283,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["plugin/typescript.ts",{"_index":287,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["plugins",{"_index":470,"title":{},"body":{"index.html":{},"properties.html":{}}}],["pre",{"_index":501,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["present",{"_index":108,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["prettier",{"_index":348,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["previous",{"_index":224,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":207,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":415,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":13,"title":{"properties.html":{}},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{},"properties.html":{}}}],["radash",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["raised",{"_index":36,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["readme",{"_index":374,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["readme.md",{"_index":517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readme.ts",{"_index":316,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["readmefile",{"_index":321,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["readonlyarray",{"_index":43,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"miscellaneous/functions.html":{}}}],["readpackagejson",{"_index":307,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readpackagejson(tree",{"_index":445,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reads",{"_index":453,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readtsconfig",{"_index":288,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readtsconfig(tsconfigpath",{"_index":452,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readtsconfiguration",{"_index":289,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readtsconfiguration(tsconfigpath",{"_index":456,"title":{},"body":{"miscellaneous/functions.html":{}}}],["regex",{"_index":508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["release",{"_index":245,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":421,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repo",{"_index":424,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repo.ts",{"_index":263,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["repository",{"_index":491,"title":{},"body":{"properties.html":{}}}],["rescope",{"_index":213,"title":{},"body":{"changelog.html":{}}}],["resolvedfile",{"_index":51,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["result",{"_index":30,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["result.tostring",{"_index":56,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["resulting",{"_index":436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["results",{"_index":62,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":55,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{}}}],["returns",{"_index":383,"title":{},"body":{"miscellaneous/functions.html":{}}}],["root",{"_index":397,"title":{},"body":{"miscellaneous/functions.html":{}}}],["run",{"_index":9,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{},"miscellaneous/functions.html":{}}}],["running",{"_index":31,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["runpackagemanagerinstall",{"_index":286,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["runpackagemanagerinstall(path",{"_index":458,"title":{},"body":{"miscellaneous/functions.html":{}}}],["runs",{"_index":414,"title":{},"body":{"miscellaneous/functions.html":{}}}],["s",{"_index":511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["s*(\\[!\\[.+\\]\\(.+\\)\\]\\(.+\\)\\s",{"_index":507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["safely",{"_index":457,"title":{},"body":{"miscellaneous/functions.html":{}}}],["samuelfernandez",{"_index":495,"title":{},"body":{"properties.html":{}}}],["save",{"_index":475,"title":{},"body":{"index.html":{}}}],["saved",{"_index":514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schematics",{"_index":482,"title":{},"body":{"properties.html":{}}}],["script",{"_index":304,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["security",{"_index":520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["security.md",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["securityfile",{"_index":323,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":472,"title":{},"body":{"index.html":{}}}],["set",{"_index":399,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["sets",{"_index":403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setup",{"_index":474,"title":{},"body":{"index.html":{}}}],["signature",{"_index":225,"title":{},"body":{"changelog.html":{}}}],["slash",{"_index":313,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["slash(path",{"_index":461,"title":{},"body":{"miscellaneous/functions.html":{}}}],["slashes",{"_index":437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["slug",{"_index":426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{}}}],["sparkles",{"_index":192,"title":{},"body":{"changelog.html":{}}}],["squeezer/devkit",{"_index":466,"title":{},"body":{"index.html":{}}}],["squeezer/squeezer.git",{"_index":493,"title":{},"body":{"properties.html":{}}}],["squeezer/squeezer/issues",{"_index":488,"title":{},"body":{"properties.html":{}}}],["squeezer/squeezer/tree/main/packages/devkit",{"_index":486,"title":{},"body":{"properties.html":{}}}],["src/.../add",{"_index":353,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../exec.ts",{"_index":357,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../format",{"_index":358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../get",{"_index":359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../git",{"_index":360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../github",{"_index":354,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../husky.ts",{"_index":355,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../join",{"_index":361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../lint",{"_index":362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../noop",{"_index":363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../nx.ts",{"_index":504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../package",{"_index":364,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../readme.ts",{"_index":505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../run",{"_index":366,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../security.ts",{"_index":506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../set.ts",{"_index":356,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../slash.ts",{"_index":367,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../typescript.ts",{"_index":365,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/exec/exec.ts",{"_index":6,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/git/get",{"_index":261,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/git/git",{"_index":266,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/github",{"_index":65,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/husky/husky.ts",{"_index":273,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/npm/get",{"_index":278,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/nx",{"_index":282,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/nx/add",{"_index":293,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/nx/nx.ts",{"_index":296,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/package",{"_index":298,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/path/join",{"_index":310,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/path/slash.ts",{"_index":312,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/readme/add",{"_index":314,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/readme/readme.ts",{"_index":320,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/security/security.ts",{"_index":322,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tasks/format",{"_index":324,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/tasks/lint",{"_index":327,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/tasks/noop",{"_index":329,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/set.ts",{"_index":331,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":113,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["statements",{"_index":255,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":72,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"miscellaneous/functions.html":{}}}],["step.name",{"_index":105,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["steps",{"_index":100,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["stringify",{"_index":80,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["stringify(ci",{"_index":111,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["sync",{"_index":27,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["system",{"_index":439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["tada",{"_index":248,"title":{},"body":{"changelog.html":{}}}],["task",{"_index":389,"title":{},"body":{"miscellaneous/functions.html":{}}}],["task.ts",{"_index":325,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["title",{"_index":513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["titleregex",{"_index":319,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tmpprojpath",{"_index":460,"title":{},"body":{"miscellaneous/functions.html":{}}}],["together",{"_index":434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tree",{"_index":77,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"miscellaneous/functions.html":{}}}],["tree.exists(cifile",{"_index":94,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["tree.write(cifile",{"_index":110,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["try",{"_index":53,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["tsconfig",{"_index":290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tsconfigpath",{"_index":454,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tsmodule",{"_index":291,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tspathmappings",{"_index":292,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":402,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":18,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":496,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":350,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":45,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{},"interfaces/GitHubActionJobStep.html":{},"miscellaneous/functions.html":{}}}],["update",{"_index":149,"title":{},"body":{"changelog.html":{}}}],["updates",{"_index":451,"title":{},"body":{"miscellaneous/functions.html":{}}}],["upgrade",{"_index":129,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":422,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uses",{"_index":74,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["using",{"_index":116,"title":{},"body":{"changelog.html":{}}}],["usual",{"_index":498,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":468,"title":{},"body":{"index.html":{},"properties.html":{}}}],["utils",{"_index":206,"title":{},"body":{"changelog.html":{}}}],["v17",{"_index":141,"title":{},"body":{"changelog.html":{}}}],["v17.2.0",{"_index":159,"title":{},"body":{"changelog.html":{}}}],["v18",{"_index":142,"title":{},"body":{"changelog.html":{}}}],["v4",{"_index":183,"title":{},"body":{"changelog.html":{}}}],["v9",{"_index":131,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":377,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":503,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":429,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["version.ts",{"_index":280,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["void",{"_index":418,"title":{},"body":{"miscellaneous/functions.html":{}}}],["whether",{"_index":404,"title":{},"body":{"miscellaneous/functions.html":{}}}],["whichsync",{"_index":28,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["widen",{"_index":136,"title":{},"body":{"changelog.html":{}}}],["windows",{"_index":463,"title":{},"body":{"miscellaneous/functions.html":{}}}],["work",{"_index":223,"title":{},"body":{"changelog.html":{}}}],["workflow",{"_index":85,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["workflow.ts",{"_index":67,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["workflow/github",{"_index":66,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["working",{"_index":19,"title":{},"body":{"interfaces/ExecOptions.html":{},"interfaces/ExecResult.html":{}}}],["workspace",{"_index":191,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["writepackagejson",{"_index":308,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["writepackagejson(tree",{"_index":449,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yaml",{"_index":82,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{},"dependencies.html":{}}}],["yamlseq",{"_index":81,"title":{},"body":{"interfaces/GitHubActionJobStep.html":{}}}],["yes",{"_index":412,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ExecOptions.html":{"url":"interfaces/ExecOptions.html","title":"interface - ExecOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExecOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exec/exec.ts\n        \n\n\n            \n                Description\n            \n            \n                Options to run a cli command.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cwd\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cwd\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cwd:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Working directory for the command that is executed.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { execFileSync } from 'child_process';\nimport { basename } from 'path';\n\nimport { sync as whichSync } from 'which';\n\nimport { joinNormalize } from '../path';\n\n/**\n * Result of running a cli command.\n */\nexport interface ExecResult {\n  /**\n   * Output.\n   */\n  output: string;\n\n  /**\n   * Error if raised.\n   */\n  error?: Error;\n}\n\n/**\n *Options to run a cli command.\n */\nexport interface ExecOptions {\n  /**\n   * Working directory for the command that is executed.\n   */\n  cwd?: string | string[];\n}\n\n/**\n * Run an executable file with given arguments.\n */\nexport function exec(file: string, args: ReadonlyArray, options?: ExecOptions): ExecResult {\n  let normalizedCwd: string | undefined;\n  if (options?.cwd != null) {\n    normalizedCwd = joinNormalize(...(Array.isArray(options.cwd) ? options.cwd : [options.cwd]));\n  }\n\n  const resolvedFile = basename(whichSync(file));\n\n  try {\n    const result = execFileSync(resolvedFile, args, { cwd: normalizedCwd });\n    return { output: result.toString() };\n  } catch (error) {\n    console.error(error);\n    return { output: '', error: error instanceof Error ? error : new Error(error as string) };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExecResult.html":{"url":"interfaces/ExecResult.html","title":"interface - ExecResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExecResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exec/exec.ts\n        \n\n\n            \n                Description\n            \n            \n                Result of running a cli command.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            output\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     Error\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Error\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Error if raised.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Output.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { execFileSync } from 'child_process';\nimport { basename } from 'path';\n\nimport { sync as whichSync } from 'which';\n\nimport { joinNormalize } from '../path';\n\n/**\n * Result of running a cli command.\n */\nexport interface ExecResult {\n  /**\n   * Output.\n   */\n  output: string;\n\n  /**\n   * Error if raised.\n   */\n  error?: Error;\n}\n\n/**\n *Options to run a cli command.\n */\nexport interface ExecOptions {\n  /**\n   * Working directory for the command that is executed.\n   */\n  cwd?: string | string[];\n}\n\n/**\n * Run an executable file with given arguments.\n */\nexport function exec(file: string, args: ReadonlyArray, options?: ExecOptions): ExecResult {\n  let normalizedCwd: string | undefined;\n  if (options?.cwd != null) {\n    normalizedCwd = joinNormalize(...(Array.isArray(options.cwd) ? options.cwd : [options.cwd]));\n  }\n\n  const resolvedFile = basename(whichSync(file));\n\n  try {\n    const result = execFileSync(resolvedFile, args, { cwd: normalizedCwd });\n    return { output: result.toString() };\n  } catch (error) {\n    console.error(error);\n    return { output: '', error: error instanceof Error ? error : new Error(error as string) };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitHubActionJobStep.html":{"url":"interfaces/GitHubActionJobStep.html","title":"interface - GitHubActionJobStep","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitHubActionJobStep\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github-workflow/github-workflow.ts\n        \n\n\n            \n                Description\n            \n            \n                Model of a GitHub action job step.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            if\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            run\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uses\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            with\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        if\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        if:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If condition\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        run\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        run:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Run\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uses:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Uses\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        with\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        with:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    With\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Tree } from '@nx/devkit';\nimport { parseDocument, stringify, YAMLSeq } from 'yaml';\n\n/** Filename of CI GitHub workflow file */\nexport const ciFile = './.github/workflows/ci.yml';\n\n/**\n * Model of a GitHub action job step.\n */\nexport interface GitHubActionJobStep {\n  /** Name */\n  name: string;\n\n  /** Uses */\n  uses?: string;\n\n  /** If condition */\n  if?: string;\n\n  /** With */\n  with?: { [key: string]: string | number | boolean };\n\n  /** Run */\n  run?: string;\n}\n\n/**\n * Checks if the CI workflow file exists in the tree.\n */\nexport function existsGitHubCiWorkflow(tree: Tree): boolean {\n  return tree.exists(ciFile);\n}\n\n/**\n * Add a job step in the CI workflow file.\n */\nexport function addGitHubCiJobStep(tree: Tree, job: string, step: GitHubActionJobStep) {\n  const ci = parseDocument(tree.read(ciFile)?.toString() ?? '');\n  const jobSteps: YAMLSeq | undefined = ci.getIn(['jobs', job, 'steps']) as any;\n\n  if (jobSteps == null) {\n    console.error(`Could not find \"${job}\" job in file: ${ciFile}`);\n    return;\n  }\n\n  if (jobSteps.items.some((item: any) => item.get('name') === step.name)) {\n    console.error(`Step \"${step.name}\" in \"${job}\" already present in file: ${ciFile}`);\n    return;\n  }\n\n  jobSteps.add(step);\n\n  tree.write(ciFile, stringify(ci));\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nThis file was generated using @jscutlery/semver.\n3.0.3 (2024-02-07)\n3.0.2 (2024-02-07)\n3.0.1 (2024-02-06)\n3.0.0 (2024-02-06)\n⚠ BREAKING CHANGES\n\ndeps: Upgrade to husky v9\n\nFeatures\n\ndeps: :arrow_up: upgrade husky to v9 (#1191) (81d1ee4)\nwiden peer dependency to include Nx v17 and v18 (#1190) (4b148a1)\n\n2.0.2 (2024-02-02)\n2.0.1 (2024-02-02)\nBug Fixes\n\ndeps: :arrow_up: update all non-major dependencies (#1097) (fd00a7a)\ndeps: upgrade Angular to 17.1.0 (#1172) (a1f0daf)\nupgrade nx to v17.2.0 (#1099) (85f83e1)\n\n2.0.0 (2023-12-08)\n⚠ BREAKING CHANGES\n\ndevkit: Upgrade to Nx v17\n\nMiscellaneous Chores\n\ndevkit: upgrade Nx to v17 (63004d2)\n\n1.2.5 (2023-12-08)\n1.2.4 (2023-12-03)\nBug Fixes\n\ndeps: :arrow_up: update all non-major dependencies (826075f)\ndeps: :arrow_up: update all non-major dependencies (9776c36)\ndeps: ⬆️ update nx monorepo to v17 (major) (#1013) (009816c)\n\n1.2.3 (2023-09-01)\nBug Fixes\n\ndeps: :arrow_up: update all non-major dependencies (#912) (1983221)\ndeps: :arrow_up: update dependency which to v4 (#924) (4745b8c)\n\n1.2.2 (2023-08-14)\n1.2.1 (2023-08-14)\n1.2.0 (2023-07-25)\nFeatures\n\nworkspace: :sparkles: migrate to named inputs (#680) (#835) (faaebcf)\n\n1.1.1 (2023-07-07)\nBug Fixes\n\ndeps: :arrow_up: update all non-major dependencies (1948e5b)\ndeps: :arrow_up: update all non-major dependencies (701e487)\n\n1.1.0 (2023-05-17)\nFeatures\n\ndevkit: :sparkles: move github workflow utils from workspace to devkit project (#684) (c56a48d)\n\n1.0.0 (2023-05-16)\n⚠ BREAKING CHANGES\n\ndeps: Upgrade to Angular and Nx 16\n\nFeatures\n\n:package: rescope to @nx (#681) (#682) (e2fd0a8)\ndeps: :arrow_up: update monorepo to Angular and Nx 16 (#679) (733a9f8)\n\n0.3.1 (2023-04-17)\n0.3.0 (2023-04-17)\nFeatures\n\ndevkit: :sparkles: ensureNxProject would work with previous signature (#595) (769cd5e)\ndevkit: :sparkles: make ensure nx project work with project name (#588) (077b1b8)\n\n0.2.1 (2023-04-05)\nBug Fixes\n\ndevkit: :memo: fix dependencies (#579) (7fac52b)\n\n0.2.0 (2023-04-05)\nFeatures\n\n:art: move library code from workspace into devkit (#577) (9d82481)\n\n0.1.0 (2023-04-05)\nFeatures\n\ndevkit: :sparkles: initial release (#576) (efb00a0)\ndevkit: :tada: init devkit library (#574) (70b234c)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/exec/exec.ts\n            \n            interface\n            ExecOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/exec/exec.ts\n            \n            interface\n            ExecResult\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/exec/exec.ts\n            \n            function\n            exec\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/git/get-git-repo.ts\n            \n            function\n            getGitRepo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/git/get-git-repo.ts\n            \n            function\n            getGitRepoSlug\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/git/git-make-executable.ts\n            \n            function\n            gitMakeExecutable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/github-workflow/github-workflow.ts\n            \n            interface\n            GitHubActionJobStep\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/github-workflow/github-workflow.ts\n            \n            function\n            addGitHubCiJobStep\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/github-workflow/github-workflow.ts\n            \n            function\n            existsGitHubCiWorkflow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/github-workflow/github-workflow.ts\n            \n            variable\n            ciFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/husky/husky.ts\n            \n            function\n            addHuskyHook\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/husky/husky.ts\n            \n            function\n            addHuskyToPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/husky/husky.ts\n            \n            function\n            installHuskyTask\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/husky/husky.ts\n            \n            variable\n            husky\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/husky/husky.ts\n            \n            variable\n            huskyPath\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/npm/get-npm-package-version.ts\n            \n            function\n            getNpmPackageVersion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/nx-plugin/run-package-manager-install.ts\n            \n            function\n            runPackageManagerInstall\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/nx-plugin/typescript.ts\n            \n            function\n            readTsConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/nx-plugin/typescript.ts\n            \n            function\n            readTsConfiguration\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/nx-plugin/typescript.ts\n            \n            variable\n            tsConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/nx-plugin/typescript.ts\n            \n            variable\n            tsModule\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/nx-plugin/typescript.ts\n            \n            variable\n            tsPathMappings\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/nx/add-nx-named-input.ts\n            \n            function\n            addNxNamedInput\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/nx/nx.ts\n            \n            variable\n            nxConfigFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/package-json/add-dependency-to-package-json.ts\n            \n            function\n            addDependencyToPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/package-json/add-dev-dependency-to-package-json.ts\n            \n            function\n            addDevDependencyToPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/package-json/add-script-to-package-json.ts\n            \n            function\n            addScriptToPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/package-json/package-json.ts\n            \n            function\n            readPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/package-json/package-json.ts\n            \n            function\n            writePackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/package-json/package-json.ts\n            \n            variable\n            packageJsonFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/path/join-normalize.ts\n            \n            function\n            joinNormalize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/path/slash.ts\n            \n            function\n            slash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/readme/add-badge-to-readme.ts\n            \n            function\n            addBadgeToReadme\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/readme/add-badge-to-readme.ts\n            \n            variable\n            badgesRegex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/readme/add-badge-to-readme.ts\n            \n            variable\n            titleRegex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/readme/readme.ts\n            \n            variable\n            readmeFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/security/security.ts\n            \n            variable\n            securityFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tasks/format-workspace-task.ts\n            \n            function\n            formatWorkspaceTask\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tasks/lint-workspace-task.ts\n            \n            function\n            lintWorkspaceTask\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tasks/noop-task.ts\n            \n            function\n            noopTask\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/set.ts\n            \n            function\n            areSetsEqual\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/set.ts\n            \n            function\n            getSet\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            fs-extra : ^11.2.0\n        \n            which : ^4.0.0\n        \n            yaml : ^2.3.4\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @nx/devkit : ^17.0.0 || ^18.0.0\n        \n            @nx/plugin : ^17.0.0 || ^18.0.0\n        \n            @nx/webpack : ^17.0.0 || ^18.0.0\n        \n            husky : ^9.0.0\n        \n            nx : ^17.0.0 || ^18.0.0\n        \n            radash : ^11.0.0\n        \n            prettier : ^2.8.0\n        \n            typescript : ^5.2.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addBadgeToReadme   (src/.../add-badge-to-readme.ts)\n                        \n                        \n                            addDependencyToPackageJson   (src/.../add-dependency-to-package-json.ts)\n                        \n                        \n                            addDevDependencyToPackageJson   (src/.../add-dev-dependency-to-package-json.ts)\n                        \n                        \n                            addGitHubCiJobStep   (src/.../github-workflow.ts)\n                        \n                        \n                            addHuskyHook   (src/.../husky.ts)\n                        \n                        \n                            addHuskyToPackageJson   (src/.../husky.ts)\n                        \n                        \n                            addNxNamedInput   (src/.../add-nx-named-input.ts)\n                        \n                        \n                            addScriptToPackageJson   (src/.../add-script-to-package-json.ts)\n                        \n                        \n                            areSetsEqual   (src/.../set.ts)\n                        \n                        \n                            exec   (src/.../exec.ts)\n                        \n                        \n                            existsGitHubCiWorkflow   (src/.../github-workflow.ts)\n                        \n                        \n                            formatWorkspaceTask   (src/.../format-workspace-task.ts)\n                        \n                        \n                            getGitRepo   (src/.../get-git-repo.ts)\n                        \n                        \n                            getGitRepoSlug   (src/.../get-git-repo.ts)\n                        \n                        \n                            getNpmPackageVersion   (src/.../get-npm-package-version.ts)\n                        \n                        \n                            getSet   (src/.../set.ts)\n                        \n                        \n                            gitMakeExecutable   (src/.../git-make-executable.ts)\n                        \n                        \n                            installHuskyTask   (src/.../husky.ts)\n                        \n                        \n                            joinNormalize   (src/.../join-normalize.ts)\n                        \n                        \n                            lintWorkspaceTask   (src/.../lint-workspace-task.ts)\n                        \n                        \n                            noopTask   (src/.../noop-task.ts)\n                        \n                        \n                            readPackageJson   (src/.../package-json.ts)\n                        \n                        \n                            readTsConfig   (src/.../typescript.ts)\n                        \n                        \n                            readTsConfiguration   (src/.../typescript.ts)\n                        \n                        \n                            runPackageManagerInstall   (src/.../run-package-manager-install.ts)\n                        \n                        \n                            slash   (src/.../slash.ts)\n                        \n                        \n                            writePackageJson   (src/.../package-json.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/readme/add-badge-to-readme.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addBadgeToReadme\n                        \n                    \n                \n            \n            \n                \naddBadgeToReadme(tree: Tree, badgeImg: string, link, description: string, beginning)\n                \n            \n\n\n\n\n            \n                \n                    Generator that adds a badge to the readme file.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    badgeImg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    link\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    beginning\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/package-json/add-dependency-to-package-json.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addDependencyToPackageJson\n                        \n                    \n                \n            \n            \n                \naddDependencyToPackageJson(tree: Tree, packageName: string)\n                \n            \n\n\n\n\n            \n                \n                    Generator that adds a dependency to package.json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    packageName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/package-json/add-dev-dependency-to-package-json.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addDevDependencyToPackageJson\n                        \n                    \n                \n            \n            \n                \naddDevDependencyToPackageJson(tree: Tree, packageName: string)\n                \n            \n\n\n\n\n            \n                \n                    Generator that adds a dev dependency to package.json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    packageName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/github-workflow/github-workflow.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addGitHubCiJobStep\n                        \n                    \n                \n            \n            \n                \naddGitHubCiJobStep(tree: Tree, job: string, step: GitHubActionJobStep)\n                \n            \n\n\n\n\n            \n                \n                    Add a job step in the CI workflow file.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    step\n                                    \n                                                GitHubActionJobStep\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        existsGitHubCiWorkflow\n                        \n                    \n                \n            \n            \n                \nexistsGitHubCiWorkflow(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Checks if the CI workflow file exists in the tree.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/husky/husky.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addHuskyHook\n                        \n                    \n                \n            \n            \n                \naddHuskyHook(tree: Tree, hook: HuskyHooks, command: string)\n                \n            \n\n\n\n\n            \n                \n                    Generator that adds a husky hook.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hook\n                                    \n                                                HuskyHooks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    command\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addHuskyToPackageJson\n                        \n                    \n                \n            \n            \n                \naddHuskyToPackageJson(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Generator that adds Husky to package.json\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        installHuskyTask\n                        \n                    \n                \n            \n            \n                \ninstallHuskyTask(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Task that installs husky.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/nx/add-nx-named-input.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addNxNamedInput\n                        \n                    \n                \n            \n            \n                \naddNxNamedInput(tree: Tree, newNamedInputs, addToDefault)\n                \n            \n\n\n\n\n            \n                \n                    Generator that adds a named input to Nx configuration.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    newNamedInputs\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    addToDefault\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/package-json/add-script-to-package-json.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addScriptToPackageJson\n                        \n                    \n                \n            \n            \n                \naddScriptToPackageJson(tree: Tree, name: string, script: string)\n                \n            \n\n\n\n\n            \n                \n                    Generator that adds a script to root package.json file.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    script\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/utils/set.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        areSetsEqual\n                        \n                    \n                \n            \n            \n                \nareSetsEqual(a: Set, b: Set)\n                \n            \n\n\n\n\n            \n                \n                    Compares two sets and checks whether they are equal.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSet\n                        \n                    \n                \n            \n            \n                \ngetSet(items)\n                \n            \n\n\n\n\n            \n                \n                    Creates a set given an array or an individual item.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Set\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/exec/exec.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        exec\n                        \n                    \n                \n            \n            \n                \nexec(file: string, args: ReadonlyArray, options?: ExecOptions)\n                \n            \n\n\n\n\n            \n                \n                    Run an executable file with given arguments.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            ReadonlyArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ExecOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ExecResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/tasks/format-workspace-task.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatWorkspaceTask\n                        \n                    \n                \n            \n            \n                \nformatWorkspaceTask(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Task that runs prettier in a workspace for all projects fixing the issues.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/git/get-git-repo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getGitRepo\n                        \n                    \n                \n            \n            \n                \ngetGitRepo(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Gets the remote url for current git repo.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGitRepoSlug\n                        \n                    \n                \n            \n            \n                \ngetGitRepoSlug(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Gets the repo slug for the current git repo.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/npm/get-npm-package-version.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getNpmPackageVersion\n                        \n                    \n                \n            \n            \n                \ngetNpmPackageVersion(packageName: string)\n                \n            \n\n\n\n\n            \n                \n                    Returns the latest version of a given npm package.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    packageName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/git/git-make-executable.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gitMakeExecutable\n                        \n                    \n                \n            \n            \n                \ngitMakeExecutable(tree: Tree, file: string)\n                \n            \n\n\n\n\n            \n                \n                    Task that makes a file executable in the git index.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/path/join-normalize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        joinNormalize\n                        \n                    \n                \n            \n            \n                \njoinNormalize(...paths: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Join all arguments together and normalize the resulting path with slashes according to the file system.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/tasks/lint-workspace-task.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lintWorkspaceTask\n                        \n                    \n                \n            \n            \n                \nlintWorkspaceTask(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Task that runs the lint task in a workspace for all projects fixing the issues.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/tasks/noop-task.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        noopTask\n                        \n                    \n                \n            \n            \n                \nnoopTask()\n                \n            \n\n\n\n\n            \n                \n                    Task that performs no operation.\n\n\n                \n            \n        \n    \n    src/package-json/package-json.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        readPackageJson\n                        \n                    \n                \n            \n            \n                \nreadPackageJson(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Gets and parses the content of root package.json content from a generator tree.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     JSONSchemaForNPMPackageJsonFiles\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writePackageJson\n                        \n                    \n                \n            \n            \n                \nwritePackageJson(tree: Tree, packageJson: JSONSchemaForNPMPackageJsonFiles)\n                \n            \n\n\n\n\n            \n                \n                    Updates package.json content from a generator tree.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    packageJson\n                                    \n                                            JSONSchemaForNPMPackageJsonFiles\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/nx-plugin/typescript.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        readTsConfig\n                        \n                    \n                \n            \n            \n                \nreadTsConfig(tsConfigPath: string)\n                \n            \n\n\n\n\n            \n                \n                    Reads the TypeScript configuration.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tsConfigPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ParsedCommandLine\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readTsConfiguration\n                        \n                    \n                \n            \n            \n                \nreadTsConfiguration(tsConfigPath: string)\n                \n            \n\n\n\n\n            \n                \n                    Reads the TypeScript configuration safely.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tsConfigPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ParsedCommandLine\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/nx-plugin/run-package-manager-install.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        runPackageManagerInstall\n                        \n                    \n                \n            \n            \n                \nrunPackageManagerInstall(path)\n                \n            \n\n\n\n\n            \n                \n                    Runs command to install dependencies.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        tmpProjPath()\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/path/slash.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        slash\n                        \n                    \n                \n            \n            \n                \nslash(path: string)\n                \n            \n\n\n\n\n            \n                \n                    Convert Windows backslash paths to slash paths. Copied from GitHub.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@nx-squeezer/devkit \n     \nThis package contains a set of utilities for creating Nx plugins, check the documentation to see all available features.\nSetup \nnpm install --save-dev @nx-squeezer/devkit\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.0.3\n        \n            Description : This package contains a set of utilities for creating Nx plugins\n        \n            Keywords : nx, builders, executors, schematics, generators\n        \n            Homepage : https://github.com/nx-squeezer/squeezer/tree/main/packages/devkit\n        \n            Bugs : https://github.com/nx-squeezer/squeezer/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/nx-squeezer/squeezer.git\n        \n            Author : samuelfernandez\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HuskyHooks   (src/.../husky.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/husky/husky.ts\n    \n    \n        \n            \n                \n                    \n                    HuskyHooks\n                \n            \n            \n                \n                    Usual commit hooks.\n\n                \n            \n            \n                \n                        \"pre-commit\" | \"commit-msg\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            badgesRegex   (src/.../add-badge-to-readme.ts)\n                        \n                        \n                            ciFile   (src/.../github-workflow.ts)\n                        \n                        \n                            husky   (src/.../husky.ts)\n                        \n                        \n                            huskyPath   (src/.../husky.ts)\n                        \n                        \n                            nxConfigFile   (src/.../nx.ts)\n                        \n                        \n                            packageJsonFile   (src/.../package-json.ts)\n                        \n                        \n                            readmeFile   (src/.../readme.ts)\n                        \n                        \n                            securityFile   (src/.../security.ts)\n                        \n                        \n                            titleRegex   (src/.../add-badge-to-readme.ts)\n                        \n                        \n                            tsConfig   (src/.../typescript.ts)\n                        \n                        \n                            tsModule   (src/.../typescript.ts)\n                        \n                        \n                            tsPathMappings   (src/.../typescript.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/readme/add-badge-to-readme.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        badgesRegex\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /^\\s*(\\[!\\[.+\\]\\(.+\\)\\]\\(.+\\)\\s*)+/\n                    \n                \n\n            \n                \n                    Regex to find an image in a markdown file.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titleRegex\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /^#\\s+/\n                    \n                \n\n            \n                \n                    Regex to get the main title in a markdown file.\n\n                \n            \n\n        \n    \n\n    src/github-workflow/github-workflow.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ciFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : './.github/workflows/ci.yml'\n                    \n                \n\n            \n                \n                    Filename of CI GitHub workflow file\n\n                \n            \n\n        \n    \n\n    src/husky/husky.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        husky\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'husky'\n                    \n                \n\n            \n                \n                    Husky package name.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        huskyPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.husky'\n                    \n                \n\n            \n                \n                    Path where husky hooks are saved.\n\n                \n            \n\n        \n    \n\n    src/nx/nx.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nxConfigFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'nx.json'\n                    \n                \n\n            \n                \n                    Filename of Nx config.\n\n                \n            \n\n        \n    \n\n    src/package-json/package-json.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        packageJsonFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'package.json'\n                    \n                \n\n            \n                \n                    Filename of package.json\n\n                \n            \n\n        \n    \n\n    src/readme/readme.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        readmeFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'README.md'\n                    \n                \n\n            \n                \n                    Constant with the usual GitHub readme filename.\n\n                \n            \n\n        \n    \n\n    src/security/security.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        securityFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SECURITY.md'\n                    \n                \n\n            \n                \n                    Constant with the usual GitHub security filename.\n\n                \n            \n\n        \n    \n\n    src/nx-plugin/typescript.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ParsedCommandLine\n\n                    \n                \n\n            \n                \n                    TypeScript configuration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tsModule\n                        \n                    \n                \n            \n\n            \n                \n                    TypeScript module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tsPathMappings\n                        \n                    \n                \n            \n\n            \n                \n                    TypeScript path mappings.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
