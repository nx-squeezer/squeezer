var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Codecov.html",[0,0.358,1,0.686]],["body/interfaces/Codecov.html",[0,0.371,1,1.28,2,0.679,3,0.805,4,0.805,5,0.699,6,0.805,7,0.679,8,1.466,9,0.699,10,0.851,11,1.886,12,2.624,13,1.398,14,3.366,15,3.945,16,0.945,17,0.069,18,1.702,19,1.399,20,2.951,21,2.697,22,1.399,23,1.145,24,1.399,25,1.399,26,0.956,27,1.399,28,0.393,29,0.956,30,1.433,31,2.025,32,2.913,33,1.702,34,1.424,35,1.145,36,1.424,37,1.886,38,2.016,39,1.587,40,1.757,41,2.259,42,1.433,43,2.039,44,1.706,45,2.039,46,1.886,47,1.399,48,0.956,49,1.706,50,0.805,51,1.702,52,2.039,53,1.706,54,2.039,55,1.399,56,2.039,57,1.702,58,1.308,59,2.084,60,1.399,61,1.399,62,2.49,63,1.424,64,1.424,65,1.145,66,1.145,67,1.706,68,1.424,69,1.145,70,1.145,71,2.624,72,2.039,73,3.094,74,2.084,75,1.706,76,1.145,77,1.145,78,1.399,79,1.706,80,1.399,81,1.145,82,1.706,83,2.039,84,1.145,85,1.706,86,1.399,87,1.399,88,0.805,89,1.339,90,1.145,91,1.399,92,1.399,93,1.399,94,2.084,95,1.399,96,1.399,97,2.084,98,2.084,99,1.399,100,2.084,101,1.399,102,1.399,103,2.084,104,1.399,105,1.399,106,1.706,107,1.399,108,1.399,109,1.399,110,1.399,111,1.702,112,2.084,113,1.399,114,1.399,115,1.706,116,1.399,117,1.399,118,1.399,119,1.399,120,2.084,121,1.399,122,1.424,123,2.084,124,1.399,125,1.399,126,1.399,127,2.084,128,1.399,129,0.805,130,2.039,131,2.084,132,1.399,133,1.399,134,1.399,135,1.399,136,0.805,137,1.399,138,0.956,139,1.399,140,1.399,141,1.399,142,1.399,143,1.399,144,1.399,145,0.036,146,0.036]],["title/interfaces/CodecovConfig.html",[0,0.358,37,1.375]],["body/interfaces/CodecovConfig.html",[0,0.37,1,1.28,2,0.678,3,0.804,4,0.804,5,0.699,6,0.804,7,0.678,8,1.466,9,0.699,10,0.85,11,2.113,12,2.038,13,1.344,14,3.365,16,0.699,17,0.069,18,1.701,19,1.397,20,2.95,21,2.696,22,1.397,23,1.144,24,1.397,25,1.397,26,0.955,27,1.397,28,0.392,29,0.955,30,1.432,31,2.025,32,2.913,33,1.701,34,1.423,35,1.144,36,1.423,37,2.016,38,2.299,39,1.697,40,1.816,41,2.696,42,1.587,43,2.038,44,1.705,45,2.038,46,1.885,47,1.397,48,0.955,49,1.705,50,0.804,51,1.701,52,2.038,53,1.705,54,2.038,55,1.397,56,2.038,57,1.701,58,1.308,59,2.082,60,1.397,61,1.397,62,2.489,63,1.423,64,1.423,65,1.144,66,1.144,67,1.705,68,1.423,69,1.144,70,1.144,71,2.623,72,2.038,73,3.093,74,2.082,75,1.705,76,1.144,77,1.144,78,1.397,79,1.705,80,1.397,81,1.144,82,1.705,83,2.038,84,1.144,85,1.705,86,1.397,87,1.397,88,0.804,89,1.338,90,1.144,91,1.397,92,1.397,93,1.397,94,2.082,95,1.397,96,1.397,97,2.082,98,2.082,99,1.397,100,2.082,101,1.397,102,1.397,103,2.082,104,1.397,105,1.397,106,1.705,107,1.397,108,1.397,109,1.397,110,1.397,111,1.701,112,2.082,113,1.397,114,1.397,115,1.705,116,1.397,117,1.397,118,1.397,119,1.397,120,2.082,121,1.397,122,1.423,123,2.082,124,1.397,125,1.397,126,1.397,127,2.082,128,1.397,129,0.804,130,2.038,131,2.082,132,1.397,133,1.397,134,1.397,135,1.397,136,0.804,137,1.397,138,0.955,139,1.397,140,1.397,141,1.397,142,1.397,143,1.397,144,1.397,145,0.036,146,0.036]],["title/interfaces/CommitlintConfig.html",[0,0.358,147,1.375]],["body/interfaces/CommitlintConfig.html",[0,0.448,2,1.222,3,1.448,4,1.448,5,0.707,7,1.222,8,1.443,9,0.707,10,1.271,16,0.875,17,0.069,30,1.448,31,2.089,32,2.894,40,1.641,58,1.028,111,1.72,136,1.448,145,0.053,146,0.053,147,2.311,148,2.061,149,2.482,150,3.632,151,2.157,152,3.972,153,3.972,154,3.382,155,2.061,156,2.061,157,2.311,158,1.72,159,1.222,160,2.061,161,2.129,162,2.061,163,2.517,164,2.061,165,2.517,166,2.517,167,2.517,168,2.517,169,2.517]],["title/interfaces/EsLintGeneratorSchema.html",[0,0.358,170,1.375]],["body/interfaces/EsLintGeneratorSchema.html",[0,0.43,2,1.174,3,1.392,4,1.392,5,0.679,7,1.174,9,0.679,10,1.24,11,2.639,16,1.029,17,0.068,18,2.077,31,1.392,50,2.263,145,0.052,146,0.052,170,2.077,171,2.42,172,2.42,173,1.174,174,1.653,175,3,176,4.444,177,4.444,178,3.485,179,4.444,180,4.444,181,4.925,182,2.488,183,3.875,184,2.488,185,2.488,186,2.488,187,2.488]],["title/interfaces/GitHubWorkflowGeneratorSchema.html",[0,0.358,188,1.375]],["body/interfaces/GitHubWorkflowGeneratorSchema.html",[0,0.47,2,1.282,3,1.52,4,1.52,5,0.742,7,1.282,9,0.742,10,1.31,16,0.97,17,0.068,28,0.901,31,1.52,40,1.677,50,2.154,145,0.055,146,0.055,172,2.643,174,1.806,188,2.193,189,1.806,190,2.643,191,1.52,192,2.118,193,3.744,194,3.594,195,3.594,196,3.209,197,4.092,198,3.209,199,2.456,200,2.627,201,2.627,202,3.209]],["title/changelog.html",[203,1.705,204,1.705,205,1.705]],["body/changelog.html",[5,0.239,17,0.051,26,0.581,28,0.927,29,0.581,39,0.489,42,0.489,48,1.708,51,0.581,57,0.581,68,0.581,88,0.489,89,0.413,129,1.784,136,0.81,138,0.962,145,0.024,146,0.024,158,1.585,159,1.284,173,0.413,191,0.489,192,0.489,200,1.153,201,1.714,205,0.85,206,1.085,207,1.801,208,1.085,209,0.85,210,3.375,211,4.095,212,2.958,213,1.085,214,3.53,215,1.085,216,1.085,217,1.795,218,1.085,219,3.188,220,4.936,221,3.101,222,0.81,223,1.795,224,3.258,225,4.916,226,1.085,227,1.085,228,2.67,229,2.5,230,4.871,231,0.85,232,2.958,233,1.085,234,1.085,235,1.085,236,4.71,237,4.376,238,0.85,239,1.085,240,1.085,241,1.085,242,1.085,243,4.932,244,4.208,245,4.3,246,2.38,247,1.085,248,1.085,249,1.431,250,1.085,251,1.085,252,1.085,253,1.085,254,1.085,255,1.085,256,1.085,257,4.604,258,3.773,259,3.06,260,0.347,261,1.085,262,1.085,263,1.085,264,1.085,265,3.188,266,1.085,267,1.085,268,1.085,269,2.67,270,1.085,271,1.085,272,1.085,273,1.085,274,1.085,275,1.085,276,2.958,277,4.155,278,3.87,279,3.258,280,1.795,281,1.085,282,1.085,283,1.085,284,2.297,285,1.795,286,1.795,287,1.795,288,1.085,289,1.085,290,1.795,291,4.897,292,1.085,293,1.085,294,1.085,295,1.408,296,1.085,297,1.085,298,3.773,299,1.085,300,1.085,301,1.085,302,1.085,303,2.297,304,0.85,305,1.085,306,1.085,307,1.085,308,1.085,309,1.085,310,1.085,311,1.085,312,1.085,313,0.85,314,2.297,315,1.085,316,1.085,317,1.085,318,1.795,319,1.085,320,1.085,321,1.085,322,1.085,323,1.795,324,1.801,325,1.085,326,0.683,327,1.085,328,1.085,329,2.958,330,2.297,331,1.408,332,1.795,333,1.085,334,1.085,335,1.085,336,2.297,337,1.795,338,1.085,339,1.085,340,1.085,341,1.085,342,1.085,343,1.085,344,1.085,345,1.085,346,1.085,347,1.085,348,3.661,349,1.795,350,1.795,351,1.085,352,1.795,353,1.795,354,1.899,355,1.085,356,1.085,357,1.085,358,1.795,359,1.085,360,1.085,361,0.85,362,1.085,363,1.085,364,1.085,365,1.085,366,1.085,367,1.085,368,0.85,369,1.795,370,0.962,371,1.795,372,1.085,373,1.085,374,1.085,375,1.085,376,1.085,377,1.085,378,1.085,379,1.085,380,1.085,381,3.375,382,2.958,383,2.297,384,1.085,385,1.085,386,1.085,387,1.085,388,1.085,389,3.188,390,1.085,391,1.085,392,1.085,393,1.085,394,1.085,395,1.085,396,1.085,397,1.085,398,1.085,399,1.085,400,2.297,401,1.085,402,1.085,403,1.085,404,1.085,405,1.085,406,1.085,407,1.085,408,1.085,409,1.085,410,1.085,411,1.085,412,1.085,413,1.085,414,1.085,415,1.085,416,1.085,417,1.085,418,1.085,419,1.085,420,0.85,421,1.795,422,1.085,423,1.085,424,3.188,425,1.795,426,2.297,427,1.085,428,1.085,429,1.085,430,1.085,431,1.085,432,1.085,433,1.085,434,1.085,435,0.85,436,1.085,437,1.085,438,1.085,439,1.085,440,1.795,441,1.795,442,1.085,443,1.085,444,1.085,445,1.085,446,1.795,447,1.085,448,1.085,449,1.085,450,1.085,451,1.085,452,1.085,453,1.085,454,1.085,455,1.085,456,1.085,457,1.085,458,1.085,459,1.085,460,1.085,461,1.085,462,1.085,463,1.085,464,1.085,465,1.085,466,1.085,467,1.085,468,1.085,469,1.085,470,1.085,471,1.085,472,1.085,473,1.085,474,1.085,475,1.085,476,1.085,477,1.085,478,1.085,479,1.085,480,1.085,481,1.085,482,1.085,483,1.085,484,1.085,485,1.085,486,1.085,487,1.085,488,1.085,489,1.085,490,1.085,491,1.085,492,1.085,493,1.085,494,1.085,495,1.085,496,1.085,497,1.085,498,1.085,499,1.085,500,1.085,501,1.085,502,0.413,503,0.581,504,0.581,505,1.085,506,1.085,507,1.085,508,0.696,509,1.085,510,1.085,511,1.085,512,1.085,513,1.085,514,1.085,515,1.085,516,1.085,517,1.085,518,1.085,519,1.085,520,1.085,521,0.85,522,1.085,523,0.85,524,1.085,525,1.085,526,1.085,527,1.085,528,1.085,529,1.085,530,1.085,531,1.085,532,1.085,533,1.085,534,1.085,535,1.085,536,1.085,537,1.085,538,1.085,539,1.085,540,1.085,541,1.085,542,1.085,543,1.085,544,1.085,545,1.085,546,0.85,547,1.085,548,1.085,549,1.085,550,1.085,551,1.085,552,1.085,553,1.408,554,1.085,555,1.085,556,1.795,557,1.085,558,1.085,559,1.085,560,1.085,561,3.375,562,1.085,563,1.085,564,1.085,565,1.085,566,1.085,567,1.085,568,1.795,569,1.085,570,1.085,571,1.795,572,1.795,573,1.085,574,1.153,575,0.85,576,1.085,577,1.085,578,1.085,579,1.085,580,1.085,581,1.085,582,1.085,583,0.85,584,1.085,585,1.085,586,1.085,587,1.085,588,1.085,589,0.413,590,1.085,591,1.085,592,1.085,593,1.085,594,1.085,595,1.085,596,1.085,597,1.085,598,1.085,599,1.085,600,1.085,601,1.085,602,1.085,603,1.085,604,1.085,605,1.085,606,1.085,607,1.085,608,1.085,609,1.085,610,1.085,611,1.085,612,1.085,613,1.085,614,1.085,615,1.085,616,1.085,617,1.085,618,1.085,619,1.085,620,1.085,621,1.085,622,0.581,623,1.085,624,1.085]],["title/coverage.html",[13,1.1]],["body/coverage.html",[0,0.567,1,0.577,5,0.475,6,2.102,13,0.691,16,0.475,17,0.068,33,1.157,36,1.157,37,1.157,46,1.157,58,0.691,63,1.157,71,3.133,145,0.041,146,0.041,147,1.157,148,2.607,155,1.386,160,1.386,162,1.386,164,1.386,170,1.157,171,1.693,188,1.157,189,1.898,190,1.693,502,1.162,503,1.636,504,1.636,625,1.693,626,2.159,627,2.159,628,5.084,629,3.541,630,1.693,631,5.073,632,1.693,633,1.693,634,1.693,635,1.693,636,1.693,637,1.693,638,4.988,639,1.693,640,1.693,641,1.693,642,1.693,643,2.159,644,1.693,645,1.693,646,1.693,647,1.693,648,1.693,649,1.693,650,1.693,651,1.693,652,2.259,653,2.372,654,1.693,655,1.693,656,1.693,657,1.693,658,1.693,659,1.386,660,1.693,661,1.693,662,1.693,663,1.693,664,3.306,665,1.693,666,1.693,667,1.693,668,1.693,669,1.693,670,1.693,671,2.159,672,1.693,673,1.693,674,1.693,675,1.693,676,2.176,677,1.693,678,1.693,679,1.693,680,1.693,681,2.273,682,2.273,683,1.693,684,1.693,685,1.693,686,1.693,687,1.693,688,1.693,689,1.693,690,1.693,691,1.693,692,3.018,693,1.693,694,1.693,695,1.693,696,1.693,697,1.693,698,1.693,699,1.693,700,1.693,701,2.394,702,1.693,703,1.693,704,1.693,705,1.693,706,1.693,707,2.159,708,2.159]],["title/dependencies.html",[159,0.828,246,1.644]],["body/dependencies.html",[17,0.068,23,2.304,26,1.923,28,0.936,29,1.923,145,0.057,146,0.057,156,2.304,157,1.923,161,1.923,222,1.619,229,2.814,246,2.277,326,1.366,331,2.814,368,2.814,370,1.923,502,1.366,589,1.366,709,3.589,710,3.589,711,3.589,712,3.589,713,4.68,714,4.249,715,3.589,716,3.589,717,3.589,718,3.589,719,3.589]],["title/miscellaneous/functions.html",[260,0.696,720,2.406]],["body/miscellaneous/functions.html",[1,1.225,6,0.893,8,1.433,9,0.436,11,2.59,13,0.633,16,1.064,17,0.067,21,3.259,28,0.971,30,0.893,40,1.704,42,0.893,50,0.893,58,1.08,69,2.912,70,1.27,72,1.27,75,2.166,76,1.27,77,1.27,79,1.27,81,1.27,82,1.27,83,1.27,84,1.27,85,2.521,88,1.522,89,0.753,90,1.27,106,1.27,115,1.27,122,2.59,129,1.294,130,1.841,138,2.194,145,0.038,146,0.038,149,1.06,151,0.893,170,1.537,173,1.558,174,2.399,188,1.537,189,1.06,191,0.893,192,0.893,199,1.06,222,0.893,259,2.166,260,0.633,326,0.753,354,1.27,502,1.494,503,1.808,504,1.982,553,1.552,574,1.27,589,0.753,622,1.06,630,2.249,632,2.249,633,2.249,634,2.249,635,2.249,636,2.249,637,2.249,641,1.552,642,2.249,646,1.552,647,2.249,650,1.552,651,2.249,652,1.06,653,2.318,654,2.249,655,2.249,656,2.249,657,2.249,658,2.249,659,2.166,662,1.552,663,2.249,674,1.552,675,2.249,676,1.06,679,1.552,680,2.249,688,1.552,689,2.249,699,1.552,700,2.249,704,1.552,705,1.552,706,2.249,720,1.552,721,2.521,722,1.979,723,4.325,724,3.312,725,1.979,726,2.629,727,4.832,728,1.979,729,1.979,730,1.537,731,1.841,732,2.645,733,1.979,734,1.979,735,1.979,736,1.979,737,3.373,738,1.979,739,2.868,740,1.979,741,1.979,742,2.777,743,1.979,744,1.979,745,1.27,746,1.552,747,1.979,748,2.375,749,1.979,750,1.979,751,1.979,752,1.552,753,1.979,754,1.27,755,1.552]],["title/index.html",[9,0.479,203,1.705,204,1.705]],["body/index.html",[1,0.996,5,0.821,8,1.425,13,1.194,17,0.044,28,1.11,34,1.274,38,1.274,39,1.073,42,1.473,48,1.274,58,1.391,64,1.274,88,1.682,89,1.527,129,1.073,145,0.044,146,0.044,149,1.998,151,1.682,157,1.75,158,1.274,159,1.243,161,1.274,173,1.527,174,1.274,175,1.527,182,1.527,184,2.096,185,1.527,186,1.527,187,1.527,191,1.682,192,1.961,193,1.865,194,2.561,195,1.865,198,1.865,199,1.75,200,2.096,201,1.527,202,1.865,207,1.865,221,1.865,222,1.473,224,1.865,231,1.865,238,2.924,246,1.274,249,1.274,295,2.561,313,1.865,324,3.607,326,1.654,361,1.865,370,1.274,435,1.865,502,1.419,508,1.527,521,1.865,546,1.865,574,1.527,583,1.865,589,1.527,622,1.274,625,1.865,726,1.527,730,1.274,742,3.017,745,2.577,748,2.096,754,2.096,756,2.378,757,2.378,758,2.378,759,2.378,760,2.378,761,2.378,762,2.378,763,3.265,764,2.378,765,2.378,766,2.378,767,2.561,768,2.378,769,2.378,770,2.378,771,2.378,772,2.378,773,4.014,774,2.378,775,2.378,776,2.378,777,2.378,778,2.378,779,2.378,780,4.825,781,2.378,782,2.378,783,2.378,784,3.265,785,2.378,786,3.265,787,2.378,788,2.378,789,3.265,790,2.378,791,2.378,792,2.378,793,2.378,794,2.378,795,2.378,796,3.265,797,3.729,798,2.378,799,2.378,800,2.378,801,2.378,802,2.378,803,2.378,804,2.378,805,2.378,806,2.378,807,2.378,808,2.378,809,3.265,810,2.378,811,2.378,812,2.378,813,2.378,814,2.378,815,2.378,816,2.378,817,2.378,818,3.265,819,2.378,820,2.378,821,2.378,822,2.378,823,2.378,824,2.378,825,2.378,826,2.378,827,2.378,828,2.378,829,2.378,830,2.378,831,2.378,832,2.378,833,2.378,834,2.378,835,2.378,836,2.378,837,2.378,838,2.378,839,2.378,840,2.378,841,2.378,842,2.378,843,2.378,844,2.378,845,2.378,846,2.378,847,2.378,848,2.378,849,2.378,850,2.378]],["title/modules.html",[851,2.696]],["body/modules.html",[17,0.06,145,0.06,146,0.06,851,3.094]],["title/overview.html",[852,2.696]],["body/overview.html",[2,1.495,17,0.06,145,0.06,146,0.06,852,3.081,853,3.928]],["title/properties.html",[10,0.982,159,0.828]],["body/properties.html",[1,0.976,7,1.39,10,1.169,17,0.067,28,0.946,89,1.39,145,0.058,146,0.058,209,2.865,249,2.301,279,2.865,304,2.865,420,2.865,575,2.865,767,3.367,854,4.294,855,3.653,856,4.294,857,3.653,858,3.653,859,3.653,860,3.653,861,3.653,862,3.653,863,3.653,864,3.653,865,3.653,866,3.653]],["title/miscellaneous/typealiases.html",[260,0.696,867,3.068]],["body/miscellaneous/typealiases.html",[8,1.459,9,0.803,16,0.803,17,0.058,145,0.058,146,0.058,151,1.645,154,2.859,173,1.632,260,1.167,326,1.387,503,2.298,589,1.387,652,1.954,653,2.521,676,1.954,681,2.341,682,2.754,721,2.926,730,1.954,731,2.754,868,3.646,869,4.557,870,4.289,871,3.364,872,2.859,873,2.859]],["title/miscellaneous/variables.html",[260,0.696,874,2.406]],["body/miscellaneous/variables.html",[1,0.951,5,0.531,6,0.708,8,1.353,9,0.531,12,1.008,13,0.503,16,1.046,17,0.069,18,0.842,28,0.346,30,1.822,33,1.293,34,1.293,35,1.008,36,1.293,38,1.293,39,0.708,40,1.682,41,1.549,43,1.008,44,1.008,45,1.008,46,0.842,49,1.008,51,0.842,52,1.008,53,1.008,54,1.008,56,1.008,57,0.842,58,1.578,63,1.293,64,2.266,65,1.008,66,1.008,67,1.549,68,1.293,111,0.842,122,1.575,136,1.326,145,0.032,146,0.032,147,0.842,148,1.008,149,1.907,150,2.791,151,1.765,155,1.549,156,1.008,157,1.575,158,1.767,159,1.255,160,1.549,161,1.293,162,1.549,163,1.232,164,1.549,165,1.232,166,1.232,167,1.232,168,1.232,169,2.305,173,1.661,175,1.008,178,1.232,182,1.008,184,2.412,185,1.008,186,1.887,187,1.549,189,0.842,191,0.708,192,0.708,196,1.232,199,0.842,222,0.708,249,2.164,259,1.887,260,0.503,326,1.354,354,1.549,370,0.842,502,1.576,504,1.293,508,1.549,523,1.232,589,1.354,622,2.164,639,1.232,640,1.892,644,1.232,645,1.892,648,1.232,649,1.892,652,0.842,653,1.767,659,1.549,660,1.232,661,1.892,664,1.232,665,1.892,666,1.892,667,1.892,668,1.892,669,1.892,670,1.892,672,1.232,673,1.892,676,1.293,677,1.232,678,1.892,681,1.008,682,2.117,683,1.892,684,1.892,685,1.892,686,1.232,687,1.892,690,1.232,691,1.892,692,1.232,693,1.892,694,1.892,695,1.892,696,1.892,697,1.232,698,1.892,701,1.232,702,1.892,703,1.892,721,1.008,724,2.305,726,1.549,730,2.013,731,2.412,732,3.808,742,2.593,745,1.008,746,1.232,748,1.008,752,1.232,754,1.887,755,1.232,871,1.232,872,2.305,873,1.232,874,1.232,875,4.038,876,3.298,877,3.757,878,3.298,879,1.57,880,2.413,881,1.57,882,4.038,883,1.57,884,1.57,885,1.57,886,3.913,887,3.913,888,1.57,889,2.939,890,2.939,891,2.939,892,1.57,893,1.57,894,1.57,895,1.57,896,1.57,897,1.57,898,1.57,899,2.413,900,1.57,901,1.57,902,1.57,903,1.57,904,1.57,905,1.57,906,1.57,907,1.57,908,1.57,909,1.57,910,1.57,911,1.57,912,1.57,913,1.57,914,1.57,915,1.57,916,1.57,917,1.57,918,1.57,919,1.57,920,2.413,921,1.57,922,2.413,923,1.57,924,1.57,925,1.57,926,1.57,927,1.57,928,1.57,929,2.413,930,1.57,931,1.57,932,1.57,933,1.57,934,1.57,935,1.57,936,1.57,937,1.57,938,1.57,939,1.57,940,1.57,941,1.57,942,1.57,943,1.57,944,1.57,945,1.57,946,1.57,947,1.57,948,1.57,949,1.57,950,1.57,951,1.57,952,1.57,953,1.57,954,1.57,955,1.57,956,1.57,957,1.57,958,1.57,959,1.57,960,1.57,961,1.57,962,1.57,963,1.57]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"interfaces/EsLintGeneratorSchema.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":111,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"miscellaneous/variables.html":{}}}],["0..100",{"_index":65,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/variables.html":{}}}],["0.1.1",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":358,"title":{},"body":{"changelog.html":{}}}],["0.2.1",{"_index":352,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":350,"title":{},"body":{"changelog.html":{}}}],["009816c",{"_index":272,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":276,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":211,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":265,"title":{},"body":{"changelog.html":{}}}],["03763d5",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["039cde9",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":348,"title":{},"body":{"changelog.html":{}}}],["047fe7a",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":329,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":217,"title":{},"body":{"changelog.html":{}}}],["06f7e5f",{"_index":273,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":214,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":212,"title":{},"body":{"changelog.html":{}}}],["082c126",{"_index":240,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":275,"title":{},"body":{"changelog.html":{}}}],["09eba7d",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["0a4ef15",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["0aa7944",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["0bd435b",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["0bdb368",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["0d74dcb",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["0dd0f23",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["0f05af7",{"_index":268,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":66,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["1.2.1",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["1.2.2",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["1.2.3",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["1.4.1",{"_index":377,"title":{},"body":{"changelog.html":{}}}],["1.4.2",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":68,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["1013",{"_index":271,"title":{},"body":{"changelog.html":{}}}],["1097",{"_index":247,"title":{},"body":{"changelog.html":{}}}],["1099",{"_index":254,"title":{},"body":{"changelog.html":{}}}],["11.0.0",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["1172",{"_index":251,"title":{},"body":{"changelog.html":{}}}],["1190",{"_index":234,"title":{},"body":{"changelog.html":{}}}],["1191",{"_index":226,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":258,"title":{},"body":{"changelog.html":{}}}],["120",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":369,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":284,"title":{},"body":{"changelog.html":{}}}],["15.0.0",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["15.1.1",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":336,"title":{},"body":{"changelog.html":{}}}],["16ee20b",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":330,"title":{},"body":{"changelog.html":{}}}],["17.0.0",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["17.1.0",{"_index":250,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":371,"title":{},"body":{"changelog.html":{}}}],["18.0.0",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["1948e5b",{"_index":320,"title":{},"body":{"changelog.html":{}}}],["197",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["1983221",{"_index":282,"title":{},"body":{"changelog.html":{}}}],["1e1c6d2",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["1ee9f2d",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":368,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.0.1",{"_index":366,"title":{},"body":{"changelog.html":{}}}],["2.0.2",{"_index":365,"title":{},"body":{"changelog.html":{}}}],["2.0.3",{"_index":364,"title":{},"body":{"changelog.html":{}}}],["2.1.0",{"_index":357,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":351,"title":{},"body":{"changelog.html":{}}}],["2.1.2",{"_index":349,"title":{},"body":{"changelog.html":{}}}],["2.1.3",{"_index":337,"title":{},"body":{"changelog.html":{}}}],["2.3.4",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["2.8.0",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["2022",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":257,"title":{},"body":{"changelog.html":{}}}],["2024",{"_index":210,"title":{},"body":{"changelog.html":{}}}],["2032764",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["207",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["208",{"_index":581,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":378,"title":{},"body":{"changelog.html":{}}}],["21ef002",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["22bd595",{"_index":347,"title":{},"body":{"changelog.html":{}}}],["235",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["242",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":289,"title":{},"body":{"changelog.html":{}}}],["250",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["252",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["253",{"_index":551,"title":{},"body":{"changelog.html":{}}}],["254",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":532,"title":{},"body":{"changelog.html":{}}}],["256",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["257",{"_index":534,"title":{},"body":{"changelog.html":{}}}],["258",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["259",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["260",{"_index":517,"title":{},"body":{"changelog.html":{}}}],["2630510",{"_index":375,"title":{},"body":{"changelog.html":{}}}],["264",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":287,"title":{},"body":{"changelog.html":{}}}],["272e03f",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["275",{"_index":510,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":367,"title":{},"body":{"changelog.html":{}}}],["2c0010c",{"_index":319,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":331,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.1.0",{"_index":318,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":290,"title":{},"body":{"changelog.html":{}}}],["3.3.2",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["311",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["31a9145",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["3257bb0",{"_index":317,"title":{},"body":{"changelog.html":{}}}],["339",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["357",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["364fed2",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["367",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["378",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["380",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["38ec4ec",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["390",{"_index":383,"title":{},"body":{"changelog.html":{}}}],["393",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["394",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["395",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["396",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["4.0.0",{"_index":288,"title":{},"body":{"changelog.html":{}}}],["4.0.1",{"_index":286,"title":{},"body":{"changelog.html":{}}}],["4.0.2",{"_index":285,"title":{},"body":{"changelog.html":{}}}],["4.0.3",{"_index":280,"title":{},"body":{"changelog.html":{}}}],["4.0.4",{"_index":274,"title":{},"body":{"changelog.html":{}}}],["4.0.5",{"_index":264,"title":{},"body":{"changelog.html":{}}}],["4.0.6",{"_index":263,"title":{},"body":{"changelog.html":{}}}],["4/4",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["419",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["4192020",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["427",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["429",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["432",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["434",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["450",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["451",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["4690a74",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["46b7777",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["47a07dd",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["4b148a1",{"_index":235,"title":{},"body":{"changelog.html":{}}}],["4b28d65",{"_index":283,"title":{},"body":{"changelog.html":{}}}],["4e8694c",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":853,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":256,"title":{},"body":{"changelog.html":{}}}],["5.0.1",{"_index":242,"title":{},"body":{"changelog.html":{}}}],["5.0.2",{"_index":241,"title":{},"body":{"changelog.html":{}}}],["50",{"_index":67,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/variables.html":{}}}],["517",{"_index":373,"title":{},"body":{"changelog.html":{}}}],["525",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["5441666",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["577",{"_index":362,"title":{},"body":{"changelog.html":{}}}],["579",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["5babb7b",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["5bec382",{"_index":301,"title":{},"body":{"changelog.html":{}}}],["5c2e93f",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["5e37f14",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["5e3a610",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["6.0.0",{"_index":218,"title":{},"body":{"changelog.html":{}}}],["6.0.1",{"_index":216,"title":{},"body":{"changelog.html":{}}}],["6.0.2",{"_index":215,"title":{},"body":{"changelog.html":{}}}],["6.0.3",{"_index":213,"title":{},"body":{"changelog.html":{}}}],["6.0.4",{"_index":209,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["635",{"_index":346,"title":{},"body":{"changelog.html":{}}}],["679",{"_index":342,"title":{},"body":{"changelog.html":{}}}],["680",{"_index":310,"title":{},"body":{"changelog.html":{}}}],["681",{"_index":339,"title":{},"body":{"changelog.html":{}}}],["682",{"_index":340,"title":{},"body":{"changelog.html":{}}}],["684",{"_index":334,"title":{},"body":{"changelog.html":{}}}],["6bb96d2",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["7/7",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["701e487",{"_index":321,"title":{},"body":{"changelog.html":{}}}],["717",{"_index":327,"title":{},"body":{"changelog.html":{}}}],["71e42ce",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["733a9f8",{"_index":343,"title":{},"body":{"changelog.html":{}}}],["7506493",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["76b300a",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["77cdce1",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["7899395",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["7954de9",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["7b955c7",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["7c1e0cf",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["7ddd6ce",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["7fac52b",{"_index":356,"title":{},"body":{"changelog.html":{}}}],["81d1ee4",{"_index":227,"title":{},"body":{"changelog.html":{}}}],["826075f",{"_index":266,"title":{},"body":{"changelog.html":{}}}],["827",{"_index":316,"title":{},"body":{"changelog.html":{}}}],["82fe334",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["830",{"_index":300,"title":{},"body":{"changelog.html":{}}}],["831",{"_index":306,"title":{},"body":{"changelog.html":{}}}],["835",{"_index":311,"title":{},"body":{"changelog.html":{}}}],["838c59d",{"_index":518,"title":{},"body":{"changelog.html":{}}}],["8561b60",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["85f83e1",{"_index":255,"title":{},"body":{"changelog.html":{}}}],["889d376",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["89a76c1",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["8af1f8b",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["8fe14b9",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["9.0.0",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["912",{"_index":281,"title":{},"body":{"changelog.html":{}}}],["93df4e6",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["94",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["940c611",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["9776c36",{"_index":267,"title":{},"body":{"changelog.html":{}}}],["97e37d6",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["98b16af",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["98c3e99",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["9d82481",{"_index":363,"title":{},"body":{"changelog.html":{}}}],["9eaa3c0",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["9f21437",{"_index":328,"title":{},"body":{"changelog.html":{}}}],["9fc1978",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["a0bf3c8",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["a1f0daf",{"_index":252,"title":{},"body":{"changelog.html":{}}}],["a341d1d",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["a52932a",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["a53d944",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["accessibility",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action",{"_index":583,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["actions",{"_index":829,"title":{},"body":{"index.html":{}}}],["adapted",{"_index":834,"title":{},"body":{"index.html":{}}}],["add",{"_index":574,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["added",{"_index":810,"title":{},"body":{"index.html":{}}}],["addeslintplugin",{"_index":654,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addeslintplugin(tree",{"_index":725,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addeslintrules",{"_index":655,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addeslintrules(tree",{"_index":729,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addhtmloverridetoprettierconfig",{"_index":706,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addhtmloverridetoprettierconfig(tree",{"_index":740,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adding",{"_index":546,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["additionally",{"_index":819,"title":{},"body":{"index.html":{}}}],["adds",{"_index":88,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["adhere",{"_index":801,"title":{},"body":{"index.html":{}}}],["af53827",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":868,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["allowing",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["alphabetize",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":142,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["always",{"_index":169,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":249,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["angular/cli",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["applies",{"_index":181,"title":{},"body":{"interfaces/EsLintGeneratorSchema.html":{}}}],["apply",{"_index":821,"title":{},"body":{"index.html":{}}}],["arrayelement",{"_index":869,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["arrow_up",{"_index":225,"title":{},"body":{"changelog.html":{}}}],["arrowparens",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["art",{"_index":359,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["attribution",{"_index":806,"title":{},"body":{"index.html":{}}}],["author",{"_index":865,"title":{},"body":{"properties.html":{}}}],["automate",{"_index":818,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":820,"title":{},"body":{"index.html":{}}}],["available",{"_index":776,"title":{},"body":{"index.html":{}}}],["b11e7e1",{"_index":262,"title":{},"body":{"changelog.html":{}}}],["b408f48",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["ba8a11f",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["badge",{"_index":796,"title":{},"body":{"index.html":{}}}],["base",{"_index":196,"title":{},"body":{"interfaces/GitHubWorkflowGeneratorSchema.html":{},"miscellaneous/variables.html":{}}}],["bash",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["bc0eca8",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behavior",{"_index":45,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/variables.html":{}}}],["being",{"_index":842,"title":{},"body":{"index.html":{}}}],["between",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bfa8e5f",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":165,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":50,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/EsLintGeneratorSchema.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{},"miscellaneous/functions.html":{}}}],["boom",{"_index":302,"title":{},"body":{"changelog.html":{}}}],["boosted",{"_index":760,"title":{},"body":{"index.html":{}}}],["boundary",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bracketspacing",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branch",{"_index":193,"title":{},"body":{"interfaces/GitHubWorkflowGeneratorSchema.html":{},"index.html":{}}}],["branch=master",{"_index":839,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":219,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":236,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":858,"title":{},"body":{"properties.html":{}}}],["build",{"_index":832,"title":{},"body":{"index.html":{}}}],["builders",{"_index":855,"title":{},"body":{"properties.html":{}}}],["builtin",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bump",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["c33b76a",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["c4d501c",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["c56a48d",{"_index":335,"title":{},"body":{"changelog.html":{}}}],["c83d98b",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["c94e9ae",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["ca335b7",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["caseinsensitive",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb00d30",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["cdf3758",{"_index":270,"title":{},"body":{"changelog.html":{}}}],["cf94bdf",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":205,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":48,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"changelog.html":{},"index.html":{}}}],["check",{"_index":774,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":830,"title":{},"body":{"index.html":{}}}],["checks",{"_index":734,"title":{},"body":{"miscellaneous/functions.html":{}}}],["chores",{"_index":261,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":199,"title":{},"body":{"interfaces/GitHubWorkflowGeneratorSchema.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cli",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closes",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["cloud",{"_index":202,"title":{},"body":{"interfaces/GitHubWorkflowGeneratorSchema.html":{},"index.html":{}}}],["code",{"_index":361,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["codecov",{"_index":1,"title":{"interfaces/Codecov.html":{}},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["codecov.coverage.status.project[name",{"_index":128,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["codecov.flags",{"_index":127,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["codecov.yml",{"_index":34,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["codecov['flags",{"_index":124,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["codecovconfig",{"_index":37,"title":{"interfaces/CodecovConfig.html":{}},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"coverage.html":{}}}],["codecovdefault",{"_index":63,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["codecovdotfile",{"_index":36,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["codecoverage",{"_index":104,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["codecovfile",{"_index":33,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["codecovgenerator",{"_index":642,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["codecovgenerator(tree",{"_index":741,"title":{},"body":{"miscellaneous/functions.html":{}}}],["codecovschematic",{"_index":640,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":324,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["commands",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["comment",{"_index":12,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/variables.html":{}}}],["commit",{"_index":799,"title":{},"body":{"index.html":{}}}],["commitlint",{"_index":149,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["commitlint/cli",{"_index":156,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["commitlint/config",{"_index":161,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["commitlintcli",{"_index":155,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commitlintconfig",{"_index":147,"title":{"interfaces/CommitlintConfig.html":{}},"body":{"interfaces/CommitlintConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commitlintconfigconventional",{"_index":160,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commitlintconfigpath",{"_index":162,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commitlintdefaultconfig",{"_index":164,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commitlintgenerator",{"_index":647,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["commitlintgenerator(tree",{"_index":743,"title":{},"body":{"miscellaneous/functions.html":{}}}],["commitlintrc.json",{"_index":163,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"miscellaneous/variables.html":{}}}],["commitlintschematic",{"_index":645,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["commits",{"_index":802,"title":{},"body":{"index.html":{}}}],["committed",{"_index":843,"title":{},"body":{"index.html":{}}}],["commonjs",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["compileroptions",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config",{"_index":136,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["config.ts",{"_index":653,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["config/add",{"_index":705,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["configuration",{"_index":8,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":152,"title":{},"body":{"interfaces/CommitlintConfig.html":{}}}],["configure",{"_index":200,"title":{},"body":{"interfaces/GitHubWorkflowGeneratorSchema.html":{},"changelog.html":{},"index.html":{}}}],["configured",{"_index":120,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["configures",{"_index":791,"title":{},"body":{"index.html":{}}}],["console.log(`coverage",{"_index":140,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["console.log(`generating",{"_index":91,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["console.log(`ignored",{"_index":114,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["console.log(`there",{"_index":119,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["const",{"_index":32,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{}}}],["contrib.rocks",{"_index":807,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":757,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":745,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["contributorsgenerator",{"_index":651,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["contributorsgenerator(tree",{"_index":744,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contributorsschematic",{"_index":649,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["conventional",{"_index":157,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["convertnxgenerator(codecovgenerator",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["convertnxgenerator(commitlintgenerator",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["convertnxgenerator(contributorsgenerator",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["convertnxgenerator(eslintgenerator",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["convertnxgenerator(githubworkflowgenerator",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["convertnxgenerator(lintstagedgenerator",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["convertnxgenerator(prettiergenerator",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["convertnxgenerator(tsconfiggenerator",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":13,"title":{"coverage.html":{}},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["create",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["createcodecov",{"_index":630,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createcodecov(tree",{"_index":82,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{}}}],["current",{"_index":70,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{}}}],["customized",{"_index":816,"title":{},"body":{"index.html":{}}}],["d2cbba4",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["days",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["dd6b6a8",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":58,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":845,"title":{},"body":{"index.html":{}}}],["dep",{"_index":239,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":246,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":230,"title":{},"body":{"changelog.html":{}}}],["deploy",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["deprecation",{"_index":175,"title":{},"body":{"interfaces/EsLintGeneratorSchema.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["deprecation/deprecation",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deprecationrule",{"_index":665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["deps",{"_index":220,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"interfaces/EsLintGeneratorSchema.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{},"properties.html":{}}}],["detected",{"_index":117,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["dev",{"_index":778,"title":{},"body":{"index.html":{}}}],["devkit",{"_index":277,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":625,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dot",{"_index":35,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/variables.html":{}}}],["e1e8877",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":435,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["e2f231c",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["e2fd0a8",{"_index":341,"title":{},"body":{"changelog.html":{}}}],["e302132",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["e3df031",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["e59b281",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["e6efe74",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["edited",{"_index":817,"title":{},"body":{"index.html":{}}}],["eef673a",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":522,"title":{},"body":{"changelog.html":{}}}],["enabled",{"_index":850,"title":{},"body":{"index.html":{}}}],["enhance",{"_index":812,"title":{},"body":{"index.html":{}}}],["error",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(`jest",{"_index":135,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["es5",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eslint",{"_index":173,"title":{},"body":{"interfaces/EsLintGeneratorSchema.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["eslint/ban",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eslint/explicit",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eslint/no",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eslint/recommended",{"_index":185,"title":{},"body":{"interfaces/EsLintGeneratorSchema.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["eslint:recommended",{"_index":182,"title":{},"body":{"interfaces/EsLintGeneratorSchema.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["eslintconfig",{"_index":739,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eslintconfigfile",{"_index":659,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["eslintconfigurationoverriderule",{"_index":731,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["eslintconfigurationoverriderules",{"_index":870,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["eslintgenerator",{"_index":663,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["eslintgenerator(tree",{"_index":747,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eslintgeneratorschema",{"_index":170,"title":{"interfaces/EsLintGeneratorSchema.html":{}},"body":{"interfaces/EsLintGeneratorSchema.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["eslintpluginprettier",{"_index":693,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eslintrc.json",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eslintrecommended",{"_index":176,"title":{},"body":{"interfaces/EsLintGeneratorSchema.html":{}}}],["eslintrule",{"_index":666,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eslintschematic",{"_index":661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["even",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["exclude",{"_index":873,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["executor",{"_index":116,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["executors",{"_index":854,"title":{},"body":{"properties.html":{}}}],["exist",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["existing",{"_index":198,"title":{},"body":{"interfaces/GitHubWorkflowGeneratorSchema.html":{},"index.html":{}}}],["exists",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["expected",{"_index":137,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["explicit",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":31,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"interfaces/EsLintGeneratorSchema.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{}}}],["expose",{"_index":793,"title":{},"body":{"index.html":{}}}],["extend",{"_index":153,"title":{},"body":{"interfaces/CommitlintConfig.html":{}}}],["extends",{"_index":150,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"miscellaneous/variables.html":{}}}],["extensions",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["external",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f28b042",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["f885272",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["faaebcf",{"_index":312,"title":{},"body":{"changelog.html":{}}}],["fail",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":837,"title":{},"body":{"index.html":{}}}],["fd00a7a",{"_index":248,"title":{},"body":{"changelog.html":{}}}],["fd29583",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["fd95b68",{"_index":307,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":224,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fetch",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["ff3bf67",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["ff41dbe",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"interfaces/EsLintGeneratorSchema.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":30,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":622,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["fix",{"_index":354,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["fixes",{"_index":237,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":60,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["flags",{"_index":14,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["following",{"_index":828,"title":{},"body":{"index.html":{}}}],["force",{"_index":194,"title":{},"body":{"interfaces/GitHubWorkflowGeneratorSchema.html":{},"index.html":{}}}],["forceconsistentcasinginfilenames",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format",{"_index":752,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["friction",{"_index":772,"title":{},"body":{"index.html":{}}}],["function",{"_index":71,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"coverage.html":{}}}],["functions",{"_index":720,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":780,"title":{},"body":{"index.html":{}}}],["gear",{"_index":765,"title":{},"body":{"index.html":{}}}],["generated",{"_index":206,"title":{},"body":{"changelog.html":{}}}],["generates",{"_index":81,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{}}}],["generating",{"_index":521,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["generator",{"_index":174,"title":{},"body":{"interfaces/EsLintGeneratorSchema.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["generators",{"_index":767,"title":{},"body":{"index.html":{},"properties.html":{}}}],["getcodecovfile",{"_index":632,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcodecovfile(tree",{"_index":72,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{}}}],["getprojects",{"_index":19,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["getprojects(tree",{"_index":92,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["getting",{"_index":203,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["git+https://github.com/nx",{"_index":863,"title":{},"body":{"properties.html":{}}}],["github",{"_index":191,"title":{},"body":{"interfaces/GitHubWorkflowGeneratorSchema.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["githubworkflowgenerator",{"_index":675,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["githubworkflowgenerator(tree",{"_index":749,"title":{},"body":{"miscellaneous/functions.html":{}}}],["githubworkflowgeneratorschema",{"_index":188,"title":{"interfaces/GitHubWorkflowGeneratorSchema.html":{}},"body":{"interfaces/GitHubWorkflowGeneratorSchema.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["githubworkflowschematic",{"_index":673,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["groups",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hammer",{"_index":313,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["homepage",{"_index":420,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["hour",{"_index":315,"title":{},"body":{"changelog.html":{}}}],["html",{"_index":504,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["https://github.com/nx",{"_index":856,"title":{},"body":{"properties.html":{}}}],["husky",{"_index":222,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["ignoredprojects",{"_index":95,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["ignoredprojects.join",{"_index":113,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["ignoredprojects.length",{"_index":110,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["ignoredprojects.push(projectname",{"_index":109,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["ignoredprojectslist",{"_index":112,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["implementation",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["import",{"_index":18,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/EsLintGeneratorSchema.html":{},"miscellaneous/variables.html":{}}}],["import/no",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import/order",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import/recommended",{"_index":824,"title":{},"body":{"index.html":{}}}],["import/resolver",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importorder",{"_index":177,"title":{},"body":{"interfaces/EsLintGeneratorSchema.html":{}}}],["importorderrule",{"_index":667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["imports",{"_index":187,"title":{},"body":{"interfaces/EsLintGeneratorSchema.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["imports/no",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["include",{"_index":231,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["includes",{"_index":827,"title":{},"body":{"index.html":{}}}],["including",{"_index":790,"title":{},"body":{"index.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"interfaces/EsLintGeneratorSchema.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":792,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"interfaces/EsLintGeneratorSchema.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{}}}],["information",{"_index":789,"title":{},"body":{"index.html":{}}}],["initial",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["injector",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["inputs",{"_index":309,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":295,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["installed",{"_index":516,"title":{},"body":{"changelog.html":{}}}],["instead",{"_index":815,"title":{},"body":{"index.html":{}}}],["integrating",{"_index":770,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"interfaces/EsLintGeneratorSchema.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{}},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"interfaces/EsLintGeneratorSchema.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"interfaces/EsLintGeneratorSchema.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{},"overview.html":{}}}],["internal",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iseslintpluginpresent",{"_index":656,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["iseslintpluginpresent(tree",{"_index":733,"title":{},"body":{"miscellaneous/functions.html":{}}}],["issue",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":755,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["jest",{"_index":115,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{}}}],["jestconfigpath",{"_index":130,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{}}}],["jestfilecontent",{"_index":131,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["jestfilecontent.includes('coveragereporters",{"_index":139,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["jestfilecontent.split('\\n",{"_index":144,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["jestlines",{"_index":143,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["joinnormalize",{"_index":27,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["joinnormalize(project.root",{"_index":126,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["js",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js,ts,html",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jscutlery/semver",{"_index":208,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":523,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["json,scss,yml,html,md",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsonschemaforeslintconfigurationfiles",{"_index":737,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jsonschemaforthetypescriptcompilersconfigurationfile",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsx",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":59,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["keys",{"_index":61,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["keywords",{"_index":575,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["latest",{"_index":297,"title":{},"body":{"changelog.html":{}}}],["layout",{"_index":43,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/variables.html":{}}}],["length",{"_index":168,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"miscellaneous/variables.html":{}}}],["library",{"_index":360,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":860,"title":{},"body":{"properties.html":{}}}],["line",{"_index":167,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"miscellaneous/variables.html":{}}}],["lint",{"_index":326,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lintstaged",{"_index":683,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lintstagedconfig",{"_index":871,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lintstagedconfigpath",{"_index":684,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lintstageddefaultconfig",{"_index":685,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lintstagedgenerator",{"_index":680,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["lintstagedgenerator(tree",{"_index":750,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lintstagedrc.json",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lintstagedschematic",{"_index":678,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":15,"title":{},"body":{"interfaces/Codecov.html":{}}}],["main",{"_index":840,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":758,"title":{},"body":{"index.html":{}}}],["major",{"_index":245,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":94,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["matching",{"_index":146,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"interfaces/EsLintGeneratorSchema.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":166,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"miscellaneous/variables.html":{}}}],["member",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memo",{"_index":353,"title":{},"body":{"changelog.html":{}}}],["messages",{"_index":800,"title":{},"body":{"index.html":{}}}],["migrate",{"_index":303,"title":{},"body":{"changelog.html":{}}}],["migration",{"_index":553,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["migrations",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":260,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":861,"title":{},"body":{"properties.html":{}}}],["module",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":851,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monorepo",{"_index":269,"title":{},"body":{"changelog.html":{}}}],["move",{"_index":332,"title":{},"body":{"changelog.html":{}}}],["moved",{"_index":292,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":122,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":308,"title":{},"body":{"changelog.html":{}}}],["nearest",{"_index":53,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":822,"title":{},"body":{"index.html":{}}}],["new",{"_index":46,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newflags",{"_index":123,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["newflags[name",{"_index":125,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["newlines",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngx",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":370,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nofallthroughcasesinswitch",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noimplicitany",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noimplicitreturns",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noimplicitthis",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["non",{"_index":244,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":158,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nrwl",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":100,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["number",{"_index":55,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["nx",{"_index":28,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["nx.json",{"_index":833,"title":{},"body":{"index.html":{}}}],["nx/devkit",{"_index":23,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"dependencies.html":{}}}],["one",{"_index":809,"title":{},"body":{"index.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/EsLintGeneratorSchema.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":748,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":508,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["oss",{"_index":759,"title":{},"body":{"index.html":{}}}],["out",{"_index":293,"title":{},"body":{"changelog.html":{}}}],["override",{"_index":503,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["overrides",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":852,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrites",{"_index":197,"title":{},"body":{"interfaces/GitHubWorkflowGeneratorSchema.html":{}}}],["overwriting",{"_index":836,"title":{},"body":{"index.html":{}}}],["package",{"_index":159,"title":{"dependencies.html":{},"properties.html":{}},"body":{"interfaces/CommitlintConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["package.json",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":727,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parent",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parse",{"_index":24,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["parse(readrawcodecov(tree",{"_index":80,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["parser",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":57,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":138,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["pathgroups",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathgroupsexcludedimporttypes",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":62,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["pattern",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["peer",{"_index":229,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["pipeline",{"_index":826,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":726,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["plugin:@typescript",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugin:import/recommended",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugin:import/typescript",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugin:sonarjs/recommended",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["position",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":323,"title":{},"body":{"changelog.html":{}}}],["precision",{"_index":54,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/variables.html":{}}}],["present",{"_index":735,"title":{},"body":{"miscellaneous/functions.html":{}}}],["preset",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["prettier",{"_index":502,"title":{},"body":{"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prettier/recommended",{"_index":846,"title":{},"body":{"index.html":{}}}],["prettierconfigfile",{"_index":694,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prettierconfigjsonfile",{"_index":695,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prettierdefaultconfig",{"_index":691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prettiergenerator",{"_index":689,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["prettiergenerator(tree",{"_index":751,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prettierplugin",{"_index":696,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prettierrc",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prettierrc.json",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prettierschematic",{"_index":687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["printwidth",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processes",{"_index":764,"title":{},"body":{"index.html":{}}}],["project",{"_index":39,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["projectconfiguration",{"_index":20,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["projectconfiguration.root}/jest.config.ts",{"_index":108,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["projectconfiguration.targets?.test",{"_index":99,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["projectname",{"_index":97,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["projects",{"_index":89,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["projects.foreach((projectconfiguration",{"_index":96,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["prompt",{"_index":808,"title":{},"body":{"index.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"interfaces/EsLintGeneratorSchema.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{},"properties.html":{}}}],["provide",{"_index":838,"title":{},"body":{"index.html":{}}}],["provided",{"_index":804,"title":{},"body":{"index.html":{}}}],["provides",{"_index":766,"title":{},"body":{"index.html":{}}}],["public",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["push",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["pushpin",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["radash",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["range",{"_index":51,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["raw",{"_index":76,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{}}}],["reach",{"_index":44,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/variables.html":{}}}],["readcodecov",{"_index":633,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readcodecov(tree",{"_index":79,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{}}}],["readeslintconfig",{"_index":657,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readeslintconfig(tree",{"_index":736,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readme",{"_index":746,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["readme.md",{"_index":797,"title":{},"body":{"index.html":{}}}],["readrawcodecov",{"_index":634,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readrawcodecov(tree",{"_index":77,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{}}}],["reads",{"_index":75,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{}}}],["receive",{"_index":296,"title":{},"body":{"changelog.html":{}}}],["recommended",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["record",{"_index":154,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"miscellaneous/typealiases.html":{}}}],["releasing",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":325,"title":{},"body":{"changelog.html":{}}}],["renovate",{"_index":291,"title":{},"body":{"changelog.html":{}}}],["repo",{"_index":773,"title":{},"body":{"index.html":{}}}],["report",{"_index":795,"title":{},"body":{"index.html":{}}}],["reporters",{"_index":141,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["repository",{"_index":862,"title":{},"body":{"properties.html":{}}}],["require",{"_index":47,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["require_changes",{"_index":49,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["rescope",{"_index":338,"title":{},"body":{"changelog.html":{}}}],["restore",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["results",{"_index":145,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"interfaces/EsLintGeneratorSchema.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":73,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["returns",{"_index":69,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{}}}],["rocket",{"_index":761,"title":{},"body":{"index.html":{}}}],["round",{"_index":52,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":730,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rules",{"_index":151,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":314,"title":{},"body":{"changelog.html":{}}}],["runs",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["runtime",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["samuelfernandez",{"_index":866,"title":{},"body":{"properties.html":{}}}],["save",{"_index":777,"title":{},"body":{"index.html":{}}}],["saves",{"_index":84,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{}}}],["schema",{"_index":172,"title":{},"body":{"interfaces/EsLintGeneratorSchema.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{}}}],["schematic",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schematics",{"_index":304,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["scope",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":345,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":775,"title":{},"body":{"index.html":{}}}],["semver",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":238,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["settings",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":742,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["shipped",{"_index":814,"title":{},"body":{"index.html":{}}}],["sibling",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["singlequote",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solve",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["sonarjs",{"_index":178,"title":{},"body":{"interfaces/EsLintGeneratorSchema.html":{},"miscellaneous/variables.html":{}}}],["sonarjs/recommended",{"_index":823,"title":{},"body":{"index.html":{}}}],["sonarjs:recommended",{"_index":183,"title":{},"body":{"interfaces/EsLintGeneratorSchema.html":{}}}],["sonarjsrule",{"_index":668,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"interfaces/EsLintGeneratorSchema.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{}}}],["sparkles",{"_index":298,"title":{},"body":{"changelog.html":{}}}],["squeezer/devkit",{"_index":29,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"changelog.html":{},"dependencies.html":{}}}],["squeezer/renovate",{"_index":294,"title":{},"body":{"changelog.html":{}}}],["squeezer/squeezer.git",{"_index":864,"title":{},"body":{"properties.html":{}}}],["squeezer/squeezer/issues",{"_index":859,"title":{},"body":{"properties.html":{}}}],["squeezer/squeezer/tree/main/packages/workspace",{"_index":857,"title":{},"body":{"properties.html":{}}}],["squeezer/workspace",{"_index":756,"title":{},"body":{"index.html":{}}}],["squeezer/workspace:codecovadds",{"_index":788,"title":{},"body":{"index.html":{}}}],["squeezer/workspace:codecovgenerators",{"_index":787,"title":{},"body":{"index.html":{}}}],["squeezer/workspace:commitlintuses",{"_index":798,"title":{},"body":{"index.html":{}}}],["squeezer/workspace:contributors",{"_index":785,"title":{},"body":{"index.html":{}}}],["squeezer/workspace:contributorsadds",{"_index":805,"title":{},"body":{"index.html":{}}}],["squeezer/workspace:eslint",{"_index":782,"title":{},"body":{"index.html":{}}}],["squeezer/workspace:eslintadds",{"_index":811,"title":{},"body":{"index.html":{}}}],["squeezer/workspace:github",{"_index":786,"title":{},"body":{"index.html":{}}}],["squeezer/workspace:lint",{"_index":784,"title":{},"body":{"index.html":{}}}],["squeezer/workspace:prettier",{"_index":781,"title":{},"body":{"index.html":{}}}],["squeezer/workspace:prettierupdates",{"_index":844,"title":{},"body":{"index.html":{}}}],["squeezer/workspace:tsconfig",{"_index":783,"title":{},"body":{"index.html":{}}}],["squeezer/workspace:tsconfigupdates",{"_index":847,"title":{},"body":{"index.html":{}}}],["squeezer/workspacerecommended",{"_index":779,"title":{},"body":{"index.html":{}}}],["src/.../add",{"_index":722,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../codecov.ts",{"_index":724,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../commitlint.ts",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../eslint",{"_index":721,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../generator.compat.ts",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generator.ts",{"_index":723,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../lint",{"_index":872,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../prettier",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../prettier.ts",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rules.ts",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tsconfig.ts",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/generators/codecov/codecov.ts",{"_index":6,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/generators/codecov/generator.compat.ts",{"_index":639,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/generators/codecov/generator.ts",{"_index":641,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/generators/commitlint/commitlint.ts",{"_index":148,"title":{},"body":{"interfaces/CommitlintConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/generators/commitlint/generator.compat.ts",{"_index":644,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/generators/commitlint/generator.ts",{"_index":646,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/generators/contributors/generator.compat.ts",{"_index":648,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/generators/contributors/generator.ts",{"_index":650,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/generators/eslint/eslint",{"_index":652,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/generators/eslint/generator.compat.ts",{"_index":660,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/generators/eslint/generator.ts",{"_index":662,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/generators/eslint/rules.ts",{"_index":664,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/generators/eslint/schema.ts",{"_index":171,"title":{},"body":{"interfaces/EsLintGeneratorSchema.html":{},"coverage.html":{}}}],["src/generators/github",{"_index":189,"title":{},"body":{"interfaces/GitHubWorkflowGeneratorSchema.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/generators/lint",{"_index":676,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/generators/prettier/generator.compat.ts",{"_index":686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/generators/prettier/generator.ts",{"_index":688,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/generators/prettier/prettier",{"_index":690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/generators/prettier/prettier.ts",{"_index":692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/generators/tsconfig/generator.compat.ts",{"_index":697,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/generators/tsconfig/generator.ts",{"_index":699,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/generators/tsconfig/tsconfig.ts",{"_index":701,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/migrations/add",{"_index":704,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stability",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["staged",{"_index":589,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["staged.ts",{"_index":682,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["staged/generator.compat.ts",{"_index":677,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["staged/generator.ts",{"_index":679,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["staged/lint",{"_index":681,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["stageduses",{"_index":841,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":305,"title":{},"body":{"changelog.html":{}}}],["started",{"_index":204,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["statements",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":56,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/variables.html":{}}}],["stop",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["strict",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stricter",{"_index":849,"title":{},"body":{"index.html":{}}}],["string",{"_index":40,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["stringify",{"_index":25,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["stringify(codecov",{"_index":87,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["style",{"_index":813,"title":{},"body":{"index.html":{}}}],["succeed",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["tabwidth",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target",{"_index":38,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["targets",{"_index":831,"title":{},"body":{"index.html":{}}}],["task",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":42,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["testableprojects",{"_index":93,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["testableprojects.foreach((project",{"_index":121,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["testableprojects.set(projectname",{"_index":102,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["testableprojects.size",{"_index":118,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["testtarget",{"_index":98,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["testtarget.executor?.includes('jest",{"_index":101,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["testtarget.options",{"_index":103,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["testtarget.options.jestconfig",{"_index":107,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["those",{"_index":769,"title":{},"body":{"index.html":{}}}],["threshold",{"_index":41,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/variables.html":{}}}],["through",{"_index":762,"title":{},"body":{"index.html":{}}}],["throw",{"_index":134,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["tools",{"_index":763,"title":{},"body":{"index.html":{}}}],["trailingcomma",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":21,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{}}}],["tree.exists(codecovfile",{"_index":74,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["tree.read(getcodecovfile(tree))?.tostring",{"_index":78,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["tree.read(jestconfigpath)?.tostring",{"_index":133,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["tree.write(getcodecovfile(tree",{"_index":86,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["true",{"_index":64,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":520,"title":{},"body":{"changelog.html":{}}}],["ts",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tsconfig",{"_index":754,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tsconfig.base.json",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tsconfig.json",{"_index":848,"title":{},"body":{"index.html":{}}}],["tsconfigdefault",{"_index":702,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tsconfigfile",{"_index":703,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tsconfiggenerator",{"_index":700,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tsconfiggenerator(tree",{"_index":753,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tsconfigschematic",{"_index":698,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tsx",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tweak",{"_index":322,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"interfaces/CommitlintConfig.html":{},"interfaces/EsLintGeneratorSchema.html":{},"interfaces/GitHubWorkflowGeneratorSchema.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":867,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/jest",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["typescript",{"_index":184,"title":{},"body":{"interfaces/EsLintGeneratorSchema.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typescriptrecommended",{"_index":179,"title":{},"body":{"interfaces/EsLintGeneratorSchema.html":{}}}],["typescriptrule",{"_index":669,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":132,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["unresolved",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unused",{"_index":186,"title":{},"body":{"interfaces/EsLintGeneratorSchema.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unusedimports",{"_index":180,"title":{},"body":{"interfaces/EsLintGeneratorSchema.html":{}}}],["unusedimportsrule",{"_index":670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":243,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":278,"title":{},"body":{"changelog.html":{}}}],["updateprojectconfiguration",{"_index":22,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["updateprojectconfiguration(tree",{"_index":105,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{}}}],["updateprojectjestcoverage",{"_index":635,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updateprojectjestcoverage(tree",{"_index":106,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{}}}],["updates",{"_index":129,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["upgrade",{"_index":221,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["upgrades",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":794,"title":{},"body":{"index.html":{}}}],["use",{"_index":201,"title":{},"body":{"interfaces/GitHubWorkflowGeneratorSchema.html":{},"changelog.html":{},"index.html":{}}}],["usenxcloud",{"_index":195,"title":{},"body":{"interfaces/GitHubWorkflowGeneratorSchema.html":{},"index.html":{}}}],["uses",{"_index":803,"title":{},"body":{"index.html":{}}}],["using",{"_index":207,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["utils",{"_index":333,"title":{},"body":{"changelog.html":{}}}],["v",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["v13.1.0",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["v15.4.4",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["v17",{"_index":232,"title":{},"body":{"changelog.html":{}}}],["v17.2.0",{"_index":253,"title":{},"body":{"changelog.html":{}}}],["v18",{"_index":233,"title":{},"body":{"changelog.html":{}}}],["v2.2.2",{"_index":344,"title":{},"body":{"changelog.html":{}}}],["v34.105.3",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["v34.105.4",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["v34.105.5",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["v34.105.6",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["v34.106.0",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["v34.111.0",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["v34.118.2",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["v34.118.3",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["v34.119.0",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["v34.119.2",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["v34.119.4",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["v34.119.5",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["v34.120.0",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["v34.48.1",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["v34.48.2",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["v34.48.3",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["v34.55.0",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["v34.56.0",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["v34.56.1",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["v34.56.2",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["v34.56.3",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["v34.57.0",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["v34.58.0",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["v34.74.2",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["v34.75.0",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["v34.76.0",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["v34.82.2",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["v34.83.0",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["v34.83.1",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["v34.84.0",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["v34.84.1",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["v34.92.1",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["v34.97.6",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["v34.98.0",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["v34.98.1",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["v34.98.2",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["v34.99.0",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["v34.99.1",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["v34.99.2",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["v36",{"_index":299,"title":{},"body":{"changelog.html":{}}}],["v9",{"_index":223,"title":{},"body":{"changelog.html":{}}}],["validator",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":732,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":874,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variety",{"_index":768,"title":{},"body":{"index.html":{}}}],["version",{"_index":279,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versions",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":85,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{}}}],["warn",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["widen",{"_index":228,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":771,"title":{},"body":{"index.html":{}}}],["workaround",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["workflow",{"_index":192,"title":{},"body":{"interfaces/GitHubWorkflowGeneratorSchema.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["workflow/generator.compat.ts",{"_index":672,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["workflow/generator.ts",{"_index":674,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["workflow/schema.ts",{"_index":190,"title":{},"body":{"interfaces/GitHubWorkflowGeneratorSchema.html":{},"coverage.html":{}}}],["workflowadds",{"_index":825,"title":{},"body":{"index.html":{}}}],["workspace",{"_index":259,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["workspaces",{"_index":835,"title":{},"body":{"index.html":{}}}],["wrench",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["writecodecov",{"_index":636,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["writecodecov(tree",{"_index":83,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{}}}],["writeeslintconfig",{"_index":658,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["writeeslintconfig(tree",{"_index":738,"title":{},"body":{"miscellaneous/functions.html":{}}}],["writeprojectstocodecov",{"_index":637,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["writeprojectstocodecov(tree",{"_index":90,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"miscellaneous/functions.html":{}}}],["wrong",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["yaml",{"_index":26,"title":{},"body":{"interfaces/Codecov.html":{},"interfaces/CodecovConfig.html":{},"changelog.html":{},"dependencies.html":{}}}],["yes",{"_index":728,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Codecov.html":{"url":"interfaces/Codecov.html","title":"interface - Codecov","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Codecov\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generators/codecov/codecov.ts\n        \n\n\n            \n                Description\n            \n            \n                Codecov configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            comment\n                                        \n                                \n                                \n                                        \n                                            coverage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            flags\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Comment\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverage:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Coverage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        flags:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Flags\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { getProjects, ProjectConfiguration, Tree, updateProjectConfiguration } from '@nx/devkit';\nimport { parse, stringify } from 'yaml';\n\nimport { joinNormalize } from '@nx-squeezer/devkit';\n\n/**\n * Filename of codecov configuration.\n */\nexport const codecovFile = 'codecov.yml';\n\n/**\n * Filename of codecov dot configuration.\n */\nexport const codecovDotFile = '.codecov.yml';\n\n/**\n * Codecov coverage configuration.\n */\nexport interface CodecovConfig {\n  /**\n   * Target project.\n   */\n  target?: string;\n\n  /**\n   * Threshold for test coverage.\n   */\n  threshold?: string;\n\n  /**\n   * Codecov flags.\n   */\n  flags?: string[];\n}\n\n/**\n * Codecov configuration.\n */\nexport interface Codecov {\n  /** Comment */\n  comment?: {\n    /** Layout */\n    layout: 'reach';\n    /** Behavior */\n    behavior: 'new';\n    /** Require changes */\n    require_changes: boolean;\n  };\n  /** Coverage */\n  coverage: {\n    /** Range */\n    range: string;\n    /** Round */\n    round: 'nearest';\n    /** Precision */\n    precision: number;\n    /** Status */\n    status: {\n      /** Patch */\n      patch: {\n        /** Default */\n        default: CodecovConfig;\n      };\n      /** Project */\n      project: {\n        /** Default */\n        default: CodecovConfig;\n        /** configuration */\n        [key: string]: CodecovConfig;\n      };\n    };\n  };\n  /** Flags */\n  flags?: {\n    /** Flag keys */\n    [key: string]: {\n      /** Paths */\n      paths: string[];\n    };\n  };\n}\n\n/**\n * Default codecov configuration.\n */\nexport const codecovDefault: Codecov = {\n  comment: {\n    layout: 'reach',\n    behavior: 'new',\n    require_changes: true,\n  },\n  coverage: {\n    range: '0..100',\n    round: 'nearest',\n    precision: 1,\n    status: {\n      patch: {\n        default: {\n          target: '50%',\n          threshold: '10%',\n        },\n      },\n      project: {\n        default: {\n          target: '50%',\n          threshold: '10%',\n        },\n      },\n    },\n  },\n};\n\n/**\n * Returns the filename of current codecov configuration.\n */\nexport function getCodecovFile(tree: Tree): string {\n  return tree.exists(codecovFile) ? codecovFile : codecovDotFile;\n}\n\n/**\n * Reads codecov raw configuration.\n */\nexport function readRawCodecov(tree: Tree): string {\n  return tree.read(getCodecovFile(tree))?.toString() ?? '';\n}\n\n/**\n * Reads codecov configuration.\n */\nexport function readCodecov(tree: Tree): Codecov {\n  return parse(readRawCodecov(tree));\n}\n\n/**\n * Generates codecov configuration.\n */\nexport function createCodecov(tree: Tree) {\n  const codecovFile = getCodecovFile(tree);\n  if (tree.exists(codecovFile)) {\n    return;\n  }\n  writeCodecov(tree, codecovDefault);\n}\n\n/**\n * Saves codecov configuration.\n */\nexport function writeCodecov(tree: Tree, codecov: Codecov): void {\n  tree.write(getCodecovFile(tree), stringify(codecov));\n}\n\n/**\n * Adds projects to codecov configuration.\n */\nexport function writeProjectsToCodecov(tree: Tree): void {\n  createCodecov(tree);\n  const codecov = readCodecov(tree);\n\n  console.log(`Generating ${getCodecovFile(tree)} file...`);\n\n  const projects = getProjects(tree);\n  const testableProjects: Map = new Map();\n  const ignoredProjects: string[] = [];\n\n  projects.forEach((projectConfiguration: ProjectConfiguration, projectName: string) => {\n    const testTarget = projectConfiguration.targets?.test;\n    if (testTarget != null && testTarget.executor?.includes('jest')) {\n      testableProjects.set(projectName, projectConfiguration);\n      testTarget.options = {\n        ...testTarget.options,\n        codeCoverage: true,\n      };\n      updateProjectConfiguration(tree, projectName, projectConfiguration);\n      updateProjectJestCoverage(tree, testTarget.options.jestConfig ?? `${projectConfiguration.root}/jest.config.ts`);\n    } else {\n      ignoredProjects.push(projectName);\n    }\n  });\n\n  if (ignoredProjects.length > 0) {\n    const ignoredProjectsList: string = ignoredProjects.join(`, `);\n    console.log(`Ignored projects where a test target with a jest executor was not detected: ${ignoredProjectsList}`);\n  }\n\n  if (testableProjects.size === 0) {\n    console.log(`There are no projects that can be configured with codecov.`);\n    return;\n  }\n\n  testableProjects.forEach((project: ProjectConfiguration, name: string) => {\n    const newFlags: Codecov['flags'] = {};\n    newFlags[name] = { paths: [joinNormalize(project.root)] };\n    codecov.flags = { ...codecov.flags, ...newFlags };\n\n    codecov.coverage.status.project[name] = { flags: [name] };\n  });\n\n  writeCodecov(tree, codecov);\n}\n\n/**\n * Updates test coverage configuration for jest.\n */\nexport function updateProjectJestCoverage(tree: Tree, jestConfigPath: string) {\n  const jestFileContent: string | undefined = tree.read(jestConfigPath)?.toString();\n\n  if (jestFileContent == null) {\n    throw new Error(`Jest config expected at path: ${jestConfigPath}`);\n  }\n\n  if (jestFileContent.includes('coverageReporters')) {\n    console.log(`Coverage reporters already configured for file: ${jestConfigPath}`);\n    return;\n  }\n\n  const jestLines = jestFileContent.split('\\n');\n\n  for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CodecovConfig.html":{"url":"interfaces/CodecovConfig.html","title":"interface - CodecovConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CodecovConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generators/codecov/codecov.ts\n        \n\n\n            \n                Description\n            \n            \n                Codecov coverage configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            flags\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            threshold\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        flags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        flags:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Codecov flags.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Target project.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        threshold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        threshold:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Threshold for test coverage.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { getProjects, ProjectConfiguration, Tree, updateProjectConfiguration } from '@nx/devkit';\nimport { parse, stringify } from 'yaml';\n\nimport { joinNormalize } from '@nx-squeezer/devkit';\n\n/**\n * Filename of codecov configuration.\n */\nexport const codecovFile = 'codecov.yml';\n\n/**\n * Filename of codecov dot configuration.\n */\nexport const codecovDotFile = '.codecov.yml';\n\n/**\n * Codecov coverage configuration.\n */\nexport interface CodecovConfig {\n  /**\n   * Target project.\n   */\n  target?: string;\n\n  /**\n   * Threshold for test coverage.\n   */\n  threshold?: string;\n\n  /**\n   * Codecov flags.\n   */\n  flags?: string[];\n}\n\n/**\n * Codecov configuration.\n */\nexport interface Codecov {\n  /** Comment */\n  comment?: {\n    /** Layout */\n    layout: 'reach';\n    /** Behavior */\n    behavior: 'new';\n    /** Require changes */\n    require_changes: boolean;\n  };\n  /** Coverage */\n  coverage: {\n    /** Range */\n    range: string;\n    /** Round */\n    round: 'nearest';\n    /** Precision */\n    precision: number;\n    /** Status */\n    status: {\n      /** Patch */\n      patch: {\n        /** Default */\n        default: CodecovConfig;\n      };\n      /** Project */\n      project: {\n        /** Default */\n        default: CodecovConfig;\n        /** configuration */\n        [key: string]: CodecovConfig;\n      };\n    };\n  };\n  /** Flags */\n  flags?: {\n    /** Flag keys */\n    [key: string]: {\n      /** Paths */\n      paths: string[];\n    };\n  };\n}\n\n/**\n * Default codecov configuration.\n */\nexport const codecovDefault: Codecov = {\n  comment: {\n    layout: 'reach',\n    behavior: 'new',\n    require_changes: true,\n  },\n  coverage: {\n    range: '0..100',\n    round: 'nearest',\n    precision: 1,\n    status: {\n      patch: {\n        default: {\n          target: '50%',\n          threshold: '10%',\n        },\n      },\n      project: {\n        default: {\n          target: '50%',\n          threshold: '10%',\n        },\n      },\n    },\n  },\n};\n\n/**\n * Returns the filename of current codecov configuration.\n */\nexport function getCodecovFile(tree: Tree): string {\n  return tree.exists(codecovFile) ? codecovFile : codecovDotFile;\n}\n\n/**\n * Reads codecov raw configuration.\n */\nexport function readRawCodecov(tree: Tree): string {\n  return tree.read(getCodecovFile(tree))?.toString() ?? '';\n}\n\n/**\n * Reads codecov configuration.\n */\nexport function readCodecov(tree: Tree): Codecov {\n  return parse(readRawCodecov(tree));\n}\n\n/**\n * Generates codecov configuration.\n */\nexport function createCodecov(tree: Tree) {\n  const codecovFile = getCodecovFile(tree);\n  if (tree.exists(codecovFile)) {\n    return;\n  }\n  writeCodecov(tree, codecovDefault);\n}\n\n/**\n * Saves codecov configuration.\n */\nexport function writeCodecov(tree: Tree, codecov: Codecov): void {\n  tree.write(getCodecovFile(tree), stringify(codecov));\n}\n\n/**\n * Adds projects to codecov configuration.\n */\nexport function writeProjectsToCodecov(tree: Tree): void {\n  createCodecov(tree);\n  const codecov = readCodecov(tree);\n\n  console.log(`Generating ${getCodecovFile(tree)} file...`);\n\n  const projects = getProjects(tree);\n  const testableProjects: Map = new Map();\n  const ignoredProjects: string[] = [];\n\n  projects.forEach((projectConfiguration: ProjectConfiguration, projectName: string) => {\n    const testTarget = projectConfiguration.targets?.test;\n    if (testTarget != null && testTarget.executor?.includes('jest')) {\n      testableProjects.set(projectName, projectConfiguration);\n      testTarget.options = {\n        ...testTarget.options,\n        codeCoverage: true,\n      };\n      updateProjectConfiguration(tree, projectName, projectConfiguration);\n      updateProjectJestCoverage(tree, testTarget.options.jestConfig ?? `${projectConfiguration.root}/jest.config.ts`);\n    } else {\n      ignoredProjects.push(projectName);\n    }\n  });\n\n  if (ignoredProjects.length > 0) {\n    const ignoredProjectsList: string = ignoredProjects.join(`, `);\n    console.log(`Ignored projects where a test target with a jest executor was not detected: ${ignoredProjectsList}`);\n  }\n\n  if (testableProjects.size === 0) {\n    console.log(`There are no projects that can be configured with codecov.`);\n    return;\n  }\n\n  testableProjects.forEach((project: ProjectConfiguration, name: string) => {\n    const newFlags: Codecov['flags'] = {};\n    newFlags[name] = { paths: [joinNormalize(project.root)] };\n    codecov.flags = { ...codecov.flags, ...newFlags };\n\n    codecov.coverage.status.project[name] = { flags: [name] };\n  });\n\n  writeCodecov(tree, codecov);\n}\n\n/**\n * Updates test coverage configuration for jest.\n */\nexport function updateProjectJestCoverage(tree: Tree, jestConfigPath: string) {\n  const jestFileContent: string | undefined = tree.read(jestConfigPath)?.toString();\n\n  if (jestFileContent == null) {\n    throw new Error(`Jest config expected at path: ${jestConfigPath}`);\n  }\n\n  if (jestFileContent.includes('coverageReporters')) {\n    console.log(`Coverage reporters already configured for file: ${jestConfigPath}`);\n    return;\n  }\n\n  const jestLines = jestFileContent.split('\\n');\n\n  for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommitlintConfig.html":{"url":"interfaces/CommitlintConfig.html","title":"interface - CommitlintConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CommitlintConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generators/commitlint/commitlint.ts\n        \n\n\n            \n                Description\n            \n            \n                Commitlint configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            extends\n                                        \n                                \n                                \n                                        \n                                            rules\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        extends\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extends:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configurations to extend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rules:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rules.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export const commitlintCli = '@commitlint/cli';\n\n/**\n * Commitlint conventional config NPM package.\n */\nexport const commitlintConfigConventional = '@commitlint/config-conventional';\n\n/**\n * Filename of commitlint configuration.\n */\nexport const commitlintConfigPath = '.commitlintrc.json';\n\n/**\n * Commitlint configuration.\n */\nexport interface CommitlintConfig {\n  /**\n   * Configurations to extend.\n   */\n  extends: string[];\n\n  /**\n   * Rules.\n   */\n  rules: Record;\n}\n\n/**\n * Commitlint default configuration.\n */\nexport const commitlintDefaultConfig: CommitlintConfig = {\n  extends: ['@commitlint/config-conventional'],\n  rules: {\n    'body-max-line-length': [0, 'always'],\n  },\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EsLintGeneratorSchema.html":{"url":"interfaces/EsLintGeneratorSchema.html","title":"interface - EsLintGeneratorSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EsLintGeneratorSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generators/eslint/schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Schema for ESLint generator.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            deprecation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            eslintRecommended\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            importOrder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sonarJs\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            typescriptRecommended\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unusedImports\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deprecation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deprecation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Applies deprecation.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eslintRecommended\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eslintRecommended:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Applies eslint:recommended.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        importOrder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        importOrder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Applies import.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sonarJs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sonarJs:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Applies sonarjs:recommended.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typescriptRecommended\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        typescriptRecommended:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Applies @typescript-eslint/recommended.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unusedImports\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unusedImports:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Applies unused-imports.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface EsLintGeneratorSchema {\n  /**\n   * Applies eslint:recommended.\n   */\n  eslintRecommended?: boolean;\n\n  /**\n   * Applies sonarjs:recommended.\n   */\n  sonarJs?: boolean;\n\n  /**\n   * Applies unused-imports.\n   */\n  unusedImports?: boolean;\n\n  /**\n   * Applies @typescript-eslint/recommended.\n   */\n  typescriptRecommended?: boolean;\n\n  /**\n   * Applies deprecation.\n   */\n  deprecation?: boolean;\n\n  /**\n   * Applies import.\n   */\n  importOrder?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitHubWorkflowGeneratorSchema.html":{"url":"interfaces/GitHubWorkflowGeneratorSchema.html","title":"interface - GitHubWorkflowGeneratorSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitHubWorkflowGeneratorSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generators/github-workflow/schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Schema of GitHub workflow generator.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            branch\n                                        \n                                \n                                \n                                        \n                                            force\n                                        \n                                \n                                \n                                        \n                                            useNxCloud\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branch:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Base branch.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        force\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        force:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Overwrites existing CI workflow.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useNxCloud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useNxCloud:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configure CI workflow to use Nx Cloud.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface GitHubWorkflowGeneratorSchema {\n  /**\n   * Base branch.\n   */\n  branch: string;\n\n  /**\n   * Configure CI workflow to use Nx Cloud.\n   */\n  useNxCloud: boolean;\n\n  /**\n   * Overwrites existing CI workflow.\n   */\n  force: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nThis file was generated using @jscutlery/semver.\n6.0.4 (2024-02-08)\n6.0.3 (2024-02-07)\n6.0.2 (2024-02-07)\n6.0.1 (2024-02-06)\n6.0.0 (2024-02-06)\n⚠ BREAKING CHANGES\n\ndeps: Upgrade to husky v9\n\nFeatures\n\ndeps: :arrow_up: upgrade husky to v9 (#1191) (81d1ee4)\nwiden peer dependency to include Nx v17 and v18 (#1190) (4b148a1)\n\nBug Fixes\n\ndeps: set nx-squeezer/devkit as peer dep (082c126)\n\n5.0.2 (2024-02-02)\n5.0.1 (2024-02-02)\nBug Fixes\n\ndeps: :arrow_up: update all non-major dependencies (#1097) (fd00a7a)\ndeps: upgrade Angular to 17.1.0 (#1172) (a1f0daf)\nupgrade nx to v17.2.0 (#1099) (85f83e1)\n\n5.0.0 (2023-12-08)\n⚠ BREAKING CHANGES\n\nworkspace: Upgrade to Nx v17\n\nMiscellaneous Chores\n\nworkspace: upgrade Nx to v17 (b11e7e1)\n\n4.0.6 (2023-12-08)\n4.0.5 (2023-12-03)\nBug Fixes\n\ndeps: :arrow_up: update all non-major dependencies (826075f)\ndeps: :arrow_up: update all non-major dependencies (9776c36)\ndeps: :arrow_up: update all non-major dependencies (0f05af7)\ndeps: :arrow_up: update nx monorepo (cdf3758)\ndeps: ⬆️ update nx monorepo to v17 (major) (#1013) (009816c)\nworkspace: :arrow_up: update peer dependency of nx to v17 (06f7e5f)\n\n4.0.4 (2023-09-01)\nDependency Updates\n\ndevkit updated to version 4.0.3\n\nBug Fixes\n\ndeps: :arrow_up: update all non-major dependencies (#912) (1983221)\ndeps: :arrow_up: update nx monorepo (4b28d65)\n\n4.0.3 (2023-08-14)\nDependency Updates\n\ndevkit updated to version 4.0.2\n\n4.0.2 (2023-08-14)\nDependency Updates\n\ndevkit updated to version 4.0.1\n\n4.0.1 (2023-07-27)\n4.0.0 (2023-07-25)\nDependency Updates\n\ndevkit updated to version 3.1.1\n\n⚠ BREAKING CHANGES\n\nworkspace: Renovate features have been moved out to the package @nx-squeezer/renovate. Install it to receive the latest features.\n\nFeatures\n\nrenovate: :sparkles: upgrade to renovate v36 (#830) (5bec382)\nworkspace: :boom: migrate renovate schematics to standalone package (#831) (fd95b68)\nworkspace: :sparkles: migrate to named inputs (#680) (#835) (faaebcf)\n\nBug Fixes\n\n:hammer: run renovate every hour (#827) (3257bb0)\n\n3.1.1 (2023-07-07)\nDependency Updates\n\ndevkit updated to version 3.1.0\n\nBug Fixes\n\ndeps: :arrow_up: update all non-major dependencies (2c0010c)\ndeps: :arrow_up: update all non-major dependencies (1948e5b)\ndeps: :arrow_up: update all non-major dependencies (701e487)\nrenovate: :bug: tweak post upgrade command for nx migrate, remove workspace lint (#717) (9f21437)\n\n3.1.0 (2023-05-17)\nDependency Updates\n\ndevkit updated to version 3.0.0\n\nFeatures\n\ndevkit: :sparkles: move github workflow utils from workspace to devkit project (#684) (c56a48d)\n\n3.0.0 (2023-05-16)\nDependency Updates\n\ndevkit updated to version 2.1.3\n\n⚠ BREAKING CHANGES\n\ndeps: Upgrade to Angular and Nx 16\n\nFeatures\n\n:package: rescope to @nx (#681) (#682) (e2fd0a8)\ndeps: :arrow_up: update monorepo to Angular and Nx 16 (#679) (733a9f8)\n\nBug Fixes\n\ndeps: :arrow_up: update dependency yaml to v2.2.2 [security] (#635) (22bd595)\n\n2.1.3 (2023-04-17)\nDependency Updates\n\ndevkit updated to version 2.1.2\n\n2.1.2 (2023-04-17)\nDependency Updates\n\ndevkit updated to version 0.3.0\n\n2.1.1 (2023-04-05)\nDependency Updates\n\ndevkit updated to version 0.2.1\n\nBug Fixes\n\ndevkit: :memo: fix dependencies (#579) (7fac52b)\n\n2.1.0 (2023-04-05)\nDependency Updates\n\ndevkit updated to version 0.2.0\n\nFeatures\n\n:art: move library code from workspace into devkit (#577) (9d82481)\n\n2.0.3 (2023-04-05)\n2.0.2 (2023-04-04)\n2.0.1 (2023-03-28)\n2.0.0 (2023-03-13)\n⚠ BREAKING CHANGES\n\nUpdate to node 18\n\nFeatures\n\n:arrow_up: update to node 18 and npm 9 (#517) (#525) (2630510)\n\n1.4.2 (2023-03-07)\n1.4.1 (2023-02-21)\n1.4.0 (2023-02-14)\nFeatures\n\nworkspace: :sparkles: renovate adds create migrations script (#390) (#451) (6bb96d2)\n\n1.3.0 (2023-02-13)\nFeatures\n\nworkspace: :sparkles: configure renovate to widen dependencies (#434) (5e37f14), closes #432\nworkspace: :sparkles: widen peer dependencies range (#396) (#450) (31a9145)\n\nBug Fixes\n\ndeps: :arrow_up: update all non-major dependencies (47a07dd)\nworkspace: fix wrong config for renovate widen preset (38ec4ec)\n\n1.2.3 (2023-02-10)\nBug Fixes\n\nworkspace: :bug: renovate runs npm install for nrwl (#429) (9eaa3c0), closes #427\n\n1.2.2 (2023-02-07)\nBug Fixes\n\ndeps: :arrow_up: update dependency renovate to v34.118.2 (e3df031)\ndeps: :arrow_up: update dependency renovate to v34.118.3 (f885272)\ndeps: :arrow_up: update dependency renovate to v34.119.0 (e6efe74)\ndeps: :arrow_up: update dependency renovate to v34.119.2 (7506493)\ndeps: :arrow_up: update dependency renovate to v34.119.4 (#419) (46b7777)\ndeps: :arrow_up: update dependency renovate to v34.119.5 (a341d1d)\ndeps: :arrow_up: update dependency renovate to v34.120.0 (e1e8877)\nworkspace: :package: fix homepage in package.json (16ee20b)\n\n1.2.1 (2023-01-30)\nBug Fixes\n\nworkspace: :pushpin: allow semver minor versions for peer deps (#390) (#395) (940c611)\nworkspace: :pushpin: update dependencies to only required (#390) (#394) (03763d5)\nworkspace: fix eslint for e2e-projects (#393) (5441666)\n\n1.2.0 (2023-01-27)\nFeatures\n\nngx-async-injector: :sparkles: initial implementation of async injector (#264) (0bdb368)\nworkspace: :bug: run post upgrade commands on renovate for @nx- scope (4192020)\n\nBug Fixes\n\ndeps: :arrow_up: update all non-major dependencies (c4d501c)\ndeps: :arrow_up: update all non-major dependencies (93df4e6)\ndeps: :arrow_up: update all non-major dependencies (77cdce1)\ndeps: :arrow_up: update all non-major dependencies (#339) (ff3bf67)\ndeps: :arrow_up: update all non-major dependencies (#380) (8561b60)\ndeps: :arrow_up: update dependency @angular/cli to ~15.1.1 (bfa8e5f)\ndeps: :arrow_up: update dependency renovate to v34.105.3 (0d74dcb)\ndeps: :arrow_up: update dependency renovate to v34.105.4 (272e03f)\ndeps: :arrow_up: update dependency renovate to v34.105.5 (4e8694c)\ndeps: :arrow_up: update dependency renovate to v34.105.6 (0aa7944)\ndeps: :arrow_up: update dependency renovate to v34.106.0 (9fc1978)\ndeps: :arrow_up: update dependency renovate to v34.111.0 (#378) (7ddd6ce)\ndeps: :arrow_up: update dependency renovate to v34.82.2 (5babb7b)\ndeps: :arrow_up: update dependency renovate to v34.83.0 (a52932a)\ndeps: :arrow_up: update dependency renovate to v34.83.1 (364fed2)\ndeps: :arrow_up: update dependency renovate to v34.84.0 (f28b042)\ndeps: :arrow_up: update dependency renovate to v34.84.1 (ca335b7)\ndeps: :arrow_up: update dependency renovate to v34.92.1 (#311) (e59b281)\ndeps: :arrow_up: update dependency renovate to v34.97.6 (5c2e93f)\ndeps: :arrow_up: update dependency renovate to v34.98.0 (039cde9)\ndeps: :arrow_up: update dependency renovate to v34.98.1 (76b300a)\ndeps: :arrow_up: update dependency renovate to v34.98.2 (e2f231c)\ndeps: :arrow_up: update dependency renovate to v34.99.0 (ba8a11f)\ndeps: :arrow_up: update dependency renovate to v34.99.1 (2032764)\ndeps: :arrow_up: update dependency renovate to v34.99.2 (d2cbba4)\nrenovate: :bug: disable major version upgrade of @types/jest (98c3e99)\nworkspace: :bug: configure prettier override for html (#367) (0dd0f23), closes #357\nworkspace: :bug: fix order of commands for angular renovate upgrades (#275) (bc0eca8)\nworkspace: :bug: renovate config validator task will succeed even if not installed (#260) (838c59d), closes #259\nworkspace: :bug: try generating empty migrations json for renovate (#258) (0a4ef15)\n\n1.1.0 (2023-01-04)\nFeatures\n\nworkspace: :package: restore using dependencies (5e3a610)\nworkspace: :package: stop using peer dependencies (#256) (97e37d6), closes #255\n\nBug Fixes\n\ndeps: ⬆️ update nrwl workspace to v15.4.4 (#257) (1e1c6d2)\n\n1.0.2 (2023-01-04)\nBug Fixes\n\ndeps: :arrow_up: update dependency renovate to v34.74.2 (8af1f8b)\ndeps: :arrow_up: update dependency renovate to v34.75.0 (0bd435b)\ndeps: :arrow_up: update dependency renovate to v34.76.0 (c94e9ae)\nworkspace: :bug: solve runtime issue when adding renovate (#252) (#254) (889d376)\nworkspace: :bug: use bash script for renovate migrations (#253) (c33b76a)\nworkspace: :bug: use npm script for migration script (#250) (e302132)\nworkspace: :bug: use path exists to allow failure in migrations on renovate (#242) (4690a74)\n\n1.0.1 (2022-12-30)\nBug Fixes\n\nrenovate: :bug: update command to run migrations (#235) (fd29583)\nworkspace: :bug: use path-exists command to test if migrations exist (cb00d30)\nworkspace: :bug: workaround by allowing migration script to fail (71e42ce)\n\n1.0.0 (2022-12-30)\n⚠ BREAKING CHANGES\n\nworkspace: first stable version\n\nFeatures\n\nworkspace: :sparkles: first stable version (ff41dbe)\n\n0.3.0 (2022-12-30)\nFeatures\n\nworkspace: :memo: add keywords to package.json (047fe7a)\n\n0.2.1 (2022-12-30)\nBug Fixes\n\nworkspace: :package: deploy to npm (1ee9f2d)\n\n0.2.0 (2022-12-30)\nFeatures\n\nworkspace: :sparkles: add stability days to renovate for npm updates (#208) (a53d944)\nworkspace: :sparkles: upgrade nrwl-nx-action to v (#94) (21ef002)\n\nBug Fixes\n\ndeps: :arrow_up: update all non-major dependencies (09eba7d)\ndeps: :arrow_up: update all non-major dependencies (7b955c7)\ndeps: :arrow_up: update dependency lint-staged to v13.1.0 (82fe334)\ndeps: :arrow_up: update dependency renovate to v34.48.1 (cf94bdf)\ndeps: :arrow_up: update dependency renovate to v34.48.2 (a0bf3c8)\ndeps: :arrow_up: update dependency renovate to v34.48.3 (eef673a)\ndeps: :arrow_up: update dependency renovate to v34.55.0 (8fe14b9)\ndeps: :arrow_up: update dependency renovate to v34.56.0 (b408f48)\ndeps: :arrow_up: update dependency renovate to v34.56.1 (c83d98b)\ndeps: :arrow_up: update dependency renovate to v34.56.2 (dd6b6a8)\ndeps: :arrow_up: update dependency renovate to v34.56.3 (7c1e0cf)\ndeps: :arrow_up: update dependency renovate to v34.57.0 (89a76c1)\ndeps: :arrow_up: update dependency renovate to v34.58.0 (af53827)\nworkspace: :bug: allow renovate migrations to fail (#207) (7899395), closes #197\n\n0.1.2 (2022-12-03)\nBug Fixes\n\nworkspace: bump patch version with docs (98b16af)\n\n0.1.1 (2022-12-03)\nBug Fixes\n\nworkspace: :wrench: push files when releasing (7954de9)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/generators/codecov/codecov.ts\n            \n            interface\n            Codecov\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/generators/codecov/codecov.ts\n            \n            interface\n            CodecovConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/generators/codecov/codecov.ts\n            \n            function\n            createCodecov\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/codecov/codecov.ts\n            \n            function\n            getCodecovFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/codecov/codecov.ts\n            \n            function\n            readCodecov\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/codecov/codecov.ts\n            \n            function\n            readRawCodecov\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/codecov/codecov.ts\n            \n            function\n            updateProjectJestCoverage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/codecov/codecov.ts\n            \n            function\n            writeCodecov\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/codecov/codecov.ts\n            \n            function\n            writeProjectsToCodecov\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/codecov/codecov.ts\n            \n            variable\n            codecovDefault\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/codecov/codecov.ts\n            \n            variable\n            codecovDotFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/codecov/codecov.ts\n            \n            variable\n            codecovFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/codecov/generator.compat.ts\n            \n            variable\n            codecovSchematic\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/codecov/generator.ts\n            \n            function\n            codecovGenerator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/commitlint/commitlint.ts\n            \n            interface\n            CommitlintConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/generators/commitlint/commitlint.ts\n            \n            variable\n            commitlintCli\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/commitlint/commitlint.ts\n            \n            variable\n            commitlintConfigConventional\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/commitlint/commitlint.ts\n            \n            variable\n            commitlintConfigPath\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/commitlint/commitlint.ts\n            \n            variable\n            commitlintDefaultConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/commitlint/generator.compat.ts\n            \n            variable\n            commitlintSchematic\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/commitlint/generator.ts\n            \n            function\n            commitlintGenerator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/contributors/generator.compat.ts\n            \n            variable\n            contributorsSchematic\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/contributors/generator.ts\n            \n            function\n            contributorsGenerator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/eslint/eslint-config.ts\n            \n            function\n            addEsLintPlugin\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/eslint/eslint-config.ts\n            \n            function\n            addEsLintRules\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/eslint/eslint-config.ts\n            \n            function\n            isEsLintPluginPresent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/eslint/eslint-config.ts\n            \n            function\n            readEsLintConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/eslint/eslint-config.ts\n            \n            function\n            writeEsLintConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/eslint/eslint-config.ts\n            \n            variable\n            eslintConfigFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/eslint/generator.compat.ts\n            \n            variable\n            eslintSchematic\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/eslint/generator.ts\n            \n            function\n            eslintGenerator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/eslint/rules.ts\n            \n            variable\n            deprecationRule\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/eslint/rules.ts\n            \n            variable\n            esLintRule\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/eslint/rules.ts\n            \n            variable\n            importOrderRule\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/eslint/rules.ts\n            \n            variable\n            sonarJSRule\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/eslint/rules.ts\n            \n            variable\n            typescriptRule\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/eslint/rules.ts\n            \n            variable\n            unusedImportsRule\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/eslint/schema.ts\n            \n            interface\n            EsLintGeneratorSchema\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/generators/github-workflow/generator.compat.ts\n            \n            variable\n            gitHubWorkflowSchematic\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/github-workflow/generator.ts\n            \n            function\n            gitHubWorkflowGenerator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/github-workflow/schema.ts\n            \n            interface\n            GitHubWorkflowGeneratorSchema\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/generators/lint-staged/generator.compat.ts\n            \n            variable\n            lintStagedSchematic\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/lint-staged/generator.ts\n            \n            function\n            lintStagedGenerator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/lint-staged/lint-staged.ts\n            \n            variable\n            lintStaged\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/lint-staged/lint-staged.ts\n            \n            variable\n            lintStagedConfigPath\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/lint-staged/lint-staged.ts\n            \n            variable\n            lintStagedDefaultConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/prettier/generator.compat.ts\n            \n            variable\n            prettierSchematic\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/prettier/generator.ts\n            \n            function\n            prettierGenerator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/prettier/prettier-default-config.ts\n            \n            variable\n            prettierDefaultConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/prettier/prettier.ts\n            \n            variable\n            eslintPluginPrettier\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/prettier/prettier.ts\n            \n            variable\n            prettierConfigFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/prettier/prettier.ts\n            \n            variable\n            prettierConfigJsonFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/prettier/prettier.ts\n            \n            variable\n            prettierPlugin\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/tsconfig/generator.compat.ts\n            \n            variable\n            tsConfigSchematic\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/tsconfig/generator.ts\n            \n            function\n            tsConfigGenerator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/tsconfig/tsconfig.ts\n            \n            variable\n            tsConfigDefault\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/generators/tsconfig/tsconfig.ts\n            \n            variable\n            tsConfigFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/migrations/add-html-override-to-prettier-config/add-html-override-to-prettier-config.ts\n            \n            function\n            addHtmlOverrideToPrettierConfig\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            node-fetch-commonjs : ^3.3.2\n        \n            yaml : ^2.3.4\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @commitlint/cli : ^18.0.0\n        \n            @commitlint/config-conventional : ^18.0.0\n        \n            @nx/devkit : ^17.0.0 || ^18.0.0\n        \n            @nx-squeezer/devkit : ^2.0.0 || ^3.0.0\n        \n            husky : ^9.0.0\n        \n            lint-staged : ^15.0.0\n        \n            nx : ^17.0.0 || ^18.0.0\n        \n            radash : ^11.0.0\n        \n            prettier : ^2.8.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addEsLintPlugin   (src/.../eslint-config.ts)\n                        \n                        \n                            addEsLintRules   (src/.../eslint-config.ts)\n                        \n                        \n                            addHtmlOverrideToPrettierConfig   (src/.../add-html-override-to-prettier-config.ts)\n                        \n                        \n                            codecovGenerator   (src/.../generator.ts)\n                        \n                        \n                            commitlintGenerator   (src/.../generator.ts)\n                        \n                        \n                            contributorsGenerator   (src/.../generator.ts)\n                        \n                        \n                            createCodecov   (src/.../codecov.ts)\n                        \n                        \n                            eslintGenerator   (src/.../generator.ts)\n                        \n                        \n                            getCodecovFile   (src/.../codecov.ts)\n                        \n                        \n                            gitHubWorkflowGenerator   (src/.../generator.ts)\n                        \n                        \n                            isEsLintPluginPresent   (src/.../eslint-config.ts)\n                        \n                        \n                            lintStagedGenerator   (src/.../generator.ts)\n                        \n                        \n                            prettierGenerator   (src/.../generator.ts)\n                        \n                        \n                            readCodecov   (src/.../codecov.ts)\n                        \n                        \n                            readEsLintConfig   (src/.../eslint-config.ts)\n                        \n                        \n                            readRawCodecov   (src/.../codecov.ts)\n                        \n                        \n                            tsConfigGenerator   (src/.../generator.ts)\n                        \n                        \n                            updateProjectJestCoverage   (src/.../codecov.ts)\n                        \n                        \n                            writeCodecov   (src/.../codecov.ts)\n                        \n                        \n                            writeEsLintConfig   (src/.../eslint-config.ts)\n                        \n                        \n                            writeProjectsToCodecov   (src/.../codecov.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/generators/eslint/eslint-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addEsLintPlugin\n                        \n                    \n                \n            \n            \n                \naddEsLintPlugin(tree: Tree, plugin: string, after?: string)\n                \n            \n\n\n\n\n            \n                \n                    Adds an ESLInt plugin.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plugin\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    after\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addEsLintRules\n                        \n                    \n                \n            \n            \n                \naddEsLintRules(tree: Tree, rule: EsLintConfigurationOverrideRule, path)\n                \n            \n\n\n\n\n            \n                \n                    Adds ESLInt rules.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    rule\n                                    \n                                                EsLintConfigurationOverrideRule\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    path\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        eslintConfigFile\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEsLintPluginPresent\n                        \n                    \n                \n            \n            \n                \nisEsLintPluginPresent(tree: Tree, plugin: string)\n                \n            \n\n\n\n\n            \n                \n                    Checks if an ESLInt plugin is present.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plugin\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readEsLintConfig\n                        \n                    \n                \n            \n            \n                \nreadEsLintConfig(tree: Tree, path)\n                \n            \n\n\n\n\n            \n                \n                    Generator that reads ESLint configuration.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    path\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        eslintConfigFile\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     JSONSchemaForESLintConfigurationFiles\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeEsLintConfig\n                        \n                    \n                \n            \n            \n                \nwriteEsLintConfig(tree: Tree, eslintConfig: JSONSchemaForESLintConfigurationFiles, path)\n                \n            \n\n\n\n\n            \n                \n                    Generator that updates ESLint configuration.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    eslintConfig\n                                    \n                                            JSONSchemaForESLintConfigurationFiles\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    path\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        eslintConfigFile\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/migrations/add-html-override-to-prettier-config/add-html-override-to-prettier-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addHtmlOverrideToPrettierConfig\n                        \n                    \n                \n            \n            \n                \naddHtmlOverrideToPrettierConfig(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Nx migration to add html to prettier configuration.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/generators/codecov/generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        codecovGenerator\n                        \n                    \n                \n            \n            \n                \ncodecovGenerator(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Nx generator to setup codecov.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/generators/commitlint/generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        commitlintGenerator\n                        \n                    \n                \n            \n            \n                \ncommitlintGenerator(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Nx generator to setup commitlint.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/generators/contributors/generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        contributorsGenerator\n                        \n                    \n                \n            \n            \n                \ncontributorsGenerator(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Nx generator to setup contributors in README.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/generators/codecov/codecov.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCodecov\n                        \n                    \n                \n            \n            \n                \ncreateCodecov(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Generates codecov configuration.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCodecovFile\n                        \n                    \n                \n            \n            \n                \ngetCodecovFile(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Returns the filename of current codecov configuration.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readCodecov\n                        \n                    \n                \n            \n            \n                \nreadCodecov(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Reads codecov configuration.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Codecov\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readRawCodecov\n                        \n                    \n                \n            \n            \n                \nreadRawCodecov(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Reads codecov raw configuration.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProjectJestCoverage\n                        \n                    \n                \n            \n            \n                \nupdateProjectJestCoverage(tree: Tree, jestConfigPath: string)\n                \n            \n\n\n\n\n            \n                \n                    Updates test coverage configuration for jest.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jestConfigPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeCodecov\n                        \n                    \n                \n            \n            \n                \nwriteCodecov(tree: Tree, codecov: Codecov)\n                \n            \n\n\n\n\n            \n                \n                    Saves codecov configuration.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    codecov\n                                    \n                                                Codecov\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeProjectsToCodecov\n                        \n                    \n                \n            \n            \n                \nwriteProjectsToCodecov(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Adds projects to codecov configuration.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/generators/eslint/generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        eslintGenerator\n                        \n                    \n                \n            \n            \n                \neslintGenerator(tree: Tree, options: EsLintGeneratorSchema)\n                \n            \n\n\n\n\n            \n                \n                    Nx generator to setup ESLint in a workspace.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                EsLintGeneratorSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/generators/github-workflow/generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gitHubWorkflowGenerator\n                        \n                    \n                \n            \n            \n                \ngitHubWorkflowGenerator(tree: Tree, options: GitHubWorkflowGeneratorSchema)\n                \n            \n\n\n\n\n            \n                \n                    Nx generator to setup a CI GitHub workflow.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                GitHubWorkflowGeneratorSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/generators/lint-staged/generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lintStagedGenerator\n                        \n                    \n                \n            \n            \n                \nlintStagedGenerator(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Nx generator to setup lint-staged and husky.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/generators/prettier/generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prettierGenerator\n                        \n                    \n                \n            \n            \n                \nprettierGenerator(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Nx generator to setup prettier and format files in the workspace.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/generators/tsconfig/generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tsConfigGenerator\n                        \n                    \n                \n            \n            \n                \ntsConfigGenerator(tree: Tree)\n                \n            \n\n\n\n\n            \n                \n                    Nx generator to setup tsconfig and fix issues in the workspace.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                            Tree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@nx-squeezer/workspace \n      \nContributing and maintaining OSS projects can be boosted :rocket: through a set of tools :hammer: and processes :gear:. This package provides generators for Nx and Angular to configure a variety of those tools with just a command, integrating without any friction with your existing repo. Check the documentation to see all available features.\nSetup \nnpm install --save-dev @nx-squeezer/workspaceRecommended order to setup all the generators:\nnx g @nx-squeezer/workspace:prettier\nnx g @nx-squeezer/workspace:eslint\nnx g @nx-squeezer/workspace:tsconfig\nnx g @nx-squeezer/workspace:lint-staged\nnx g @nx-squeezer/workspace:contributors\nnx g @nx-squeezer/workspace:github-workflow\nnx g @nx-squeezer/workspace:codecovGenerators \n\ncodecov\ncommitlint\ncontributors\neslint\ngithub-workflow\nlint-staged\nprettier\ntsconfig\n\ncodecov\nSetup command:\nnx g @nx-squeezer/workspace:codecovAdds codecov to a project to have coverage information, including:\n\nGenerating configuration file .codecov.yml.\nConfigures individual projects with test target to expose coverage information.\nUpdates CI file to upload coverage report.\nAdds badge to README.md.\n\ncommitlint\nSetup command:\nnx g @nx-squeezer/workspace:commitlintUses commitlint and husky to lint commit messages to adhere to conventional commits. It uses the default configuration provided by @commitlint/config-conventional.\ncontributors\nSetup command:\nnx g @nx-squeezer/workspace:contributorsAdds contributors attribution to README.md using contrib.rocks.\neslint\nSetup command, which will prompt one by one the set of rules that can be added:\nnx g @nx-squeezer/workspace:eslintAdds a set of ESLint rules to enhance code style in projects. Shipped as a generator instead of a configuration package so that it can be customized and edited by repo, and to automate the configuration of projects with TypeScript. Additionally, since it is an Nx plugin it can automatically apply upgrade changes if needed. The rules that it adds include:\n\neslint:recommended\nsonarjs/recommended\nunused-imports\n@typescript-eslint/recommended\ndeprecation\nimport/recommended\n\ngithub-workflow\nSetup command:\nnx g @nx-squeezer/workspace:github-workflowAdds a GitHub Action workflow to automate the CI pipeline for your repo. It includes the following actions:\n\nCheckout.\nSetup Node.\nInstall dependencies.\nTargets for build, test, lint, e2e.\nConfigure nx.json.\nWorkflow adapted to Nx workspaces.\nAdd a badge to README.md.\n\nOptions:\n\nForce overwriting of workflow with --force (default false).\nProvide default branch with --branch=master (default main).\nUse Nx Cloud --useNxCloud (default true).\n\nlint-staged\nSetup command:\nnx g @nx-squeezer/workspace:lint-stagedUses lint-staged and husky to lint files when being committed to the repo.\nprettier\nSetup command:\nnx g @nx-squeezer/workspace:prettierUpdates prettier configuration with some defaults, and adds prettier/recommended rule to ESLint configuration.\ntsconfig\nSetup command:\nnx g @nx-squeezer/workspace:tsconfigUpdates the tsconfig.json file adding a default configuration with stricter options enabled.\nContributors \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 6.0.4\n        \n            Description : Executors and generators for Nx and Angular projects\n        \n            Keywords : nx, angular, builders, executors, schematics, generators, codecov\n        \n            Homepage : https://github.com/nx-squeezer/squeezer/tree/main/packages/workspace\n        \n            Bugs : https://github.com/nx-squeezer/squeezer/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/nx-squeezer/squeezer.git\n        \n            Author : samuelfernandez\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ArrayElement   (src/.../eslint-config.ts)\n                        \n                        \n                            EsLintConfigurationOverrideRule   (src/.../eslint-config.ts)\n                        \n                        \n                            EsLintConfigurationOverrideRules   (src/.../eslint-config.ts)\n                        \n                        \n                            LintStagedConfig   (src/.../lint-staged.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/generators/eslint/eslint-config.ts\n    \n    \n        \n            \n                \n                    \n                    ArrayElement\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EsLintConfigurationOverrideRule\n                \n            \n            \n                \n                    ESLint configuration override rule.\n\n                \n            \n            \n                \n                        ArrayElement\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EsLintConfigurationOverrideRules\n                \n            \n            \n                \n                    ESLint configuration override rules.\n\n                \n            \n            \n                \n                        Exclude\n\n                \n            \n        \n    \n    src/generators/lint-staged/lint-staged.ts\n    \n    \n        \n            \n                \n                    \n                    LintStagedConfig\n                \n            \n            \n                \n                    Lint-staged configuration.\n\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            codecovDefault   (src/.../codecov.ts)\n                        \n                        \n                            codecovDotFile   (src/.../codecov.ts)\n                        \n                        \n                            codecovFile   (src/.../codecov.ts)\n                        \n                        \n                            codecovSchematic   (src/.../generator.compat.ts)\n                        \n                        \n                            commitlintCli   (src/.../commitlint.ts)\n                        \n                        \n                            commitlintConfigConventional   (src/.../commitlint.ts)\n                        \n                        \n                            commitlintConfigPath   (src/.../commitlint.ts)\n                        \n                        \n                            commitlintDefaultConfig   (src/.../commitlint.ts)\n                        \n                        \n                            commitlintSchematic   (src/.../generator.compat.ts)\n                        \n                        \n                            contributorsSchematic   (src/.../generator.compat.ts)\n                        \n                        \n                            deprecationRule   (src/.../rules.ts)\n                        \n                        \n                            eslintConfigFile   (src/.../eslint-config.ts)\n                        \n                        \n                            eslintPluginPrettier   (src/.../prettier.ts)\n                        \n                        \n                            esLintRule   (src/.../rules.ts)\n                        \n                        \n                            eslintSchematic   (src/.../generator.compat.ts)\n                        \n                        \n                            gitHubWorkflowSchematic   (src/.../generator.compat.ts)\n                        \n                        \n                            importOrderRule   (src/.../rules.ts)\n                        \n                        \n                            lintStaged   (src/.../lint-staged.ts)\n                        \n                        \n                            lintStagedConfigPath   (src/.../lint-staged.ts)\n                        \n                        \n                            lintStagedDefaultConfig   (src/.../lint-staged.ts)\n                        \n                        \n                            lintStagedSchematic   (src/.../generator.compat.ts)\n                        \n                        \n                            prettierConfigFile   (src/.../prettier.ts)\n                        \n                        \n                            prettierConfigJsonFile   (src/.../prettier.ts)\n                        \n                        \n                            prettierDefaultConfig   (src/.../prettier-default-config.ts)\n                        \n                        \n                            prettierPlugin   (src/.../prettier.ts)\n                        \n                        \n                            prettierSchematic   (src/.../generator.compat.ts)\n                        \n                        \n                            sonarJSRule   (src/.../rules.ts)\n                        \n                        \n                            tsConfigDefault   (src/.../tsconfig.ts)\n                        \n                        \n                            tsConfigFile   (src/.../tsconfig.ts)\n                        \n                        \n                            tsConfigSchematic   (src/.../generator.compat.ts)\n                        \n                        \n                            typescriptRule   (src/.../rules.ts)\n                        \n                        \n                            unusedImportsRule   (src/.../rules.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/generators/codecov/codecov.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        codecovDefault\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Codecov\n\n                    \n                \n                \n                    \n                        Default value : {\n  comment: {\n    layout: 'reach',\n    behavior: 'new',\n    require_changes: true,\n  },\n  coverage: {\n    range: '0..100',\n    round: 'nearest',\n    precision: 1,\n    status: {\n      patch: {\n        default: {\n          target: '50%',\n          threshold: '10%',\n        },\n      },\n      project: {\n        default: {\n          target: '50%',\n          threshold: '10%',\n        },\n      },\n    },\n  },\n}\n                    \n                \n\n            \n                \n                    Default codecov configuration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        codecovDotFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.codecov.yml'\n                    \n                \n\n            \n                \n                    Filename of codecov dot configuration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        codecovFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'codecov.yml'\n                    \n                \n\n            \n                \n                    Filename of codecov configuration.\n\n                \n            \n\n        \n    \n\n    src/generators/codecov/generator.compat.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        codecovSchematic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : convertNxGenerator(codecovGenerator)\n                    \n                \n\n            \n                \n                    Angular schematic to setup codecov.\n\n                \n            \n\n        \n    \n\n    src/generators/commitlint/commitlint.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        commitlintCli\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '@commitlint/cli'\n                    \n                \n\n            \n                \n                    Commitlint CLI NPM package.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitlintConfigConventional\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '@commitlint/config-conventional'\n                    \n                \n\n            \n                \n                    Commitlint conventional config NPM package.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitlintConfigPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.commitlintrc.json'\n                    \n                \n\n            \n                \n                    Filename of commitlint configuration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitlintDefaultConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommitlintConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  extends: ['@commitlint/config-conventional'],\n  rules: {\n    'body-max-line-length': [0, 'always'],\n  },\n}\n                    \n                \n\n            \n                \n                    Commitlint default configuration.\n\n                \n            \n\n        \n    \n\n    src/generators/commitlint/generator.compat.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        commitlintSchematic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : convertNxGenerator(commitlintGenerator)\n                    \n                \n\n            \n                \n                    Angular schematic to setup commitlint.\n\n                \n            \n\n        \n    \n\n    src/generators/contributors/generator.compat.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        contributorsSchematic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : convertNxGenerator(contributorsGenerator)\n                    \n                \n\n            \n                \n                    Angular schematic to setup contributors in README.\n\n                \n            \n\n        \n    \n\n    src/generators/eslint/rules.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deprecationRule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EsLintConfigurationOverrideRule\n\n                    \n                \n                \n                    \n                        Default value : {\n  files: ['*.ts', '*.tsx'],\n  rules: {\n    'deprecation/deprecation': 'error',\n  },\n}\n                    \n                \n\n            \n                \n                    ESLint deprecation rule.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        esLintRule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EsLintConfigurationOverrideRule\n\n                    \n                \n                \n                    \n                        Default value : {\n  files: ['*.ts', '*.tsx', '*.js', '*.jsx'],\n  extends: ['eslint:recommended'],\n  rules: {},\n}\n                    \n                \n\n            \n                \n                    ESLint recommended rule.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        importOrderRule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EsLintConfigurationOverrideRule\n\n                    \n                \n                \n                    \n                        Default value : {\n  files: ['*.ts', '*.tsx'],\n  extends: ['plugin:import/recommended', 'plugin:import/typescript'],\n  rules: {\n    'import/order': [\n      'error',\n      {\n        pathGroups: [{ pattern: '@nx-*/**', group: 'internal', position: 'before' }],\n        groups: ['builtin', 'external', 'internal', ['parent', 'sibling', 'index']],\n        pathGroupsExcludedImportTypes: [],\n        'newlines-between': 'always',\n        alphabetize: { order: 'asc', caseInsensitive: true },\n      },\n    ],\n    'import/no-unresolved': ['off'],\n  },\n  settings: {\n    'import/resolver': {\n      node: { extensions: ['.js', '.jsx', '.ts', '.tsx'] },\n      typescript: {},\n    },\n  },\n}\n                    \n                \n\n            \n                \n                    ESLint import order rule.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sonarJSRule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EsLintConfigurationOverrideRule\n\n                    \n                \n                \n                    \n                        Default value : {\n  files: ['*.ts', '*.tsx', '*.js', '*.jsx'],\n  extends: ['plugin:sonarjs/recommended'],\n  rules: {},\n}\n                    \n                \n\n            \n                \n                    ESLint SonarJS rule.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typescriptRule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EsLintConfigurationOverrideRule\n\n                    \n                \n                \n                    \n                        Default value : {\n  files: ['*.ts', '*.tsx'],\n  extends: ['plugin:@typescript-eslint/recommended'],\n  rules: {\n    '@typescript-eslint/explicit-member-accessibility': ['warn', { accessibility: 'no-public' }],\n    '@typescript-eslint/no-explicit-any': ['off'],\n    '@typescript-eslint/explicit-module-boundary-types': ['off'],\n    '@typescript-eslint/ban-types': ['off'],\n  },\n}\n                    \n                \n\n            \n                \n                    ESLint typescript rule.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unusedImportsRule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EsLintConfigurationOverrideRule\n\n                    \n                \n                \n                    \n                        Default value : {\n  files: ['*.ts', '*.tsx'],\n  rules: {\n    'unused-imports/no-unused-imports': 'error',\n  },\n}\n                    \n                \n\n            \n                \n                    ESLint unused imports rule.\n\n                \n            \n\n        \n    \n\n    src/generators/eslint/eslint-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        eslintConfigFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.eslintrc.json'\n                    \n                \n\n            \n                \n                    Filename of ESLint configuration.\n\n                \n            \n\n        \n    \n\n    src/generators/prettier/prettier.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        eslintPluginPrettier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'eslint-plugin-prettier'\n                    \n                \n\n            \n                \n                    Name of ESLint prettier npm package.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prettierConfigFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.prettierrc'\n                    \n                \n\n            \n                \n                    Filename of prettier config.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prettierConfigJsonFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.prettierrc.json'\n                    \n                \n\n            \n                \n                    Filename of prettier config in json.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prettierPlugin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'prettier'\n                    \n                \n\n            \n                \n                    Name of ESLint prettier plugin.\n\n                \n            \n\n        \n    \n\n    src/generators/eslint/generator.compat.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        eslintSchematic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : convertNxGenerator(eslintGenerator)\n                    \n                \n\n            \n                \n                    Angular schematic to setup ESLint in a workspace.\n\n                \n            \n\n        \n    \n\n    src/generators/github-workflow/generator.compat.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gitHubWorkflowSchematic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : convertNxGenerator(gitHubWorkflowGenerator)\n                    \n                \n\n            \n                \n                    Angular schematic to setup a CI GitHub workflow.\n\n                \n            \n\n        \n    \n\n    src/generators/lint-staged/lint-staged.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lintStaged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'lint-staged'\n                    \n                \n\n            \n                \n                    Lint-staged NPM package name.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lintStagedConfigPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.lintstagedrc.json'\n                    \n                \n\n            \n                \n                    Filename of lint-staged configuration file.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lintStagedDefaultConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LintStagedConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  '*.{json,scss,yml,html,md}': ['prettier --write'],\n  '*.{js,ts,html}': ['eslint --fix'],\n}\n                    \n                \n\n            \n                \n                    Lint-staged default configuration.\n\n                \n            \n\n        \n    \n\n    src/generators/lint-staged/generator.compat.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lintStagedSchematic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : convertNxGenerator(lintStagedGenerator)\n                    \n                \n\n            \n                \n                    Angular schematic to setup lint-staged and husky.\n\n                \n            \n\n        \n    \n\n    src/generators/prettier/prettier-default-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prettierDefaultConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Exclude\n\n                    \n                \n                \n                    \n                        Default value : {\n  printWidth: 120,\n  tabWidth: 2,\n  singleQuote: true,\n  trailingComma: 'es5',\n  bracketSpacing: true,\n  arrowParens: 'always',\n  overrides: [\n    {\n      files: '*.html',\n      options: {\n        parser: 'html',\n      },\n    },\n  ],\n}\n                    \n                \n\n            \n                \n                    Prettier default configuration.\n\n                \n            \n\n        \n    \n\n    src/generators/prettier/generator.compat.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prettierSchematic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : convertNxGenerator(prettierGenerator)\n                    \n                \n\n            \n                \n                    Angular schematic to setup prettier and format files in the workspace.\n\n                \n            \n\n        \n    \n\n    src/generators/tsconfig/tsconfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tsConfigDefault\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSONSchemaForTheTypeScriptCompilerSConfigurationFile\n\n                    \n                \n                \n                    \n                        Default value : {\n  compilerOptions: {\n    forceConsistentCasingInFileNames: true,\n    noImplicitAny: true,\n    noImplicitReturns: true,\n    noImplicitThis: true,\n    noFallthroughCasesInSwitch: true,\n    strict: true,\n  },\n}\n                    \n                \n\n            \n                \n                    Default configuration for tsconfig.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tsConfigFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'tsconfig.base.json'\n                    \n                \n\n            \n                \n                    Filename of tsconfig base file.\n\n                \n            \n\n        \n    \n\n    src/generators/tsconfig/generator.compat.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tsConfigSchematic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : convertNxGenerator(tsConfigGenerator)\n                    \n                \n\n            \n                \n                    Angular schematic to setup tsconfig and fix issues in the workspace.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
